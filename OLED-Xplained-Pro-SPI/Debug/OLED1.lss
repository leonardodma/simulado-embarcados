
OLED1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00006f14  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00406f14  00406f14  00016f14  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009d0  20400000  00406f1c  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          00000304  204009d0  004078ec  000209d0  2**2
                  ALLOC
  4 .stack        00002004  20400cd4  00407bf0  000209d0  2**0
                  ALLOC
  5 .heap         00000200  20402cd8  00409bf4  000209d0  2**0
                  ALLOC
  6 .ARM.attributes 0000002e  00000000  00000000  000209d0  2**0
                  CONTENTS, READONLY
  7 .comment      00000059  00000000  00000000  000209fe  2**0
                  CONTENTS, READONLY
  8 .debug_info   00017cea  00000000  00000000  00020a57  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 0000362e  00000000  00000000  00038741  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00005c95  00000000  00000000  0003bd6f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 000008f8  00000000  00000000  00041a04  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000958  00000000  00000000  000422fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00009d35  00000000  00000000  00042c54  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   0000e9de  00000000  00000000  0004c989  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    00090375  00000000  00000000  0005b367  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_frame  00001ff4  00000000  00000000  000eb6dc  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	d8 2c 40 20 5d 11 40 00 59 11 40 00 59 11 40 00     .,@ ].@.Y.@.Y.@.
  400010:	59 11 40 00 59 11 40 00 59 11 40 00 00 00 00 00     Y.@.Y.@.Y.@.....
	...
  40002c:	59 11 40 00 59 11 40 00 00 00 00 00 59 11 40 00     Y.@.Y.@.....Y.@.
  40003c:	59 11 40 00 59 11 40 00 59 11 40 00 81 16 40 00     Y.@.Y.@.Y.@...@.
  40004c:	59 11 40 00 59 11 40 00 59 11 40 00 59 11 40 00     Y.@.Y.@.Y.@.Y.@.
  40005c:	59 11 40 00 59 11 40 00 00 00 00 00 81 0f 40 00     Y.@.Y.@.......@.
  40006c:	95 0f 40 00 a9 0f 40 00 59 11 40 00 59 11 40 00     ..@...@.Y.@.Y.@.
  40007c:	59 11 40 00 bd 0f 40 00 d1 0f 40 00 59 11 40 00     Y.@...@...@.Y.@.
  40008c:	59 11 40 00 59 11 40 00 59 11 40 00 59 11 40 00     Y.@.Y.@.Y.@.Y.@.
  40009c:	59 11 40 00 59 11 40 00 59 11 40 00 59 11 40 00     Y.@.Y.@.Y.@.Y.@.
  4000ac:	59 11 40 00 59 11 40 00 59 11 40 00 59 11 40 00     Y.@.Y.@.Y.@.Y.@.
  4000bc:	59 11 40 00 59 11 40 00 59 11 40 00 59 11 40 00     Y.@.Y.@.Y.@.Y.@.
  4000cc:	59 11 40 00 00 00 00 00 59 11 40 00 00 00 00 00     Y.@.....Y.@.....
  4000dc:	59 11 40 00 59 11 40 00 59 11 40 00 59 11 40 00     Y.@.Y.@.Y.@.Y.@.
  4000ec:	59 11 40 00 59 11 40 00 59 11 40 00 59 11 40 00     Y.@.Y.@.Y.@.Y.@.
  4000fc:	59 11 40 00 59 11 40 00 59 11 40 00 59 11 40 00     Y.@.Y.@.Y.@.Y.@.
  40010c:	59 11 40 00 59 11 40 00 00 00 00 00 00 00 00 00     Y.@.Y.@.........
  40011c:	00 00 00 00 59 11 40 00 59 11 40 00 59 11 40 00     ....Y.@.Y.@.Y.@.
  40012c:	59 11 40 00 59 11 40 00 00 00 00 00 59 11 40 00     Y.@.Y.@.....Y.@.
  40013c:	59 11 40 00                                         Y.@.

00400140 <__do_global_dtors_aux>:
  400140:	b510      	push	{r4, lr}
  400142:	4c05      	ldr	r4, [pc, #20]	; (400158 <__do_global_dtors_aux+0x18>)
  400144:	7823      	ldrb	r3, [r4, #0]
  400146:	b933      	cbnz	r3, 400156 <__do_global_dtors_aux+0x16>
  400148:	4b04      	ldr	r3, [pc, #16]	; (40015c <__do_global_dtors_aux+0x1c>)
  40014a:	b113      	cbz	r3, 400152 <__do_global_dtors_aux+0x12>
  40014c:	4804      	ldr	r0, [pc, #16]	; (400160 <__do_global_dtors_aux+0x20>)
  40014e:	f3af 8000 	nop.w
  400152:	2301      	movs	r3, #1
  400154:	7023      	strb	r3, [r4, #0]
  400156:	bd10      	pop	{r4, pc}
  400158:	204009d0 	.word	0x204009d0
  40015c:	00000000 	.word	0x00000000
  400160:	00406f1c 	.word	0x00406f1c

00400164 <frame_dummy>:
  400164:	4b0c      	ldr	r3, [pc, #48]	; (400198 <frame_dummy+0x34>)
  400166:	b143      	cbz	r3, 40017a <frame_dummy+0x16>
  400168:	480c      	ldr	r0, [pc, #48]	; (40019c <frame_dummy+0x38>)
  40016a:	490d      	ldr	r1, [pc, #52]	; (4001a0 <frame_dummy+0x3c>)
  40016c:	b510      	push	{r4, lr}
  40016e:	f3af 8000 	nop.w
  400172:	480c      	ldr	r0, [pc, #48]	; (4001a4 <frame_dummy+0x40>)
  400174:	6803      	ldr	r3, [r0, #0]
  400176:	b923      	cbnz	r3, 400182 <frame_dummy+0x1e>
  400178:	bd10      	pop	{r4, pc}
  40017a:	480a      	ldr	r0, [pc, #40]	; (4001a4 <frame_dummy+0x40>)
  40017c:	6803      	ldr	r3, [r0, #0]
  40017e:	b933      	cbnz	r3, 40018e <frame_dummy+0x2a>
  400180:	4770      	bx	lr
  400182:	4b09      	ldr	r3, [pc, #36]	; (4001a8 <frame_dummy+0x44>)
  400184:	2b00      	cmp	r3, #0
  400186:	d0f7      	beq.n	400178 <frame_dummy+0x14>
  400188:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  40018c:	4718      	bx	r3
  40018e:	4b06      	ldr	r3, [pc, #24]	; (4001a8 <frame_dummy+0x44>)
  400190:	2b00      	cmp	r3, #0
  400192:	d0f5      	beq.n	400180 <frame_dummy+0x1c>
  400194:	4718      	bx	r3
  400196:	bf00      	nop
  400198:	00000000 	.word	0x00000000
  40019c:	00406f1c 	.word	0x00406f1c
  4001a0:	204009d4 	.word	0x204009d4
  4001a4:	00406f1c 	.word	0x00406f1c
  4001a8:	00000000 	.word	0x00000000

004001ac <rtc_set_hour_mode>:
 * \param p_rtc Pointer to an RTC instance.
 * \param ul_mode 1 for 12-hour mode, 0 for 24-hour mode.
 */
void rtc_set_hour_mode(Rtc *p_rtc, uint32_t ul_mode)
{
	if (ul_mode) {
  4001ac:	b921      	cbnz	r1, 4001b8 <rtc_set_hour_mode+0xc>
		p_rtc->RTC_MR |= RTC_MR_HRMOD;
	} else {
		p_rtc->RTC_MR &= (~RTC_MR_HRMOD);
  4001ae:	6843      	ldr	r3, [r0, #4]
  4001b0:	f023 0301 	bic.w	r3, r3, #1
  4001b4:	6043      	str	r3, [r0, #4]
  4001b6:	4770      	bx	lr
		p_rtc->RTC_MR |= RTC_MR_HRMOD;
  4001b8:	6843      	ldr	r3, [r0, #4]
  4001ba:	f043 0301 	orr.w	r3, r3, #1
  4001be:	6043      	str	r3, [r0, #4]
  4001c0:	4770      	bx	lr

004001c2 <rtc_enable_interrupt>:
 * \param p_rtc Pointer to an RTC instance.
 * \param ul_sources Interrupts to be enabled.
 */
void rtc_enable_interrupt(Rtc *p_rtc, uint32_t ul_sources)
{
	p_rtc->RTC_IER = ul_sources;
  4001c2:	6201      	str	r1, [r0, #32]
  4001c4:	4770      	bx	lr

004001c6 <rtc_get_time>:
 * \param pul_minute Current minute.
 * \param pul_second Current second.
 */
void rtc_get_time(Rtc *p_rtc, uint32_t *pul_hour, uint32_t *pul_minute,
		uint32_t *pul_second)
{
  4001c6:	b430      	push	{r4, r5}
	uint32_t ul_time;
	uint32_t ul_temp;

	/* Get the current RTC time (multiple reads are necessary to insure a stable value). */
	ul_time = p_rtc->RTC_TIMR;
  4001c8:	6885      	ldr	r5, [r0, #8]
	while (ul_time != p_rtc->RTC_TIMR) {
  4001ca:	6884      	ldr	r4, [r0, #8]
  4001cc:	42a5      	cmp	r5, r4
  4001ce:	d003      	beq.n	4001d8 <rtc_get_time+0x12>
		ul_time = p_rtc->RTC_TIMR;
  4001d0:	6885      	ldr	r5, [r0, #8]
	while (ul_time != p_rtc->RTC_TIMR) {
  4001d2:	6884      	ldr	r4, [r0, #8]
  4001d4:	42ac      	cmp	r4, r5
  4001d6:	d1fb      	bne.n	4001d0 <rtc_get_time+0xa>
	}

	/* Hour */
	if (pul_hour) {
  4001d8:	b161      	cbz	r1, 4001f4 <rtc_get_time+0x2e>
		ul_temp = (ul_time & RTC_TIMR_HOUR_Msk) >> RTC_TIMR_HOUR_Pos;
		*pul_hour = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
  4001da:	f3c4 5001 	ubfx	r0, r4, #20, #2
  4001de:	eb00 0580 	add.w	r5, r0, r0, lsl #2
  4001e2:	f3c4 4003 	ubfx	r0, r4, #16, #4
  4001e6:	eb00 0045 	add.w	r0, r0, r5, lsl #1

		if ((ul_time & RTC_TIMR_AMPM) == RTC_TIMR_AMPM) {
  4001ea:	f414 0f80 	tst.w	r4, #4194304	; 0x400000
			*pul_hour += 12;
  4001ee:	bf18      	it	ne
  4001f0:	300c      	addne	r0, #12
  4001f2:	6008      	str	r0, [r1, #0]
		}
	}

	/* Minute */
	if (pul_minute) {
  4001f4:	b142      	cbz	r2, 400208 <rtc_get_time+0x42>
		ul_temp = (ul_time & RTC_TIMR_MIN_Msk) >> RTC_TIMR_MIN_Pos;
		*pul_minute = (ul_temp >> BCD_SHIFT) * BCD_FACTOR +  (ul_temp & BCD_MASK);
  4001f6:	f3c4 3102 	ubfx	r1, r4, #12, #3
  4001fa:	eb01 0181 	add.w	r1, r1, r1, lsl #2
  4001fe:	f3c4 2003 	ubfx	r0, r4, #8, #4
  400202:	eb00 0141 	add.w	r1, r0, r1, lsl #1
  400206:	6011      	str	r1, [r2, #0]
	}

	/* Second */
	if (pul_second) {
  400208:	b143      	cbz	r3, 40021c <rtc_get_time+0x56>
		ul_temp = (ul_time & RTC_TIMR_SEC_Msk) >> RTC_TIMR_SEC_Pos;
		*pul_second = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
  40020a:	f3c4 1202 	ubfx	r2, r4, #4, #3
  40020e:	eb02 0282 	add.w	r2, r2, r2, lsl #2
  400212:	f004 040f 	and.w	r4, r4, #15
  400216:	eb04 0442 	add.w	r4, r4, r2, lsl #1
  40021a:	601c      	str	r4, [r3, #0]
	}
}
  40021c:	bc30      	pop	{r4, r5}
  40021e:	4770      	bx	lr

00400220 <rtc_set_time>:
 *
 * \return 0 for OK, else invalid setting.
 */
uint32_t rtc_set_time(Rtc *p_rtc, uint32_t ul_hour, uint32_t ul_minute,
		uint32_t ul_second)
{
  400220:	b4f0      	push	{r4, r5, r6, r7}
	uint32_t ul_time = 0;

	/* If 12-hour mode, set AMPM bit */
	if ((p_rtc->RTC_MR & RTC_MR_HRMOD) == RTC_MR_HRMOD) {
  400222:	6844      	ldr	r4, [r0, #4]
		if (ul_hour > 12) {
  400224:	f014 0f01 	tst.w	r4, #1
  400228:	d005      	beq.n	400236 <rtc_set_time+0x16>
  40022a:	290c      	cmp	r1, #12
  40022c:	d903      	bls.n	400236 <rtc_set_time+0x16>
			ul_hour -= 12;
  40022e:	390c      	subs	r1, #12
			ul_time |= RTC_TIMR_AMPM;
  400230:	f44f 0780 	mov.w	r7, #4194304	; 0x400000
  400234:	e000      	b.n	400238 <rtc_set_time+0x18>
	uint32_t ul_time = 0;
  400236:	2700      	movs	r7, #0
	/* Minute */
	ul_time |= ((ul_minute / BCD_FACTOR) << (RTC_TIMR_MIN_Pos + BCD_SHIFT)) |
			((ul_minute % BCD_FACTOR) << RTC_TIMR_MIN_Pos);

	/* Second */
	ul_time |= ((ul_second / BCD_FACTOR) << (RTC_TIMR_SEC_Pos + BCD_SHIFT)) |
  400238:	4c1c      	ldr	r4, [pc, #112]	; (4002ac <rtc_set_time+0x8c>)
  40023a:	fba4 5603 	umull	r5, r6, r4, r3
  40023e:	08f6      	lsrs	r6, r6, #3
			((ul_second % BCD_FACTOR) << RTC_TIMR_SEC_Pos);
  400240:	eb06 0586 	add.w	r5, r6, r6, lsl #2
  400244:	eba3 0345 	sub.w	r3, r3, r5, lsl #1
  400248:	ea43 1306 	orr.w	r3, r3, r6, lsl #4
	ul_time |= ((ul_minute / BCD_FACTOR) << (RTC_TIMR_MIN_Pos + BCD_SHIFT)) |
  40024c:	fba4 6502 	umull	r6, r5, r4, r2
  400250:	08ed      	lsrs	r5, r5, #3
  400252:	ea43 3305 	orr.w	r3, r3, r5, lsl #12
			((ul_minute % BCD_FACTOR) << RTC_TIMR_MIN_Pos);
  400256:	eb05 0585 	add.w	r5, r5, r5, lsl #2
  40025a:	eba2 0545 	sub.w	r5, r2, r5, lsl #1
  40025e:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
  400262:	433b      	orrs	r3, r7
	ul_time |= ((ul_hour / BCD_FACTOR) << (RTC_TIMR_HOUR_Pos + BCD_SHIFT)) |
  400264:	fba4 4201 	umull	r4, r2, r4, r1
  400268:	08d2      	lsrs	r2, r2, #3
  40026a:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
			((ul_hour % BCD_FACTOR) << RTC_TIMR_HOUR_Pos);
  40026e:	eb02 0282 	add.w	r2, r2, r2, lsl #2
  400272:	eba1 0142 	sub.w	r1, r1, r2, lsl #1
	ul_time |= ((ul_second / BCD_FACTOR) << (RTC_TIMR_SEC_Pos + BCD_SHIFT)) |
  400276:	ea43 4101 	orr.w	r1, r3, r1, lsl #16

	/* Update time register. Check the spec for the flow. */
	while ((p_rtc->RTC_SR & RTC_SR_SEC) != RTC_SR_SEC);
  40027a:	6983      	ldr	r3, [r0, #24]
  40027c:	f013 0f04 	tst.w	r3, #4
  400280:	d0fb      	beq.n	40027a <rtc_set_time+0x5a>
	p_rtc->RTC_CR |= RTC_CR_UPDTIM;
  400282:	6803      	ldr	r3, [r0, #0]
  400284:	f043 0301 	orr.w	r3, r3, #1
  400288:	6003      	str	r3, [r0, #0]
	while ((p_rtc->RTC_SR & RTC_SR_ACKUPD) != RTC_SR_ACKUPD);
  40028a:	6983      	ldr	r3, [r0, #24]
  40028c:	f013 0f01 	tst.w	r3, #1
  400290:	d0fb      	beq.n	40028a <rtc_set_time+0x6a>
	p_rtc->RTC_SCCR = RTC_SCCR_ACKCLR;
  400292:	2301      	movs	r3, #1
  400294:	61c3      	str	r3, [r0, #28]
	p_rtc->RTC_TIMR = ul_time;
  400296:	6081      	str	r1, [r0, #8]
	p_rtc->RTC_CR &= (~RTC_CR_UPDTIM);
  400298:	6803      	ldr	r3, [r0, #0]
  40029a:	f023 0301 	bic.w	r3, r3, #1
  40029e:	6003      	str	r3, [r0, #0]

	return (p_rtc->RTC_VER & RTC_VER_NVTIM);
  4002a0:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
}
  4002a2:	f000 0001 	and.w	r0, r0, #1
  4002a6:	bcf0      	pop	{r4, r5, r6, r7}
  4002a8:	4770      	bx	lr
  4002aa:	bf00      	nop
  4002ac:	cccccccd 	.word	0xcccccccd

004002b0 <rtc_set_time_alarm>:
 */
uint32_t rtc_set_time_alarm(Rtc *p_rtc,
		uint32_t ul_hour_flag, uint32_t ul_hour,
		uint32_t ul_minute_flag, uint32_t ul_minute,
		uint32_t ul_second_flag, uint32_t ul_second)
{
  4002b0:	b5f0      	push	{r4, r5, r6, r7, lr}
  4002b2:	9c05      	ldr	r4, [sp, #20]
  4002b4:	9d06      	ldr	r5, [sp, #24]
  4002b6:	9f07      	ldr	r7, [sp, #28]
	uint32_t ul_alarm = 0;

	/* Hour alarm setting */
	if (ul_hour_flag) {
  4002b8:	460e      	mov	r6, r1
  4002ba:	b1b1      	cbz	r1, 4002ea <rtc_set_time_alarm+0x3a>
		/* If 12-hour mode, set AMPM bit */
		if ((p_rtc->RTC_MR & RTC_MR_HRMOD) == RTC_MR_HRMOD) {
  4002bc:	6841      	ldr	r1, [r0, #4]
			if (ul_hour > 12) {
  4002be:	f011 0f01 	tst.w	r1, #1
  4002c2:	d005      	beq.n	4002d0 <rtc_set_time_alarm+0x20>
  4002c4:	2a0c      	cmp	r2, #12
  4002c6:	d903      	bls.n	4002d0 <rtc_set_time_alarm+0x20>
				ul_hour -= 12;
  4002c8:	3a0c      	subs	r2, #12
				ul_alarm |= RTC_TIMR_AMPM;
  4002ca:	f44f 0680 	mov.w	r6, #4194304	; 0x400000
  4002ce:	e000      	b.n	4002d2 <rtc_set_time_alarm+0x22>
	uint32_t ul_alarm = 0;
  4002d0:	2600      	movs	r6, #0
			}
		}

		ul_alarm |= ((ul_hour / BCD_FACTOR) << (RTC_TIMR_HOUR_Pos + BCD_SHIFT)) |
  4002d2:	4919      	ldr	r1, [pc, #100]	; (400338 <rtc_set_time_alarm+0x88>)
  4002d4:	fba1 e102 	umull	lr, r1, r1, r2
  4002d8:	08c9      	lsrs	r1, r1, #3
				((ul_hour % BCD_FACTOR) << RTC_TIMR_HOUR_Pos);
  4002da:	eb01 0e81 	add.w	lr, r1, r1, lsl #2
  4002de:	eba2 024e 	sub.w	r2, r2, lr, lsl #1
  4002e2:	0412      	lsls	r2, r2, #16
		ul_alarm |= ((ul_hour / BCD_FACTOR) << (RTC_TIMR_HOUR_Pos + BCD_SHIFT)) |
  4002e4:	ea42 5201 	orr.w	r2, r2, r1, lsl #20
  4002e8:	4316      	orrs	r6, r2
	}

	/* Minute alarm setting */
	if (ul_minute_flag) {
  4002ea:	b15b      	cbz	r3, 400304 <rtc_set_time_alarm+0x54>
		ul_alarm |= ((ul_minute / BCD_FACTOR) << (RTC_TIMR_MIN_Pos + BCD_SHIFT)) |
  4002ec:	4b12      	ldr	r3, [pc, #72]	; (400338 <rtc_set_time_alarm+0x88>)
  4002ee:	fba3 2304 	umull	r2, r3, r3, r4
  4002f2:	08db      	lsrs	r3, r3, #3
				((ul_minute % BCD_FACTOR) << RTC_TIMR_MIN_Pos);
  4002f4:	eb03 0283 	add.w	r2, r3, r3, lsl #2
  4002f8:	eba4 0442 	sub.w	r4, r4, r2, lsl #1
  4002fc:	0224      	lsls	r4, r4, #8
		ul_alarm |= ((ul_minute / BCD_FACTOR) << (RTC_TIMR_MIN_Pos + BCD_SHIFT)) |
  4002fe:	ea44 3403 	orr.w	r4, r4, r3, lsl #12
  400302:	4326      	orrs	r6, r4
	}

	/* Second alarm setting */
	if (ul_second_flag) {
  400304:	b155      	cbz	r5, 40031c <rtc_set_time_alarm+0x6c>
		ul_alarm |= ((ul_second / BCD_FACTOR) << (RTC_TIMR_SEC_Pos + BCD_SHIFT)) |
  400306:	4b0c      	ldr	r3, [pc, #48]	; (400338 <rtc_set_time_alarm+0x88>)
  400308:	fba3 2307 	umull	r2, r3, r3, r7
  40030c:	08db      	lsrs	r3, r3, #3
				((ul_second % BCD_FACTOR) << RTC_TIMR_SEC_Pos);
  40030e:	eb03 0283 	add.w	r2, r3, r3, lsl #2
  400312:	eba7 0742 	sub.w	r7, r7, r2, lsl #1
		ul_alarm |= ((ul_second / BCD_FACTOR) << (RTC_TIMR_SEC_Pos + BCD_SHIFT)) |
  400316:	ea47 1303 	orr.w	r3, r7, r3, lsl #4
  40031a:	431e      	orrs	r6, r3
	}

	p_rtc->RTC_TIMALR &= ~(RTC_TIMALR_SECEN | RTC_TIMALR_MINEN | RTC_TIMALR_HOUREN);
  40031c:	6902      	ldr	r2, [r0, #16]
  40031e:	4b07      	ldr	r3, [pc, #28]	; (40033c <rtc_set_time_alarm+0x8c>)
  400320:	4013      	ands	r3, r2
  400322:	6103      	str	r3, [r0, #16]
	p_rtc->RTC_TIMALR = ul_alarm;
  400324:	6106      	str	r6, [r0, #16]
	p_rtc->RTC_TIMALR |= (RTC_TIMALR_SECEN | RTC_TIMALR_MINEN | RTC_TIMALR_HOUREN);
  400326:	6902      	ldr	r2, [r0, #16]
  400328:	4b05      	ldr	r3, [pc, #20]	; (400340 <rtc_set_time_alarm+0x90>)
  40032a:	4313      	orrs	r3, r2
  40032c:	6103      	str	r3, [r0, #16]

	return (p_rtc->RTC_VER & RTC_VER_NVTIMALR);
  40032e:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
}
  400330:	f000 0004 	and.w	r0, r0, #4
  400334:	bdf0      	pop	{r4, r5, r6, r7, pc}
  400336:	bf00      	nop
  400338:	cccccccd 	.word	0xcccccccd
  40033c:	ff7f7f7f 	.word	0xff7f7f7f
  400340:	00808080 	.word	0x00808080

00400344 <rtc_set_date>:
 *
 * \return 0 for OK, else invalid setting.
 */
uint32_t rtc_set_date(Rtc *p_rtc, uint32_t ul_year, uint32_t ul_month,
		uint32_t ul_day, uint32_t ul_week)
{
  400344:	b470      	push	{r4, r5, r6}

	/* Week */
	ul_date |= (ul_week << RTC_CALR_DAY_Pos);

	/* Day */
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  400346:	4d2a      	ldr	r5, [pc, #168]	; (4003f0 <rtc_set_date+0xac>)
  400348:	fba5 4603 	umull	r4, r6, r5, r3
  40034c:	08f6      	lsrs	r6, r6, #3
	ul_date |= (ul_week << RTC_CALR_DAY_Pos);
  40034e:	9c03      	ldr	r4, [sp, #12]
  400350:	0564      	lsls	r4, r4, #21
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  400352:	ea44 7406 	orr.w	r4, r4, r6, lsl #28
			((ul_day % BCD_FACTOR) << RTC_CALR_DATE_Pos);
  400356:	eb06 0686 	add.w	r6, r6, r6, lsl #2
  40035a:	eba3 0346 	sub.w	r3, r3, r6, lsl #1
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  40035e:	ea44 6303 	orr.w	r3, r4, r3, lsl #24
	ul_date |= ((ul_month / BCD_FACTOR) << (RTC_CALR_MONTH_Pos + BCD_SHIFT)) |
  400362:	fba5 6402 	umull	r6, r4, r5, r2
  400366:	08e4      	lsrs	r4, r4, #3
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  400368:	ea43 5304 	orr.w	r3, r3, r4, lsl #20
			((ul_month % BCD_FACTOR) << RTC_CALR_MONTH_Pos);
  40036c:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  400370:	eba2 0244 	sub.w	r2, r2, r4, lsl #1
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  400374:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
	ul_date |= ((ul_year / BCD_FACTOR / BCD_FACTOR / BCD_FACTOR) <<
  400378:	4b1e      	ldr	r3, [pc, #120]	; (4003f4 <rtc_set_date+0xb0>)
  40037a:	fba3 4301 	umull	r4, r3, r3, r1
  40037e:	099b      	lsrs	r3, r3, #6
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  400380:	ea42 1203 	orr.w	r2, r2, r3, lsl #4
			((ul_year / BCD_FACTOR / BCD_FACTOR) % BCD_FACTOR) <<  RTC_CALR_CENT_Pos);
  400384:	4b1c      	ldr	r3, [pc, #112]	; (4003f8 <rtc_set_date+0xb4>)
  400386:	fba3 4301 	umull	r4, r3, r3, r1
  40038a:	095b      	lsrs	r3, r3, #5
  40038c:	fba5 6403 	umull	r6, r4, r5, r3
  400390:	08e4      	lsrs	r4, r4, #3
  400392:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  400396:	eba3 0344 	sub.w	r3, r3, r4, lsl #1
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  40039a:	431a      	orrs	r2, r3
			((ul_year % BCD_FACTOR) << RTC_CALR_YEAR_Pos);
  40039c:	fba5 4301 	umull	r4, r3, r5, r1
  4003a0:	08db      	lsrs	r3, r3, #3
  4003a2:	eb03 0483 	add.w	r4, r3, r3, lsl #2
  4003a6:	eba1 0144 	sub.w	r1, r1, r4, lsl #1
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  4003aa:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
	ul_date |= (((ul_year / BCD_FACTOR) % BCD_FACTOR) <<
  4003ae:	fba5 1503 	umull	r1, r5, r5, r3
  4003b2:	08ed      	lsrs	r5, r5, #3
  4003b4:	eb05 0585 	add.w	r5, r5, r5, lsl #2
  4003b8:	eba3 0545 	sub.w	r5, r3, r5, lsl #1
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  4003bc:	ea42 3205 	orr.w	r2, r2, r5, lsl #12

	/* Update calendar register. Check the spec for the flow. */
	while ((p_rtc->RTC_SR & RTC_SR_SEC) != RTC_SR_SEC);
  4003c0:	6983      	ldr	r3, [r0, #24]
  4003c2:	f013 0f04 	tst.w	r3, #4
  4003c6:	d0fb      	beq.n	4003c0 <rtc_set_date+0x7c>
	p_rtc->RTC_CR |= RTC_CR_UPDCAL;
  4003c8:	6803      	ldr	r3, [r0, #0]
  4003ca:	f043 0302 	orr.w	r3, r3, #2
  4003ce:	6003      	str	r3, [r0, #0]
	while ((p_rtc->RTC_SR & RTC_SR_ACKUPD) != RTC_SR_ACKUPD);
  4003d0:	6983      	ldr	r3, [r0, #24]
  4003d2:	f013 0f01 	tst.w	r3, #1
  4003d6:	d0fb      	beq.n	4003d0 <rtc_set_date+0x8c>
	p_rtc->RTC_SCCR = RTC_SCCR_ACKCLR;
  4003d8:	2301      	movs	r3, #1
  4003da:	61c3      	str	r3, [r0, #28]
	p_rtc->RTC_CALR = ul_date;
  4003dc:	60c2      	str	r2, [r0, #12]
	p_rtc->RTC_CR &= (~RTC_CR_UPDCAL);
  4003de:	6803      	ldr	r3, [r0, #0]
  4003e0:	f023 0302 	bic.w	r3, r3, #2
  4003e4:	6003      	str	r3, [r0, #0]

	return (p_rtc->RTC_VER & RTC_VER_NVCAL);
  4003e6:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
}
  4003e8:	f000 0002 	and.w	r0, r0, #2
  4003ec:	bc70      	pop	{r4, r5, r6}
  4003ee:	4770      	bx	lr
  4003f0:	cccccccd 	.word	0xcccccccd
  4003f4:	10624dd3 	.word	0x10624dd3
  4003f8:	51eb851f 	.word	0x51eb851f

004003fc <rtc_set_date_alarm>:
 * \return 0 for OK, else invalid setting.
 */
uint32_t rtc_set_date_alarm(Rtc *p_rtc,
		uint32_t ul_month_flag, uint32_t ul_month,
		uint32_t ul_day_flag, uint32_t ul_day)
{
  4003fc:	b430      	push	{r4, r5}
  4003fe:	9d02      	ldr	r5, [sp, #8]
	uint32_t ul_alarm = 0;

	/* Month alarm setting */
	if (ul_month_flag) {
  400400:	460c      	mov	r4, r1
  400402:	b151      	cbz	r1, 40041a <rtc_set_date_alarm+0x1e>
		ul_alarm |= ((ul_month / BCD_FACTOR) << (RTC_CALR_MONTH_Pos + BCD_SHIFT)) |
  400404:	4c12      	ldr	r4, [pc, #72]	; (400450 <rtc_set_date_alarm+0x54>)
  400406:	fba4 1402 	umull	r1, r4, r4, r2
  40040a:	08e4      	lsrs	r4, r4, #3
				((ul_month % BCD_FACTOR) << RTC_CALR_MONTH_Pos);
  40040c:	eb04 0184 	add.w	r1, r4, r4, lsl #2
  400410:	eba2 0241 	sub.w	r2, r2, r1, lsl #1
  400414:	0412      	lsls	r2, r2, #16
		ul_alarm |= ((ul_month / BCD_FACTOR) << (RTC_CALR_MONTH_Pos + BCD_SHIFT)) |
  400416:	ea42 5404 	orr.w	r4, r2, r4, lsl #20
	}

	/* Day alarm setting */
	if (ul_day_flag) {
  40041a:	b15b      	cbz	r3, 400434 <rtc_set_date_alarm+0x38>
		ul_alarm |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  40041c:	4a0c      	ldr	r2, [pc, #48]	; (400450 <rtc_set_date_alarm+0x54>)
  40041e:	fba2 3205 	umull	r3, r2, r2, r5
  400422:	08d2      	lsrs	r2, r2, #3
				((ul_day % BCD_FACTOR) << RTC_CALR_DATE_Pos);
  400424:	eb02 0382 	add.w	r3, r2, r2, lsl #2
  400428:	eba5 0343 	sub.w	r3, r5, r3, lsl #1
  40042c:	061b      	lsls	r3, r3, #24
		ul_alarm |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  40042e:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
  400432:	431c      	orrs	r4, r3
	}

	/* Set alarm */
	p_rtc->RTC_CALALR &= ~(RTC_CALALR_MTHEN | RTC_CALALR_DATEEN);
  400434:	6942      	ldr	r2, [r0, #20]
  400436:	4b07      	ldr	r3, [pc, #28]	; (400454 <rtc_set_date_alarm+0x58>)
  400438:	4013      	ands	r3, r2
  40043a:	6143      	str	r3, [r0, #20]
	p_rtc->RTC_CALALR = ul_alarm;
  40043c:	6144      	str	r4, [r0, #20]
	p_rtc->RTC_CALALR |= (RTC_CALALR_MTHEN | RTC_CALALR_DATEEN);
  40043e:	6942      	ldr	r2, [r0, #20]
  400440:	4b05      	ldr	r3, [pc, #20]	; (400458 <rtc_set_date_alarm+0x5c>)
  400442:	4313      	orrs	r3, r2
  400444:	6143      	str	r3, [r0, #20]

	return (p_rtc->RTC_VER & RTC_VER_NVCALALR);
  400446:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
}
  400448:	f000 0008 	and.w	r0, r0, #8
  40044c:	bc30      	pop	{r4, r5}
  40044e:	4770      	bx	lr
  400450:	cccccccd 	.word	0xcccccccd
  400454:	7f7fffff 	.word	0x7f7fffff
  400458:	80800000 	.word	0x80800000

0040045c <rtc_get_status>:
 *
 * \return Status of the RTC.
 */
uint32_t rtc_get_status(Rtc *p_rtc)
{
	return (p_rtc->RTC_SR);
  40045c:	6980      	ldr	r0, [r0, #24]
}
  40045e:	4770      	bx	lr

00400460 <rtc_clear_status>:
 * \param p_rtc Pointer to an RTC instance.
 * \param ul_clear Some flag bits which will be cleared.
 */
void rtc_clear_status(Rtc *p_rtc, uint32_t ul_clear)
{
	p_rtc->RTC_SCCR = ul_clear;
  400460:	61c1      	str	r1, [r0, #28]
  400462:	4770      	bx	lr

00400464 <spi_enable_clock>:
 * \brief Enable SPI clock.
 *
 * \param p_spi Pointer to an SPI instance.
 */
void spi_enable_clock(Spi *p_spi)
{
  400464:	b508      	push	{r3, lr}
#if (SAM4S || SAM3S || SAM3N || SAM3U || SAM4E || SAM4N || SAMG51|| SAMG53|| SAMG54)
	UNUSED(p_spi);
	sysclk_enable_peripheral_clock(ID_SPI);
#elif (SAM3XA || SAM4C || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	if (p_spi == SPI0) {
  400466:	4b07      	ldr	r3, [pc, #28]	; (400484 <spi_enable_clock+0x20>)
  400468:	4298      	cmp	r0, r3
  40046a:	d003      	beq.n	400474 <spi_enable_clock+0x10>
		sysclk_enable_peripheral_clock(ID_SPI0);
	}
	#ifdef SPI1
	else if (p_spi == SPI1) {
  40046c:	4b06      	ldr	r3, [pc, #24]	; (400488 <spi_enable_clock+0x24>)
  40046e:	4298      	cmp	r0, r3
  400470:	d004      	beq.n	40047c <spi_enable_clock+0x18>
  400472:	bd08      	pop	{r3, pc}
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  400474:	2015      	movs	r0, #21
  400476:	4b05      	ldr	r3, [pc, #20]	; (40048c <spi_enable_clock+0x28>)
  400478:	4798      	blx	r3
  40047a:	bd08      	pop	{r3, pc}
  40047c:	202a      	movs	r0, #42	; 0x2a
  40047e:	4b03      	ldr	r3, [pc, #12]	; (40048c <spi_enable_clock+0x28>)
  400480:	4798      	blx	r3
	}
	#endif
#elif SAM4L
	sysclk_enable_peripheral_clock(p_spi);
#endif
}
  400482:	e7f6      	b.n	400472 <spi_enable_clock+0xe>
  400484:	40008000 	.word	0x40008000
  400488:	40058000 	.word	0x40058000
  40048c:	00401105 	.word	0x00401105

00400490 <spi_set_peripheral_chip_select_value>:
 *                 \ref spi_enable_peripheral_select_decode,
 *                 \ref spi_disable_peripheral_select_decode.
 */
void spi_set_peripheral_chip_select_value(Spi *p_spi, uint32_t ul_value)
{
	p_spi->SPI_MR &= (~SPI_MR_PCS_Msk);
  400490:	6843      	ldr	r3, [r0, #4]
  400492:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
  400496:	6043      	str	r3, [r0, #4]
	p_spi->SPI_MR |= SPI_MR_PCS(ul_value);
  400498:	6843      	ldr	r3, [r0, #4]
  40049a:	0409      	lsls	r1, r1, #16
  40049c:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
  4004a0:	4319      	orrs	r1, r3
  4004a2:	6041      	str	r1, [r0, #4]
  4004a4:	4770      	bx	lr

004004a6 <spi_write>:
 * \retval SPI_OK on Success.
 * \retval SPI_ERROR_TIMEOUT on Time-out.
 */
spi_status_t spi_write(Spi *p_spi, uint16_t us_data,
		uint8_t uc_pcs, uint8_t uc_last)
{
  4004a6:	b430      	push	{r4, r5}
	uint32_t timeout = SPI_TIMEOUT;
	uint32_t value;

	while (!(p_spi->SPI_SR & SPI_SR_TDRE)) {
  4004a8:	f643 2499 	movw	r4, #15001	; 0x3a99
  4004ac:	6905      	ldr	r5, [r0, #16]
  4004ae:	f015 0f02 	tst.w	r5, #2
  4004b2:	d103      	bne.n	4004bc <spi_write+0x16>
		if (!timeout--) {
  4004b4:	3c01      	subs	r4, #1
  4004b6:	d1f9      	bne.n	4004ac <spi_write+0x6>
			return SPI_ERROR_TIMEOUT;
  4004b8:	2001      	movs	r0, #1
  4004ba:	e00c      	b.n	4004d6 <spi_write+0x30>
 *
 * \return 1 for Variable mode, 0 for fixed mode.
 */
static inline uint32_t spi_get_peripheral_select_mode(Spi *p_spi)
{
	if (p_spi->SPI_MR & SPI_MR_PS) {
  4004bc:	6844      	ldr	r4, [r0, #4]
		}
	}

	if (spi_get_peripheral_select_mode(p_spi)) {
  4004be:	f014 0f02 	tst.w	r4, #2
  4004c2:	d006      	beq.n	4004d2 <spi_write+0x2c>
		value = SPI_TDR_TD(us_data) | SPI_TDR_PCS(uc_pcs);
  4004c4:	0412      	lsls	r2, r2, #16
  4004c6:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
  4004ca:	4311      	orrs	r1, r2
		if (uc_last) {
  4004cc:	b10b      	cbz	r3, 4004d2 <spi_write+0x2c>
			value |= SPI_TDR_LASTXFER;
  4004ce:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
		}
	} else {
		value = SPI_TDR_TD(us_data);
	}

	p_spi->SPI_TDR = value;
  4004d2:	60c1      	str	r1, [r0, #12]

	return SPI_OK;
  4004d4:	2000      	movs	r0, #0
}
  4004d6:	bc30      	pop	{r4, r5}
  4004d8:	4770      	bx	lr

004004da <spi_set_clock_polarity>:
 * \param ul_polarity Default clock state is logical one(high)/zero(low).
 */
void spi_set_clock_polarity(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_polarity)
{
	if (ul_polarity) {
  4004da:	b932      	cbnz	r2, 4004ea <spi_set_clock_polarity+0x10>
  4004dc:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CPOL);
  4004e0:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4004e2:	f023 0301 	bic.w	r3, r3, #1
  4004e6:	6303      	str	r3, [r0, #48]	; 0x30
  4004e8:	4770      	bx	lr
  4004ea:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
  4004ee:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4004f0:	f043 0301 	orr.w	r3, r3, #1
  4004f4:	6303      	str	r3, [r0, #48]	; 0x30
  4004f6:	4770      	bx	lr

004004f8 <spi_set_clock_phase>:
 *  \param ul_pcs_ch Peripheral Chip Select channel (0~3).
 *  \param ul_phase Data capture on the rising/falling edge of clock.
 */
void spi_set_clock_phase(Spi *p_spi, uint32_t ul_pcs_ch, uint32_t ul_phase)
{
	if (ul_phase) {
  4004f8:	b932      	cbnz	r2, 400508 <spi_set_clock_phase+0x10>
  4004fa:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_NCPHA);
  4004fe:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400500:	f023 0302 	bic.w	r3, r3, #2
  400504:	6303      	str	r3, [r0, #48]	; 0x30
  400506:	4770      	bx	lr
  400508:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
  40050c:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40050e:	f043 0302 	orr.w	r3, r3, #2
  400512:	6303      	str	r3, [r0, #48]	; 0x30
  400514:	4770      	bx	lr

00400516 <spi_configure_cs_behavior>:
 * \param ul_cs_behavior Behavior of the Chip Select after transfer.
 */
void spi_configure_cs_behavior(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_cs_behavior)
{
	if (ul_cs_behavior == SPI_CS_RISE_FORCED) {
  400516:	2a04      	cmp	r2, #4
  400518:	d003      	beq.n	400522 <spi_configure_cs_behavior+0xc>
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSNAAT;
	} else if (ul_cs_behavior == SPI_CS_RISE_NO_TX) {
  40051a:	b16a      	cbz	r2, 400538 <spi_configure_cs_behavior+0x22>
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSNAAT);
	} else if (ul_cs_behavior == SPI_CS_KEEP_LOW) {
  40051c:	2a08      	cmp	r2, #8
  40051e:	d016      	beq.n	40054e <spi_configure_cs_behavior+0x38>
  400520:	4770      	bx	lr
  400522:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
  400526:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400528:	f023 0308 	bic.w	r3, r3, #8
  40052c:	6303      	str	r3, [r0, #48]	; 0x30
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSNAAT;
  40052e:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400530:	f043 0304 	orr.w	r3, r3, #4
  400534:	6303      	str	r3, [r0, #48]	; 0x30
  400536:	4770      	bx	lr
  400538:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
  40053c:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40053e:	f023 0308 	bic.w	r3, r3, #8
  400542:	6303      	str	r3, [r0, #48]	; 0x30
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSNAAT);
  400544:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400546:	f023 0304 	bic.w	r3, r3, #4
  40054a:	6303      	str	r3, [r0, #48]	; 0x30
  40054c:	4770      	bx	lr
  40054e:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSAAT;
  400552:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400554:	f043 0308 	orr.w	r3, r3, #8
  400558:	6303      	str	r3, [r0, #48]	; 0x30
	}
}
  40055a:	e7e1      	b.n	400520 <spi_configure_cs_behavior+0xa>

0040055c <spi_set_bits_per_transfer>:
 * \param ul_bits Number of bits (8~16), use the pattern defined
 *        in the device header file.
 */
void spi_set_bits_per_transfer(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_bits)
{
  40055c:	eb00 0181 	add.w	r1, r0, r1, lsl #2
	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_BITS_Msk);
  400560:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  400562:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  400566:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= ul_bits;
  400568:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  40056a:	431a      	orrs	r2, r3
  40056c:	630a      	str	r2, [r1, #48]	; 0x30
  40056e:	4770      	bx	lr

00400570 <spi_calc_baudrate_div>:
 *   \retval > 0  Success.
 *   \retval < 0  Error.
 */
int16_t spi_calc_baudrate_div(const uint32_t baudrate, uint32_t mck)
{
	int baud_div = div_ceil(mck, baudrate);
  400570:	1e43      	subs	r3, r0, #1
  400572:	4419      	add	r1, r3
  400574:	fbb1 f0f0 	udiv	r0, r1, r0

	/* The value of baud_div is from 1 to 255 in the SCBR field. */
	if (baud_div <= 0 || baud_div > 255) {
  400578:	1e43      	subs	r3, r0, #1
  40057a:	2bfe      	cmp	r3, #254	; 0xfe
		return -1;
	}

	return baud_div;
  40057c:	bf94      	ite	ls
  40057e:	b200      	sxthls	r0, r0
		return -1;
  400580:	f04f 30ff 	movhi.w	r0, #4294967295
}
  400584:	4770      	bx	lr

00400586 <spi_set_baudrate_div>:
 */
int16_t spi_set_baudrate_div(Spi *p_spi, uint32_t ul_pcs_ch,
		uint8_t uc_baudrate_divider)
{
    /* Programming the SCBR field to 0 is forbidden */
    if (!uc_baudrate_divider)
  400586:	b17a      	cbz	r2, 4005a8 <spi_set_baudrate_div+0x22>
{
  400588:	b410      	push	{r4}
  40058a:	4614      	mov	r4, r2
  40058c:	eb00 0181 	add.w	r1, r0, r1, lsl #2
        return -1;

	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_SCBR_Msk);
  400590:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  400592:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
  400596:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_SCBR(uc_baudrate_divider);
  400598:	6b0a      	ldr	r2, [r1, #48]	; 0x30
  40059a:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
  40059e:	630a      	str	r2, [r1, #48]	; 0x30
    return 0;
  4005a0:	2000      	movs	r0, #0
}
  4005a2:	f85d 4b04 	ldr.w	r4, [sp], #4
  4005a6:	4770      	bx	lr
        return -1;
  4005a8:	f04f 30ff 	mov.w	r0, #4294967295
  4005ac:	4770      	bx	lr
	...

004005b0 <gfx_mono_set_framebuffer>:
	gfx_mono_set_framebuffer(framebuffer);
\endcode
 */
void gfx_mono_set_framebuffer(uint8_t *framebuffer)
{
	fbpointer = framebuffer;
  4005b0:	4b01      	ldr	r3, [pc, #4]	; (4005b8 <gfx_mono_set_framebuffer+0x8>)
  4005b2:	6018      	str	r0, [r3, #0]
  4005b4:	4770      	bx	lr
  4005b6:	bf00      	nop
  4005b8:	204009ec 	.word	0x204009ec

004005bc <gfx_mono_framebuffer_put_byte>:
\endcode
 */
void gfx_mono_framebuffer_put_byte(gfx_coord_t page, gfx_coord_t column,
		uint8_t data)
{
	*(fbpointer + (page * GFX_MONO_LCD_WIDTH) + column) = data;
  4005bc:	4b02      	ldr	r3, [pc, #8]	; (4005c8 <gfx_mono_framebuffer_put_byte+0xc>)
  4005be:	681b      	ldr	r3, [r3, #0]
  4005c0:	eb03 10c0 	add.w	r0, r3, r0, lsl #7
  4005c4:	5442      	strb	r2, [r0, r1]
  4005c6:	4770      	bx	lr
  4005c8:	204009ec 	.word	0x204009ec

004005cc <gfx_mono_framebuffer_get_byte>:
	data = gfx_mono_framebuffer_get_byte(0, 0);
\endcode
 */
uint8_t gfx_mono_framebuffer_get_byte(gfx_coord_t page, gfx_coord_t column)
{
	return *(fbpointer + (page * GFX_MONO_LCD_WIDTH) + column);
  4005cc:	4b02      	ldr	r3, [pc, #8]	; (4005d8 <gfx_mono_framebuffer_get_byte+0xc>)
  4005ce:	681b      	ldr	r3, [r3, #0]
  4005d0:	eb03 10c0 	add.w	r0, r3, r0, lsl #7
}
  4005d4:	5c40      	ldrb	r0, [r0, r1]
  4005d6:	4770      	bx	lr
  4005d8:	204009ec 	.word	0x204009ec

004005dc <gfx_mono_generic_draw_horizontal_line>:
 * \param[in]  length     Length of the line in pixels.
 * \param[in]  color      Pixel operation of the line.
 */
void gfx_mono_generic_draw_horizontal_line(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t length, enum gfx_mono_color color)
{
  4005dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	uint8_t page;
	uint8_t pixelmask;
	uint8_t temp;

	/* Clip line length if too long */
	if (x + length > GFX_MONO_LCD_WIDTH) {
  4005e0:	1884      	adds	r4, r0, r2
  4005e2:	2c80      	cmp	r4, #128	; 0x80
  4005e4:	dd02      	ble.n	4005ec <gfx_mono_generic_draw_horizontal_line+0x10>
		length = GFX_MONO_LCD_WIDTH - x;
  4005e6:	f1c0 0480 	rsb	r4, r0, #128	; 0x80
  4005ea:	b2e2      	uxtb	r2, r4
	}

	page = y / 8;
	pixelmask = (1 << (y - (page * 8)));

	if (length == 0) {
  4005ec:	b322      	cbz	r2, 400638 <gfx_mono_generic_draw_horizontal_line+0x5c>
	page = y / 8;
  4005ee:	08cd      	lsrs	r5, r1, #3
	pixelmask = (1 << (y - (page * 8)));
  4005f0:	eba1 01c5 	sub.w	r1, r1, r5, lsl #3
  4005f4:	2601      	movs	r6, #1
  4005f6:	fa06 f101 	lsl.w	r1, r6, r1
  4005fa:	b2ce      	uxtb	r6, r1
		/* Nothing to do. Move along. */
		return;
	}

	switch (color) {
  4005fc:	2b01      	cmp	r3, #1
  4005fe:	d01d      	beq.n	40063c <gfx_mono_generic_draw_horizontal_line+0x60>
  400600:	2b00      	cmp	r3, #0
  400602:	d035      	beq.n	400670 <gfx_mono_generic_draw_horizontal_line+0x94>
  400604:	2b02      	cmp	r3, #2
  400606:	d117      	bne.n	400638 <gfx_mono_generic_draw_horizontal_line+0x5c>
  400608:	3801      	subs	r0, #1
  40060a:	b2c7      	uxtb	r7, r0
  40060c:	19d4      	adds	r4, r2, r7
  40060e:	b2e4      	uxtb	r4, r4
		}
		break;

	case GFX_PIXEL_XOR:
		while (length-- > 0) {
			temp = gfx_mono_get_byte(page, x + length);
  400610:	f8df a090 	ldr.w	sl, [pc, #144]	; 4006a4 <gfx_mono_generic_draw_horizontal_line+0xc8>
			temp ^= pixelmask;
			gfx_mono_put_byte(page, x + length, temp);
  400614:	f04f 0900 	mov.w	r9, #0
  400618:	f8df 808c 	ldr.w	r8, [pc, #140]	; 4006a8 <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  40061c:	4621      	mov	r1, r4
  40061e:	4628      	mov	r0, r5
  400620:	47d0      	blx	sl
			temp ^= pixelmask;
  400622:	ea86 0200 	eor.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  400626:	464b      	mov	r3, r9
  400628:	b2d2      	uxtb	r2, r2
  40062a:	4621      	mov	r1, r4
  40062c:	4628      	mov	r0, r5
  40062e:	47c0      	blx	r8
  400630:	3c01      	subs	r4, #1
  400632:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  400634:	42bc      	cmp	r4, r7
  400636:	d1f1      	bne.n	40061c <gfx_mono_generic_draw_horizontal_line+0x40>
  400638:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40063c:	3801      	subs	r0, #1
  40063e:	b2c7      	uxtb	r7, r0
  400640:	19d4      	adds	r4, r2, r7
  400642:	b2e4      	uxtb	r4, r4
			temp = gfx_mono_get_byte(page, x + length);
  400644:	f8df a05c 	ldr.w	sl, [pc, #92]	; 4006a4 <gfx_mono_generic_draw_horizontal_line+0xc8>
			gfx_mono_put_byte(page, x + length, temp);
  400648:	f04f 0900 	mov.w	r9, #0
  40064c:	f8df 8058 	ldr.w	r8, [pc, #88]	; 4006a8 <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  400650:	4621      	mov	r1, r4
  400652:	4628      	mov	r0, r5
  400654:	47d0      	blx	sl
			temp |= pixelmask;
  400656:	ea46 0200 	orr.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  40065a:	464b      	mov	r3, r9
  40065c:	b2d2      	uxtb	r2, r2
  40065e:	4621      	mov	r1, r4
  400660:	4628      	mov	r0, r5
  400662:	47c0      	blx	r8
  400664:	3c01      	subs	r4, #1
  400666:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  400668:	42bc      	cmp	r4, r7
  40066a:	d1f1      	bne.n	400650 <gfx_mono_generic_draw_horizontal_line+0x74>
  40066c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  400670:	3801      	subs	r0, #1
  400672:	b2c7      	uxtb	r7, r0
  400674:	19d4      	adds	r4, r2, r7
  400676:	b2e4      	uxtb	r4, r4
			temp = gfx_mono_get_byte(page, x + length);
  400678:	f8df 8028 	ldr.w	r8, [pc, #40]	; 4006a4 <gfx_mono_generic_draw_horizontal_line+0xc8>
			temp &= ~pixelmask;
  40067c:	43ce      	mvns	r6, r1
			gfx_mono_put_byte(page, x + length, temp);
  40067e:	f8df 9028 	ldr.w	r9, [pc, #40]	; 4006a8 <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  400682:	4621      	mov	r1, r4
  400684:	4628      	mov	r0, r5
  400686:	47c0      	blx	r8
			temp &= ~pixelmask;
  400688:	ea06 0200 	and.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  40068c:	2300      	movs	r3, #0
  40068e:	b2d2      	uxtb	r2, r2
  400690:	4621      	mov	r1, r4
  400692:	4628      	mov	r0, r5
  400694:	47c8      	blx	r9
  400696:	3c01      	subs	r4, #1
  400698:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  40069a:	42bc      	cmp	r4, r7
  40069c:	d1f1      	bne.n	400682 <gfx_mono_generic_draw_horizontal_line+0xa6>
  40069e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4006a2:	bf00      	nop
  4006a4:	004008dd 	.word	0x004008dd
  4006a8:	004007d9 	.word	0x004007d9

004006ac <gfx_mono_generic_draw_filled_rect>:
 * \param[in]  color       Pixel operation of the line
 */
void gfx_mono_generic_draw_filled_rect(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t width, gfx_coord_t height,
		enum gfx_mono_color color)
{
  4006ac:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4006b0:	f89d 7020 	ldrb.w	r7, [sp, #32]
	if (height == 0) {
  4006b4:	b18b      	cbz	r3, 4006da <gfx_mono_generic_draw_filled_rect+0x2e>
  4006b6:	461c      	mov	r4, r3
  4006b8:	4690      	mov	r8, r2
  4006ba:	4606      	mov	r6, r0
  4006bc:	1e4d      	subs	r5, r1, #1
  4006be:	b2ed      	uxtb	r5, r5
  4006c0:	442c      	add	r4, r5
  4006c2:	b2e4      	uxtb	r4, r4
		/* Nothing to do. Move along. */
		return;
	}

	while (height-- > 0) {
		gfx_mono_draw_horizontal_line(x, y + height, width, color);
  4006c4:	f8df 9018 	ldr.w	r9, [pc, #24]	; 4006e0 <gfx_mono_generic_draw_filled_rect+0x34>
  4006c8:	463b      	mov	r3, r7
  4006ca:	4642      	mov	r2, r8
  4006cc:	4621      	mov	r1, r4
  4006ce:	4630      	mov	r0, r6
  4006d0:	47c8      	blx	r9
  4006d2:	3c01      	subs	r4, #1
  4006d4:	b2e4      	uxtb	r4, r4
	while (height-- > 0) {
  4006d6:	42ac      	cmp	r4, r5
  4006d8:	d1f6      	bne.n	4006c8 <gfx_mono_generic_draw_filled_rect+0x1c>
  4006da:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4006de:	bf00      	nop
  4006e0:	004005dd 	.word	0x004005dd

004006e4 <gfx_mono_draw_char>:
 * \param[in] y        Y coordinate on screen.
 * \param[in] font     Font to draw character in
 */
void gfx_mono_draw_char(const char c, const gfx_coord_t x, const gfx_coord_t y,
		const struct font *font)
{
  4006e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4006e8:	b083      	sub	sp, #12
  4006ea:	4604      	mov	r4, r0
  4006ec:	4688      	mov	r8, r1
  4006ee:	4691      	mov	r9, r2
  4006f0:	469b      	mov	fp, r3
	gfx_mono_draw_filled_rect(x, y, font->width, font->height,
  4006f2:	7a5b      	ldrb	r3, [r3, #9]
  4006f4:	f89b 2008 	ldrb.w	r2, [fp, #8]
  4006f8:	2100      	movs	r1, #0
  4006fa:	9100      	str	r1, [sp, #0]
  4006fc:	4649      	mov	r1, r9
  4006fe:	4640      	mov	r0, r8
  400700:	4d21      	ldr	r5, [pc, #132]	; (400788 <gfx_mono_draw_char+0xa4>)
  400702:	47a8      	blx	r5
			GFX_PIXEL_CLR);

	switch (font->type) {
  400704:	f89b 3000 	ldrb.w	r3, [fp]
  400708:	b113      	cbz	r3, 400710 <gfx_mono_draw_char+0x2c>
	default:
		/* Unsupported mode, call assert */
		Assert(false);
		break;
	}
}
  40070a:	b003      	add	sp, #12
  40070c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	char_row_size = font->width / CONFIG_FONT_PIXELS_PER_BYTE;
  400710:	f89b 2008 	ldrb.w	r2, [fp, #8]
  400714:	08d3      	lsrs	r3, r2, #3
	if (font->width % CONFIG_FONT_PIXELS_PER_BYTE) {
  400716:	f012 0f07 	tst.w	r2, #7
		char_row_size++;
  40071a:	bf18      	it	ne
  40071c:	3301      	addne	r3, #1
	glyph_data_offset = char_row_size * font->height *
  40071e:	f89b a009 	ldrb.w	sl, [fp, #9]
			((uint8_t)ch - font->first_char);
  400722:	f89b 700a 	ldrb.w	r7, [fp, #10]
  400726:	1be7      	subs	r7, r4, r7
	glyph_data_offset = char_row_size * font->height *
  400728:	fb17 f70a 	smulbb	r7, r7, sl
  40072c:	fb17 f703 	smulbb	r7, r7, r3
	glyph_data = font->data.progmem + glyph_data_offset;
  400730:	f8db 3004 	ldr.w	r3, [fp, #4]
  400734:	fa13 f787 	uxtah	r7, r3, r7
  400738:	e01f      	b.n	40077a <gfx_mono_draw_char+0x96>
			glyph_byte <<= 1;
  40073a:	0064      	lsls	r4, r4, #1
  40073c:	b2e4      	uxtb	r4, r4
  40073e:	3501      	adds	r5, #1
		for (i = 0; i < pixelsToDraw; i++) {
  400740:	b2eb      	uxtb	r3, r5
  400742:	429e      	cmp	r6, r3
  400744:	d910      	bls.n	400768 <gfx_mono_draw_char+0x84>
  400746:	b2eb      	uxtb	r3, r5
  400748:	eb08 0003 	add.w	r0, r8, r3
  40074c:	b2c0      	uxtb	r0, r0
			if (i % CONFIG_FONT_PIXELS_PER_BYTE == 0) {
  40074e:	f013 0f07 	tst.w	r3, #7
				glyph_byte = PROGMEM_READ_BYTE(glyph_data);
  400752:	bf08      	it	eq
  400754:	f817 4b01 	ldrbeq.w	r4, [r7], #1
			if ((glyph_byte & 0x80)) {
  400758:	f014 0f80 	tst.w	r4, #128	; 0x80
  40075c:	d0ed      	beq.n	40073a <gfx_mono_draw_char+0x56>
				gfx_mono_draw_pixel(inc_x, inc_y,
  40075e:	2201      	movs	r2, #1
  400760:	4649      	mov	r1, r9
  400762:	4b0a      	ldr	r3, [pc, #40]	; (40078c <gfx_mono_draw_char+0xa8>)
  400764:	4798      	blx	r3
  400766:	e7e8      	b.n	40073a <gfx_mono_draw_char+0x56>
		inc_y += 1;
  400768:	f109 0901 	add.w	r9, r9, #1
  40076c:	fa5f f989 	uxtb.w	r9, r9
		rows_left--;
  400770:	f10a 3aff 	add.w	sl, sl, #4294967295
	} while (rows_left > 0);
  400774:	f01a 0aff 	ands.w	sl, sl, #255	; 0xff
  400778:	d0c7      	beq.n	40070a <gfx_mono_draw_char+0x26>
		uint8_t pixelsToDraw = font->width;
  40077a:	f89b 6008 	ldrb.w	r6, [fp, #8]
		for (i = 0; i < pixelsToDraw; i++) {
  40077e:	2e00      	cmp	r6, #0
  400780:	d0f2      	beq.n	400768 <gfx_mono_draw_char+0x84>
  400782:	2500      	movs	r5, #0
  400784:	462c      	mov	r4, r5
  400786:	e7de      	b.n	400746 <gfx_mono_draw_char+0x62>
  400788:	004006ad 	.word	0x004006ad
  40078c:	00400879 	.word	0x00400879

00400790 <gfx_mono_draw_string>:
 * \param[in] y         Y coordinate on screen.
 * \param[in] font      Font to draw string in
 */
void gfx_mono_draw_string(const char *str, gfx_coord_t x, gfx_coord_t y,
		const struct font *font)
{
  400790:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  400794:	4604      	mov	r4, r0
  400796:	4690      	mov	r8, r2
  400798:	461d      	mov	r5, r3
  40079a:	4689      	mov	r9, r1
			x = start_of_string_position_x;
			y += font->height + 1;
		} else if (*str == '\r') {
			/* Skip '\r' characters. */
		} else {
			gfx_mono_draw_char(*str, x, y, font);
  40079c:	4f0d      	ldr	r7, [pc, #52]	; (4007d4 <gfx_mono_draw_string+0x44>)
			x = start_of_string_position_x;
  40079e:	460e      	mov	r6, r1
  4007a0:	e008      	b.n	4007b4 <gfx_mono_draw_string+0x24>
			y += font->height + 1;
  4007a2:	7a6a      	ldrb	r2, [r5, #9]
  4007a4:	3201      	adds	r2, #1
  4007a6:	4442      	add	r2, r8
  4007a8:	fa5f f882 	uxtb.w	r8, r2
			x = start_of_string_position_x;
  4007ac:	46b1      	mov	r9, r6
			x += font->width;
		}
	} while (*(++str));
  4007ae:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  4007b2:	b16b      	cbz	r3, 4007d0 <gfx_mono_draw_string+0x40>
		if (*str == '\n') {
  4007b4:	7820      	ldrb	r0, [r4, #0]
  4007b6:	280a      	cmp	r0, #10
  4007b8:	d0f3      	beq.n	4007a2 <gfx_mono_draw_string+0x12>
		} else if (*str == '\r') {
  4007ba:	280d      	cmp	r0, #13
  4007bc:	d0f7      	beq.n	4007ae <gfx_mono_draw_string+0x1e>
			gfx_mono_draw_char(*str, x, y, font);
  4007be:	462b      	mov	r3, r5
  4007c0:	4642      	mov	r2, r8
  4007c2:	4649      	mov	r1, r9
  4007c4:	47b8      	blx	r7
			x += font->width;
  4007c6:	7a2b      	ldrb	r3, [r5, #8]
  4007c8:	4499      	add	r9, r3
  4007ca:	fa5f f989 	uxtb.w	r9, r9
  4007ce:	e7ee      	b.n	4007ae <gfx_mono_draw_string+0x1e>
}
  4007d0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4007d4:	004006e5 	.word	0x004006e5

004007d8 <gfx_mono_ssd1306_put_byte>:
	gfx_mono_ssd1306_put_byte(0, 0, 0xFF, false);
\endcode
  */
 void gfx_mono_ssd1306_put_byte(gfx_coord_t page, gfx_coord_t column,
		uint8_t data, bool force)
{
  4007d8:	b570      	push	{r4, r5, r6, lr}
  4007da:	4604      	mov	r4, r0
  4007dc:	460d      	mov	r5, r1
  4007de:	4616      	mov	r6, r2
#ifdef CONFIG_SSD1306_FRAMEBUFFER
	if (!force && data == gfx_mono_framebuffer_get_byte(page, column)) {
  4007e0:	b91b      	cbnz	r3, 4007ea <gfx_mono_ssd1306_put_byte+0x12>
  4007e2:	4b0d      	ldr	r3, [pc, #52]	; (400818 <gfx_mono_ssd1306_put_byte+0x40>)
  4007e4:	4798      	blx	r3
  4007e6:	42b0      	cmp	r0, r6
  4007e8:	d015      	beq.n	400816 <gfx_mono_ssd1306_put_byte+0x3e>
		return;
	}
	gfx_mono_framebuffer_put_byte(page, column, data);
  4007ea:	4632      	mov	r2, r6
  4007ec:	4629      	mov	r1, r5
  4007ee:	4620      	mov	r0, r4
  4007f0:	4b0a      	ldr	r3, [pc, #40]	; (40081c <gfx_mono_ssd1306_put_byte+0x44>)
  4007f2:	4798      	blx	r3
 * \param address the page address
 */
static inline void ssd1306_set_page_address(uint8_t address)
{
	// Make sure that the address is 4 bits (only 8 pages)
	address &= 0x0F;
  4007f4:	f004 000f 	and.w	r0, r4, #15
	ssd1306_write_command(SSD1306_CMD_SET_PAGE_START_ADDRESS(address));
  4007f8:	f040 00b0 	orr.w	r0, r0, #176	; 0xb0
  4007fc:	4c08      	ldr	r4, [pc, #32]	; (400820 <gfx_mono_ssd1306_put_byte+0x48>)
  4007fe:	47a0      	blx	r4
 */
static inline void ssd1306_set_column_address(uint8_t address)
{
	// Make sure the address is 7 bits
	address &= 0x7F;
	ssd1306_write_command(SSD1306_CMD_COL_ADD_SET_MSB(address >> 4));
  400800:	f3c5 1002 	ubfx	r0, r5, #4, #3
  400804:	f040 0010 	orr.w	r0, r0, #16
  400808:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_COL_ADD_SET_LSB(address & 0x0F));
  40080a:	f005 000f 	and.w	r0, r5, #15
  40080e:	47a0      	blx	r4
#endif

	ssd1306_set_page_address(page);
	ssd1306_set_column_address(column);

	ssd1306_write_data(data);
  400810:	4630      	mov	r0, r6
  400812:	4b04      	ldr	r3, [pc, #16]	; (400824 <gfx_mono_ssd1306_put_byte+0x4c>)
  400814:	4798      	blx	r3
  400816:	bd70      	pop	{r4, r5, r6, pc}
  400818:	004005cd 	.word	0x004005cd
  40081c:	004005bd 	.word	0x004005bd
  400820:	004008e9 	.word	0x004008e9
  400824:	00400b09 	.word	0x00400b09

00400828 <gfx_mono_ssd1306_init>:
{
  400828:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	gfx_mono_set_framebuffer(framebuffer);
  40082c:	480d      	ldr	r0, [pc, #52]	; (400864 <gfx_mono_ssd1306_init+0x3c>)
  40082e:	4b0e      	ldr	r3, [pc, #56]	; (400868 <gfx_mono_ssd1306_init+0x40>)
  400830:	4798      	blx	r3
	ssd1306_init();
  400832:	4b0e      	ldr	r3, [pc, #56]	; (40086c <gfx_mono_ssd1306_init+0x44>)
  400834:	4798      	blx	r3
 */
static inline void ssd1306_set_display_start_line_address(uint8_t address)
{
	// Make sure address is 6 bits
	address &= 0x3F;
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_START_LINE(address));
  400836:	2040      	movs	r0, #64	; 0x40
  400838:	4b0d      	ldr	r3, [pc, #52]	; (400870 <gfx_mono_ssd1306_init+0x48>)
  40083a:	4798      	blx	r3
	for (page = 0; page < GFX_MONO_LCD_PAGES; page++) {
  40083c:	2500      	movs	r5, #0
			gfx_mono_ssd1306_put_byte(page, column, 0x00, true);
  40083e:	f04f 0801 	mov.w	r8, #1
  400842:	462f      	mov	r7, r5
  400844:	4e0b      	ldr	r6, [pc, #44]	; (400874 <gfx_mono_ssd1306_init+0x4c>)
{
  400846:	2400      	movs	r4, #0
			gfx_mono_ssd1306_put_byte(page, column, 0x00, true);
  400848:	4643      	mov	r3, r8
  40084a:	463a      	mov	r2, r7
  40084c:	b2e1      	uxtb	r1, r4
  40084e:	4628      	mov	r0, r5
  400850:	47b0      	blx	r6
  400852:	3401      	adds	r4, #1
		for (column = 0; column < GFX_MONO_LCD_WIDTH; column++) {
  400854:	2c80      	cmp	r4, #128	; 0x80
  400856:	d1f7      	bne.n	400848 <gfx_mono_ssd1306_init+0x20>
	for (page = 0; page < GFX_MONO_LCD_PAGES; page++) {
  400858:	3501      	adds	r5, #1
  40085a:	b2ed      	uxtb	r5, r5
  40085c:	2d04      	cmp	r5, #4
  40085e:	d1f2      	bne.n	400846 <gfx_mono_ssd1306_init+0x1e>
  400860:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400864:	204009f0 	.word	0x204009f0
  400868:	004005b1 	.word	0x004005b1
  40086c:	00400929 	.word	0x00400929
  400870:	004008e9 	.word	0x004008e9
  400874:	004007d9 	.word	0x004007d9

00400878 <gfx_mono_ssd1306_draw_pixel>:
	if ((x > GFX_MONO_LCD_WIDTH - 1) || (y > GFX_MONO_LCD_HEIGHT - 1)) {
  400878:	09c3      	lsrs	r3, r0, #7
  40087a:	d12a      	bne.n	4008d2 <gfx_mono_ssd1306_draw_pixel+0x5a>
  40087c:	291f      	cmp	r1, #31
  40087e:	d828      	bhi.n	4008d2 <gfx_mono_ssd1306_draw_pixel+0x5a>
{
  400880:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400884:	4614      	mov	r4, r2
  400886:	4605      	mov	r5, r0
	page = y / GFX_MONO_LCD_PIXELS_PER_BYTE;
  400888:	08ce      	lsrs	r6, r1, #3
	pixel_mask = (1 << (y - (page * 8)));
  40088a:	eba1 01c6 	sub.w	r1, r1, r6, lsl #3
  40088e:	2201      	movs	r2, #1
  400890:	fa02 f701 	lsl.w	r7, r2, r1
  400894:	fa5f f887 	uxtb.w	r8, r7
\endcode
 */
uint8_t gfx_mono_ssd1306_get_byte(gfx_coord_t page, gfx_coord_t column)
{
#ifdef CONFIG_SSD1306_FRAMEBUFFER
	return gfx_mono_framebuffer_get_byte(page, column);
  400898:	4601      	mov	r1, r0
  40089a:	4630      	mov	r0, r6
  40089c:	4b0d      	ldr	r3, [pc, #52]	; (4008d4 <gfx_mono_ssd1306_draw_pixel+0x5c>)
  40089e:	4798      	blx	r3
  4008a0:	4602      	mov	r2, r0
	switch (color) {
  4008a2:	2c01      	cmp	r4, #1
  4008a4:	d009      	beq.n	4008ba <gfx_mono_ssd1306_draw_pixel+0x42>
  4008a6:	b164      	cbz	r4, 4008c2 <gfx_mono_ssd1306_draw_pixel+0x4a>
  4008a8:	2c02      	cmp	r4, #2
  4008aa:	d00e      	beq.n	4008ca <gfx_mono_ssd1306_draw_pixel+0x52>
	gfx_mono_put_byte(page, x, pixel_value);
  4008ac:	2300      	movs	r3, #0
  4008ae:	4629      	mov	r1, r5
  4008b0:	4630      	mov	r0, r6
  4008b2:	4c09      	ldr	r4, [pc, #36]	; (4008d8 <gfx_mono_ssd1306_draw_pixel+0x60>)
  4008b4:	47a0      	blx	r4
  4008b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		pixel_value |= pixel_mask;
  4008ba:	ea48 0200 	orr.w	r2, r8, r0
  4008be:	b2d2      	uxtb	r2, r2
		break;
  4008c0:	e7f4      	b.n	4008ac <gfx_mono_ssd1306_draw_pixel+0x34>
		pixel_value &= ~pixel_mask;
  4008c2:	ea20 0207 	bic.w	r2, r0, r7
  4008c6:	b2d2      	uxtb	r2, r2
		break;
  4008c8:	e7f0      	b.n	4008ac <gfx_mono_ssd1306_draw_pixel+0x34>
		pixel_value ^= pixel_mask;
  4008ca:	ea88 0200 	eor.w	r2, r8, r0
  4008ce:	b2d2      	uxtb	r2, r2
		break;
  4008d0:	e7ec      	b.n	4008ac <gfx_mono_ssd1306_draw_pixel+0x34>
  4008d2:	4770      	bx	lr
  4008d4:	004005cd 	.word	0x004005cd
  4008d8:	004007d9 	.word	0x004007d9

004008dc <gfx_mono_ssd1306_get_byte>:
{
  4008dc:	b508      	push	{r3, lr}
	return gfx_mono_framebuffer_get_byte(page, column);
  4008de:	4b01      	ldr	r3, [pc, #4]	; (4008e4 <gfx_mono_ssd1306_get_byte+0x8>)
  4008e0:	4798      	blx	r3
	ssd1306_set_column_address(column);

	return ssd1306_read_data();

#endif
}
  4008e2:	bd08      	pop	{r3, pc}
  4008e4:	004005cd 	.word	0x004005cd

004008e8 <ssd1306_write_command>:
 * data write function is called based on the selected interface.
 *
 * \param command the command to write
 */
void ssd1306_write_command(uint8_t command)
{
  4008e8:	b538      	push	{r3, r4, r5, lr}
  4008ea:	4605      	mov	r5, r0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  4008ec:	2208      	movs	r2, #8
  4008ee:	4b09      	ldr	r3, [pc, #36]	; (400914 <ssd1306_write_command+0x2c>)
  4008f0:	635a      	str	r2, [r3, #52]	; 0x34
	ioport_set_pin_level(SSD1306_DC_PIN, false);
	
	spi_set_peripheral_chip_select_value(SPI0, 1);
  4008f2:	4c09      	ldr	r4, [pc, #36]	; (400918 <ssd1306_write_command+0x30>)
  4008f4:	2101      	movs	r1, #1
  4008f6:	4620      	mov	r0, r4
  4008f8:	4b08      	ldr	r3, [pc, #32]	; (40091c <ssd1306_write_command+0x34>)
  4008fa:	4798      	blx	r3
	spi_write(SPI0, command, 1, 1);
  4008fc:	2301      	movs	r3, #1
  4008fe:	461a      	mov	r2, r3
  400900:	4629      	mov	r1, r5
  400902:	4620      	mov	r0, r4
  400904:	4c06      	ldr	r4, [pc, #24]	; (400920 <ssd1306_write_command+0x38>)
  400906:	47a0      	blx	r4
	delay_us(10);
  400908:	f44f 70fd 	mov.w	r0, #506	; 0x1fa
  40090c:	4b05      	ldr	r3, [pc, #20]	; (400924 <ssd1306_write_command+0x3c>)
  40090e:	4798      	blx	r3
  400910:	bd38      	pop	{r3, r4, r5, pc}
  400912:	bf00      	nop
  400914:	400e1000 	.word	0x400e1000
  400918:	40008000 	.word	0x40008000
  40091c:	00400491 	.word	0x00400491
  400920:	004004a7 	.word	0x004004a7
  400924:	20400001 	.word	0x20400001

00400928 <ssd1306_init>:
{
  400928:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  40092c:	4d66      	ldr	r5, [pc, #408]	; (400ac8 <ssd1306_init+0x1a0>)
  40092e:	f44f 3600 	mov.w	r6, #131072	; 0x20000
  400932:	612e      	str	r6, [r5, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400934:	f8c5 60a0 	str.w	r6, [r5, #160]	; 0xa0
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400938:	4b64      	ldr	r3, [pc, #400]	; (400acc <ssd1306_init+0x1a4>)
  40093a:	2708      	movs	r7, #8
  40093c:	611f      	str	r7, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  40093e:	f8c3 70a0 	str.w	r7, [r3, #160]	; 0xa0
		base->PIO_PUER = mask;
  400942:	666e      	str	r6, [r5, #100]	; 0x64
		base->PIO_PPDDR = mask;
  400944:	f8c5 6090 	str.w	r6, [r5, #144]	; 0x90
		base->PIO_MDDR = mask;
  400948:	656e      	str	r6, [r5, #84]	; 0x54
		base->PIO_IFDR = mask;
  40094a:	626e      	str	r6, [r5, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  40094c:	f8c5 6080 	str.w	r6, [r5, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  400950:	6f2a      	ldr	r2, [r5, #112]	; 0x70
  400952:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
  400956:	672a      	str	r2, [r5, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  400958:	6f6a      	ldr	r2, [r5, #116]	; 0x74
  40095a:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
  40095e:	676a      	str	r2, [r5, #116]	; 0x74
		base->PIO_PUER = mask;
  400960:	665f      	str	r7, [r3, #100]	; 0x64
		base->PIO_PPDDR = mask;
  400962:	f8c3 7090 	str.w	r7, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  400966:	655f      	str	r7, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  400968:	625f      	str	r7, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  40096a:	f8c3 7080 	str.w	r7, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  40096e:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  400970:	f022 0208 	bic.w	r2, r2, #8
  400974:	671a      	str	r2, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  400976:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  400978:	f022 0208 	bic.w	r2, r2, #8
  40097c:	675a      	str	r2, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PER = mask;
  40097e:	601f      	str	r7, [r3, #0]
  400980:	602e      	str	r6, [r5, #0]
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400982:	631f      	str	r7, [r3, #48]	; 0x30
  400984:	632e      	str	r6, [r5, #48]	; 0x30
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CLK_MASK, PIO_DEFAULT);
  400986:	f8df 817c 	ldr.w	r8, [pc, #380]	; 400b04 <ssd1306_init+0x1dc>
  40098a:	2300      	movs	r3, #0
  40098c:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  400990:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400994:	4640      	mov	r0, r8
  400996:	4c4e      	ldr	r4, [pc, #312]	; (400ad0 <ssd1306_init+0x1a8>)
  400998:	47a0      	blx	r4
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_MOSI_MASK, PIO_DEFAULT);
  40099a:	2300      	movs	r3, #0
  40099c:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  4009a0:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4009a4:	4640      	mov	r0, r8
  4009a6:	47a0      	blx	r4
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CS_MASK, PIO_DEFAULT);
  4009a8:	2300      	movs	r3, #0
  4009aa:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
  4009ae:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4009b2:	4640      	mov	r0, r8
  4009b4:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CLK_MASK, PIO_DEFAULT);
  4009b6:	2300      	movs	r3, #0
  4009b8:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  4009bc:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4009c0:	4640      	mov	r0, r8
  4009c2:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_MOSI_MASK, PIO_DEFAULT);
  4009c4:	2300      	movs	r3, #0
  4009c6:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  4009ca:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4009ce:	4640      	mov	r0, r8
  4009d0:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CS_MASK, PIO_DEFAULT);
  4009d2:	2300      	movs	r3, #0
  4009d4:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
  4009d8:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4009dc:	4640      	mov	r0, r8
  4009de:	47a0      	blx	r4
	p_spi->SPI_CR = SPI_CR_SPIDIS;
  4009e0:	4c3c      	ldr	r4, [pc, #240]	; (400ad4 <ssd1306_init+0x1ac>)
  4009e2:	f04f 0902 	mov.w	r9, #2
  4009e6:	f8c4 9000 	str.w	r9, [r4]
	p_spi->SPI_CR = SPI_CR_SWRST;
  4009ea:	f04f 0880 	mov.w	r8, #128	; 0x80
  4009ee:	f8c4 8000 	str.w	r8, [r4]
	p_spi->SPI_MR |= SPI_MR_MSTR;
  4009f2:	6863      	ldr	r3, [r4, #4]
  4009f4:	f043 0301 	orr.w	r3, r3, #1
  4009f8:	6063      	str	r3, [r4, #4]
		spi_configure_cs_behavior(SPI0, 1, SPI_CS_KEEP_LOW);
  4009fa:	463a      	mov	r2, r7
  4009fc:	2101      	movs	r1, #1
  4009fe:	4620      	mov	r0, r4
  400a00:	4b35      	ldr	r3, [pc, #212]	; (400ad8 <ssd1306_init+0x1b0>)
  400a02:	4798      	blx	r3
		spi_set_clock_polarity(SPI0, 1, 0);
  400a04:	2200      	movs	r2, #0
  400a06:	2101      	movs	r1, #1
  400a08:	4620      	mov	r0, r4
  400a0a:	4b34      	ldr	r3, [pc, #208]	; (400adc <ssd1306_init+0x1b4>)
  400a0c:	4798      	blx	r3
		spi_set_clock_phase(SPI0, 1, 0);
  400a0e:	2200      	movs	r2, #0
  400a10:	2101      	movs	r1, #1
  400a12:	4620      	mov	r0, r4
  400a14:	4b32      	ldr	r3, [pc, #200]	; (400ae0 <ssd1306_init+0x1b8>)
  400a16:	4798      	blx	r3
	p_spi->SPI_MR &= (~SPI_MR_PS);
  400a18:	6863      	ldr	r3, [r4, #4]
  400a1a:	f023 0302 	bic.w	r3, r3, #2
  400a1e:	6063      	str	r3, [r4, #4]
		spi_set_bits_per_transfer(SPI0, 1, SPI_CSR_BITS_8_BIT);
  400a20:	2200      	movs	r2, #0
  400a22:	2101      	movs	r1, #1
  400a24:	4620      	mov	r0, r4
  400a26:	4b2f      	ldr	r3, [pc, #188]	; (400ae4 <ssd1306_init+0x1bc>)
  400a28:	4798      	blx	r3
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable_loopback(Spi *p_spi)
{
	p_spi->SPI_MR &= (~SPI_MR_LLB);
  400a2a:	6863      	ldr	r3, [r4, #4]
  400a2c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  400a30:	6063      	str	r3, [r4, #4]
	p_spi->SPI_MR |= SPI_MR_MODFDIS;
  400a32:	6863      	ldr	r3, [r4, #4]
  400a34:	f043 0310 	orr.w	r3, r3, #16
  400a38:	6063      	str	r3, [r4, #4]
		int div = spi_calc_baudrate_div(1000000, sysclk_get_peripheral_hz());
  400a3a:	492b      	ldr	r1, [pc, #172]	; (400ae8 <ssd1306_init+0x1c0>)
  400a3c:	482b      	ldr	r0, [pc, #172]	; (400aec <ssd1306_init+0x1c4>)
  400a3e:	4b2c      	ldr	r3, [pc, #176]	; (400af0 <ssd1306_init+0x1c8>)
  400a40:	4798      	blx	r3
		spi_set_baudrate_div(SPI0,1, div);
  400a42:	b2c2      	uxtb	r2, r0
  400a44:	2101      	movs	r1, #1
  400a46:	4620      	mov	r0, r4
  400a48:	4b2a      	ldr	r3, [pc, #168]	; (400af4 <ssd1306_init+0x1cc>)
  400a4a:	4798      	blx	r3
		spi_enable_clock(SPI0);
  400a4c:	4620      	mov	r0, r4
  400a4e:	4b2a      	ldr	r3, [pc, #168]	; (400af8 <ssd1306_init+0x1d0>)
  400a50:	4798      	blx	r3
	p_spi->SPI_CR = SPI_CR_SPIEN;
  400a52:	2301      	movs	r3, #1
  400a54:	6023      	str	r3, [r4, #0]
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  400a56:	636e      	str	r6, [r5, #52]	; 0x34
	delay_cycles(delay_10us); // At lest 10us
  400a58:	f640 30b8 	movw	r0, #3000	; 0xbb8
  400a5c:	4c27      	ldr	r4, [pc, #156]	; (400afc <ssd1306_init+0x1d4>)
  400a5e:	47a0      	blx	r4
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400a60:	632e      	str	r6, [r5, #48]	; 0x30
	delay_cycles(delay_10us); // At lest 10us
  400a62:	f640 30b8 	movw	r0, #3000	; 0xbb8
  400a66:	47a0      	blx	r4
  400a68:	632e      	str	r6, [r5, #48]	; 0x30
	ssd1306_write_command(SSD1306_CMD_SET_MULTIPLEX_RATIO);
  400a6a:	20a8      	movs	r0, #168	; 0xa8
  400a6c:	4c24      	ldr	r4, [pc, #144]	; (400b00 <ssd1306_init+0x1d8>)
  400a6e:	47a0      	blx	r4
	ssd1306_write_command(0x1F);
  400a70:	201f      	movs	r0, #31
  400a72:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_OFFSET);
  400a74:	20d3      	movs	r0, #211	; 0xd3
  400a76:	47a0      	blx	r4
	ssd1306_write_command(0x00);
  400a78:	2000      	movs	r0, #0
  400a7a:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_START_LINE(0x00));
  400a7c:	2040      	movs	r0, #64	; 0x40
  400a7e:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_SEGMENT_RE_MAP_COL127_SEG0);
  400a80:	20a1      	movs	r0, #161	; 0xa1
  400a82:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_COM_OUTPUT_SCAN_DOWN);
  400a84:	20c8      	movs	r0, #200	; 0xc8
  400a86:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_COM_PINS);
  400a88:	20da      	movs	r0, #218	; 0xda
  400a8a:	47a0      	blx	r4
	ssd1306_write_command(0x02);
  400a8c:	4648      	mov	r0, r9
  400a8e:	47a0      	blx	r4
 *
 * \retval contrast the contrast value written to the OLED controller
 */
static inline uint8_t ssd1306_set_contrast(uint8_t contrast)
{
	ssd1306_write_command(SSD1306_CMD_SET_CONTRAST_CONTROL_FOR_BANK0);
  400a90:	2081      	movs	r0, #129	; 0x81
  400a92:	47a0      	blx	r4
	ssd1306_write_command(contrast);
  400a94:	208f      	movs	r0, #143	; 0x8f
  400a96:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_ENTIRE_DISPLAY_AND_GDDRAM_ON);
  400a98:	20a4      	movs	r0, #164	; 0xa4
  400a9a:	47a0      	blx	r4
 * This function will disable invert on all pixels on the OLED
 *
 */
static inline void ssd1306_display_invert_disable(void)
{
	ssd1306_write_command(SSD1306_CMD_SET_NORMAL_DISPLAY);
  400a9c:	20a6      	movs	r0, #166	; 0xa6
  400a9e:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_CLOCK_DIVIDE_RATIO);
  400aa0:	20d5      	movs	r0, #213	; 0xd5
  400aa2:	47a0      	blx	r4
	ssd1306_write_command(0x80);
  400aa4:	4640      	mov	r0, r8
  400aa6:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_CHARGE_PUMP_SETTING);
  400aa8:	208d      	movs	r0, #141	; 0x8d
  400aaa:	47a0      	blx	r4
	ssd1306_write_command(0x14);
  400aac:	2014      	movs	r0, #20
  400aae:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_VCOMH_DESELECT_LEVEL);
  400ab0:	20db      	movs	r0, #219	; 0xdb
  400ab2:	47a0      	blx	r4
	ssd1306_write_command(0x40); // Default => 0x20 (0.77*VCC)
  400ab4:	2040      	movs	r0, #64	; 0x40
  400ab6:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_PRE_CHARGE_PERIOD);
  400ab8:	20d9      	movs	r0, #217	; 0xd9
  400aba:	47a0      	blx	r4
	ssd1306_write_command(0xF1);
  400abc:	20f1      	movs	r0, #241	; 0xf1
  400abe:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_ON);
  400ac0:	20af      	movs	r0, #175	; 0xaf
  400ac2:	47a0      	blx	r4
  400ac4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  400ac8:	400e1200 	.word	0x400e1200
  400acc:	400e1000 	.word	0x400e1000
  400ad0:	00400df1 	.word	0x00400df1
  400ad4:	40008000 	.word	0x40008000
  400ad8:	00400517 	.word	0x00400517
  400adc:	004004db 	.word	0x004004db
  400ae0:	004004f9 	.word	0x004004f9
  400ae4:	0040055d 	.word	0x0040055d
  400ae8:	08f0d180 	.word	0x08f0d180
  400aec:	000f4240 	.word	0x000f4240
  400af0:	00400571 	.word	0x00400571
  400af4:	00400587 	.word	0x00400587
  400af8:	00400465 	.word	0x00400465
  400afc:	20400001 	.word	0x20400001
  400b00:	004008e9 	.word	0x004008e9
  400b04:	400e1400 	.word	0x400e1400

00400b08 <ssd1306_write_data>:
 * data write function is called based on the selected interface.
 *
 * \param data the data to write
 */
void ssd1306_write_data(uint8_t data)
{
  400b08:	b538      	push	{r3, r4, r5, lr}
  400b0a:	4605      	mov	r5, r0
  400b0c:	2208      	movs	r2, #8
  400b0e:	4b09      	ldr	r3, [pc, #36]	; (400b34 <ssd1306_write_data+0x2c>)
  400b10:	631a      	str	r2, [r3, #48]	; 0x30
	ioport_set_pin_level(SSD1306_DC_PIN, true);
	
	spi_set_peripheral_chip_select_value(SPI0, 1);
  400b12:	4c09      	ldr	r4, [pc, #36]	; (400b38 <ssd1306_write_data+0x30>)
  400b14:	2101      	movs	r1, #1
  400b16:	4620      	mov	r0, r4
  400b18:	4b08      	ldr	r3, [pc, #32]	; (400b3c <ssd1306_write_data+0x34>)
  400b1a:	4798      	blx	r3
	spi_write(SPI0, data, 1, 1);
  400b1c:	2301      	movs	r3, #1
  400b1e:	461a      	mov	r2, r3
  400b20:	4629      	mov	r1, r5
  400b22:	4620      	mov	r0, r4
  400b24:	4c06      	ldr	r4, [pc, #24]	; (400b40 <ssd1306_write_data+0x38>)
  400b26:	47a0      	blx	r4
	delay_us(10);
  400b28:	f44f 70fd 	mov.w	r0, #506	; 0x1fa
  400b2c:	4b05      	ldr	r3, [pc, #20]	; (400b44 <ssd1306_write_data+0x3c>)
  400b2e:	4798      	blx	r3
  400b30:	bd38      	pop	{r3, r4, r5, pc}
  400b32:	bf00      	nop
  400b34:	400e1000 	.word	0x400e1000
  400b38:	40008000 	.word	0x40008000
  400b3c:	00400491 	.word	0x00400491
  400b40:	004004a7 	.word	0x004004a7
  400b44:	20400001 	.word	0x20400001

00400b48 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  400b48:	b510      	push	{r4, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  400b4a:	4810      	ldr	r0, [pc, #64]	; (400b8c <sysclk_init+0x44>)
  400b4c:	4b10      	ldr	r3, [pc, #64]	; (400b90 <sysclk_init+0x48>)
  400b4e:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  400b50:	213e      	movs	r1, #62	; 0x3e
  400b52:	2000      	movs	r0, #0
  400b54:	4b0f      	ldr	r3, [pc, #60]	; (400b94 <sysclk_init+0x4c>)
  400b56:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  400b58:	4c0f      	ldr	r4, [pc, #60]	; (400b98 <sysclk_init+0x50>)
  400b5a:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  400b5c:	2800      	cmp	r0, #0
  400b5e:	d0fc      	beq.n	400b5a <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  400b60:	4b0e      	ldr	r3, [pc, #56]	; (400b9c <sysclk_init+0x54>)
  400b62:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  400b64:	4a0e      	ldr	r2, [pc, #56]	; (400ba0 <sysclk_init+0x58>)
  400b66:	4b0f      	ldr	r3, [pc, #60]	; (400ba4 <sysclk_init+0x5c>)
  400b68:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
	return pmc_is_locked_pllack();
  400b6a:	4c0f      	ldr	r4, [pc, #60]	; (400ba8 <sysclk_init+0x60>)
  400b6c:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  400b6e:	2800      	cmp	r0, #0
  400b70:	d0fc      	beq.n	400b6c <sysclk_init+0x24>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
  400b72:	2002      	movs	r0, #2
  400b74:	4b0d      	ldr	r3, [pc, #52]	; (400bac <sysclk_init+0x64>)
  400b76:	4798      	blx	r3
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  400b78:	2000      	movs	r0, #0
  400b7a:	4b0d      	ldr	r3, [pc, #52]	; (400bb0 <sysclk_init+0x68>)
  400b7c:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}
	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  400b7e:	4b0d      	ldr	r3, [pc, #52]	; (400bb4 <sysclk_init+0x6c>)
  400b80:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  400b82:	4802      	ldr	r0, [pc, #8]	; (400b8c <sysclk_init+0x44>)
  400b84:	4b02      	ldr	r3, [pc, #8]	; (400b90 <sysclk_init+0x48>)
  400b86:	4798      	blx	r3
  400b88:	bd10      	pop	{r4, pc}
  400b8a:	bf00      	nop
  400b8c:	11e1a300 	.word	0x11e1a300
  400b90:	00401331 	.word	0x00401331
  400b94:	00401081 	.word	0x00401081
  400b98:	004010d5 	.word	0x004010d5
  400b9c:	004010e5 	.word	0x004010e5
  400ba0:	20183f01 	.word	0x20183f01
  400ba4:	400e0600 	.word	0x400e0600
  400ba8:	004010f5 	.word	0x004010f5
  400bac:	00400fe5 	.word	0x00400fe5
  400bb0:	0040101d 	.word	0x0040101d
  400bb4:	00401225 	.word	0x00401225

00400bb8 <board_init>:
	__ISB();
}
#endif

void board_init(void)
{
  400bb8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  400bba:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  400bbe:	4b48      	ldr	r3, [pc, #288]	; (400ce0 <board_init+0x128>)
  400bc0:	605a      	str	r2, [r3, #4]
    This function acts as a special kind of Data Memory Barrier.
    It completes when all explicit memory accesses before this instruction complete.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DSB(void)
{
  __ASM volatile ("dsb");
  400bc2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400bc6:	f3bf 8f6f 	isb	sy
__STATIC_INLINE void SCB_EnableICache(void)
{
  #if (__ICACHE_PRESENT == 1)
    __DSB();
    __ISB();
    SCB->ICIALLU = 0;                       // invalidate I-Cache
  400bca:	4b46      	ldr	r3, [pc, #280]	; (400ce4 <board_init+0x12c>)
  400bcc:	2200      	movs	r2, #0
  400bce:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
    SCB->CCR |=  SCB_CCR_IC_Msk;            // enable I-Cache
  400bd2:	695a      	ldr	r2, [r3, #20]
  400bd4:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
  400bd8:	615a      	str	r2, [r3, #20]
  __ASM volatile ("dsb");
  400bda:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400bde:	f3bf 8f6f 	isb	sy
{
  #if (__DCACHE_PRESENT == 1)
    uint32_t ccsidr, sshift, wshift, sw;
    uint32_t sets, ways;

    ccsidr  = SCB->CCSIDR;
  400be2:	f8d3 7080 	ldr.w	r7, [r3, #128]	; 0x80
    sets    = CCSIDR_SETS(ccsidr);
  400be6:	f3c7 364e 	ubfx	r6, r7, #13, #15
    sshift  = CCSIDR_LSSHIFT(ccsidr) + 4;
  400bea:	f007 0007 	and.w	r0, r7, #7
  400bee:	3004      	adds	r0, #4
    ways    = CCSIDR_WAYS(ccsidr);
  400bf0:	f3c7 07c9 	ubfx	r7, r7, #3, #10
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint8_t __CLZ(uint32_t value)
{
  uint32_t result;

  __ASM volatile ("clz %0, %1" : "=r" (result) : "r" (value) );
  400bf4:	fab7 fe87 	clz	lr, r7
    wshift  = __CLZ(ways) & 0x1f;
  400bf8:	f00e 0e1f 	and.w	lr, lr, #31
  __ASM volatile ("dsb");
  400bfc:	f3bf 8f4f 	dsb	sy
  400c00:	f04f 34ff 	mov.w	r4, #4294967295
  400c04:	fa04 fc00 	lsl.w	ip, r4, r0
  400c08:	fa06 f000 	lsl.w	r0, r6, r0
  400c0c:	fa04 f40e 	lsl.w	r4, r4, lr
  400c10:	fa07 fe0e 	lsl.w	lr, r7, lr

    do {                                    // invalidate D-Cache
         int32_t tmpways = ways;
         do {
              sw = ((tmpways << wshift) | (sets << sshift));
              SCB->DCISW = sw;
  400c14:	461d      	mov	r5, r3
         int32_t tmpways = ways;
  400c16:	463a      	mov	r2, r7
  400c18:	4673      	mov	r3, lr
              sw = ((tmpways << wshift) | (sets << sshift));
  400c1a:	ea40 0103 	orr.w	r1, r0, r3
              SCB->DCISW = sw;
  400c1e:	f8c5 1260 	str.w	r1, [r5, #608]	; 0x260
            } while(tmpways--);
  400c22:	3a01      	subs	r2, #1
  400c24:	4423      	add	r3, r4
  400c26:	f1b2 3fff 	cmp.w	r2, #4294967295
  400c2a:	d1f6      	bne.n	400c1a <board_init+0x62>
        } while(sets--);
  400c2c:	3e01      	subs	r6, #1
  400c2e:	4460      	add	r0, ip
  400c30:	f1b6 3fff 	cmp.w	r6, #4294967295
  400c34:	d1ef      	bne.n	400c16 <board_init+0x5e>
  400c36:	f3bf 8f4f 	dsb	sy
    __DSB();

    SCB->CCR |=  SCB_CCR_DC_Msk;            // enable D-Cache
  400c3a:	4b2a      	ldr	r3, [pc, #168]	; (400ce4 <board_init+0x12c>)
  400c3c:	695a      	ldr	r2, [r3, #20]
  400c3e:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
  400c42:	615a      	str	r2, [r3, #20]
  400c44:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400c48:	f3bf 8f6f 	isb	sy
		*dst++ = *src++;
	}
#endif
#else
	/* TCM Configuration */
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  400c4c:	4a26      	ldr	r2, [pc, #152]	; (400ce8 <board_init+0x130>)
  400c4e:	4927      	ldr	r1, [pc, #156]	; (400cec <board_init+0x134>)
  400c50:	6051      	str	r1, [r2, #4]
					| EEFC_FCR_FARG(8));
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  400c52:	f5a1 7180 	sub.w	r1, r1, #256	; 0x100
  400c56:	6051      	str	r1, [r2, #4]
  __ASM volatile ("dsb");
  400c58:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400c5c:	f3bf 8f6f 	isb	sy
	SCB->ITCMCR &= ~(uint32_t)(1UL);
  400c60:	f8d3 2290 	ldr.w	r2, [r3, #656]	; 0x290
  400c64:	f022 0201 	bic.w	r2, r2, #1
  400c68:	f8c3 2290 	str.w	r2, [r3, #656]	; 0x290
	SCB->DTCMCR &= ~(uint32_t)SCB_DTCMCR_EN_Msk;
  400c6c:	f8d3 2294 	ldr.w	r2, [r3, #660]	; 0x294
  400c70:	f022 0201 	bic.w	r2, r2, #1
  400c74:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
  __ASM volatile ("dsb");
  400c78:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400c7c:	f3bf 8f6f 	isb	sy
  400c80:	200a      	movs	r0, #10
  400c82:	4c1b      	ldr	r4, [pc, #108]	; (400cf0 <board_init+0x138>)
  400c84:	47a0      	blx	r4
  400c86:	200b      	movs	r0, #11
  400c88:	47a0      	blx	r4
  400c8a:	200c      	movs	r0, #12
  400c8c:	47a0      	blx	r4
  400c8e:	2010      	movs	r0, #16
  400c90:	47a0      	blx	r4
  400c92:	2011      	movs	r0, #17
  400c94:	47a0      	blx	r4
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400c96:	4b17      	ldr	r3, [pc, #92]	; (400cf4 <board_init+0x13c>)
  400c98:	f44f 7280 	mov.w	r2, #256	; 0x100
  400c9c:	611a      	str	r2, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400c9e:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400ca2:	631a      	str	r2, [r3, #48]	; 0x30
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  400ca4:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
  400ca8:	f44f 6200 	mov.w	r2, #2048	; 0x800
  400cac:	615a      	str	r2, [r3, #20]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400cae:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_PUER = mask;
  400cb2:	665a      	str	r2, [r3, #100]	; 0x64
		base->PIO_PPDDR = mask;
  400cb4:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  400cb8:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFER = mask;
  400cba:	621a      	str	r2, [r3, #32]
		base->PIO_IFSCER = mask;
  400cbc:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
		base->PIO_ABCDSR[0] &= ~mask;
  400cc0:	6f19      	ldr	r1, [r3, #112]	; 0x70
  400cc2:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  400cc6:	6719      	str	r1, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  400cc8:	6f59      	ldr	r1, [r3, #116]	; 0x74
  400cca:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  400cce:	6759      	str	r1, [r3, #116]	; 0x74
	case IOPORT_SENSE_FALLING:
		base->PIO_ESR = mask;
		base->PIO_FELLSR = mask;
		break;
	case IOPORT_SENSE_RISING:
		base->PIO_ESR = mask;
  400cd0:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
		base->PIO_REHLSR = mask;
  400cd4:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
		break;
	default:
		base->PIO_AIMDR = mask;
		return;
	}
	base->PIO_AIMER = mask;
  400cd8:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
  400cdc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400cde:	bf00      	nop
  400ce0:	400e1850 	.word	0x400e1850
  400ce4:	e000ed00 	.word	0xe000ed00
  400ce8:	400e0c00 	.word	0x400e0c00
  400cec:	5a00080c 	.word	0x5a00080c
  400cf0:	00401105 	.word	0x00401105
  400cf4:	400e1200 	.word	0x400e1200

00400cf8 <pio_set>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_set(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_SODR = ul_mask;
  400cf8:	6301      	str	r1, [r0, #48]	; 0x30
  400cfa:	4770      	bx	lr

00400cfc <pio_clear>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_clear(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_CODR = ul_mask;
  400cfc:	6341      	str	r1, [r0, #52]	; 0x34
  400cfe:	4770      	bx	lr

00400d00 <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  400d00:	6442      	str	r2, [r0, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  400d02:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  400d06:	d03a      	beq.n	400d7e <pio_set_peripheral+0x7e>
  400d08:	d813      	bhi.n	400d32 <pio_set_peripheral+0x32>
  400d0a:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  400d0e:	d025      	beq.n	400d5c <pio_set_peripheral+0x5c>
  400d10:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  400d14:	d10a      	bne.n	400d2c <pio_set_peripheral+0x2c>

		ul_sr = p_pio->PIO_ABCDSR[1];
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
		break;
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  400d16:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400d18:	4313      	orrs	r3, r2
  400d1a:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  400d1c:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400d1e:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400d20:	400b      	ands	r3, r1
  400d22:	ea23 0302 	bic.w	r3, r3, r2
  400d26:	6743      	str	r3, [r0, #116]	; 0x74
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  400d28:	6042      	str	r2, [r0, #4]
  400d2a:	4770      	bx	lr
	switch (ul_type) {
  400d2c:	2900      	cmp	r1, #0
  400d2e:	d1fb      	bne.n	400d28 <pio_set_peripheral+0x28>
  400d30:	4770      	bx	lr
  400d32:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  400d36:	d021      	beq.n	400d7c <pio_set_peripheral+0x7c>
  400d38:	d809      	bhi.n	400d4e <pio_set_peripheral+0x4e>
  400d3a:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  400d3e:	d1f3      	bne.n	400d28 <pio_set_peripheral+0x28>
		ul_sr = p_pio->PIO_ABCDSR[0];
  400d40:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400d42:	4313      	orrs	r3, r2
  400d44:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400d46:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400d48:	4313      	orrs	r3, r2
  400d4a:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400d4c:	e7ec      	b.n	400d28 <pio_set_peripheral+0x28>
	switch (ul_type) {
  400d4e:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400d52:	d013      	beq.n	400d7c <pio_set_peripheral+0x7c>
  400d54:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400d58:	d010      	beq.n	400d7c <pio_set_peripheral+0x7c>
  400d5a:	e7e5      	b.n	400d28 <pio_set_peripheral+0x28>
{
  400d5c:	b410      	push	{r4}
		ul_sr = p_pio->PIO_ABCDSR[0];
  400d5e:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400d60:	6f04      	ldr	r4, [r0, #112]	; 0x70
  400d62:	43d3      	mvns	r3, r2
  400d64:	4021      	ands	r1, r4
  400d66:	461c      	mov	r4, r3
  400d68:	4019      	ands	r1, r3
  400d6a:	6701      	str	r1, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400d6c:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400d6e:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400d70:	400b      	ands	r3, r1
  400d72:	4023      	ands	r3, r4
  400d74:	6743      	str	r3, [r0, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  400d76:	6042      	str	r2, [r0, #4]
}
  400d78:	f85d 4b04 	ldr.w	r4, [sp], #4
  400d7c:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABCDSR[0];
  400d7e:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400d80:	6f01      	ldr	r1, [r0, #112]	; 0x70
  400d82:	400b      	ands	r3, r1
  400d84:	ea23 0302 	bic.w	r3, r3, r2
  400d88:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400d8a:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400d8c:	4313      	orrs	r3, r2
  400d8e:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400d90:	e7ca      	b.n	400d28 <pio_set_peripheral+0x28>

00400d92 <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  400d92:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400d94:	f012 0f01 	tst.w	r2, #1
  400d98:	d10d      	bne.n	400db6 <pio_set_input+0x24>
		p_pio->PIO_PUDR = ul_mask;
  400d9a:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  400d9c:	f012 0f0a 	tst.w	r2, #10
  400da0:	d00b      	beq.n	400dba <pio_set_input+0x28>
		p_pio->PIO_IFER = ul_mask;
  400da2:	6201      	str	r1, [r0, #32]
	if (ul_attribute & PIO_DEGLITCH) {
  400da4:	f012 0f02 	tst.w	r2, #2
  400da8:	d109      	bne.n	400dbe <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
  400daa:	f012 0f08 	tst.w	r2, #8
  400dae:	d008      	beq.n	400dc2 <pio_set_input+0x30>
			p_pio->PIO_IFSCER = ul_mask;
  400db0:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
  400db4:	e005      	b.n	400dc2 <pio_set_input+0x30>
		p_pio->PIO_PUER = ul_mask;
  400db6:	6641      	str	r1, [r0, #100]	; 0x64
  400db8:	e7f0      	b.n	400d9c <pio_set_input+0xa>
		p_pio->PIO_IFDR = ul_mask;
  400dba:	6241      	str	r1, [r0, #36]	; 0x24
  400dbc:	e7f2      	b.n	400da4 <pio_set_input+0x12>
		p_pio->PIO_IFSCDR = ul_mask;
  400dbe:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
	p_pio->PIO_ODR = ul_mask;
  400dc2:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  400dc4:	6001      	str	r1, [r0, #0]
  400dc6:	4770      	bx	lr

00400dc8 <pio_set_output>:
{
  400dc8:	b410      	push	{r4}
  400dca:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
  400dcc:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400dce:	b94c      	cbnz	r4, 400de4 <pio_set_output+0x1c>
		p_pio->PIO_PUDR = ul_mask;
  400dd0:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
  400dd2:	b14b      	cbz	r3, 400de8 <pio_set_output+0x20>
		p_pio->PIO_MDER = ul_mask;
  400dd4:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
  400dd6:	b94a      	cbnz	r2, 400dec <pio_set_output+0x24>
		p_pio->PIO_CODR = ul_mask;
  400dd8:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
  400dda:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  400ddc:	6001      	str	r1, [r0, #0]
}
  400dde:	f85d 4b04 	ldr.w	r4, [sp], #4
  400de2:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
  400de4:	6641      	str	r1, [r0, #100]	; 0x64
  400de6:	e7f4      	b.n	400dd2 <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
  400de8:	6541      	str	r1, [r0, #84]	; 0x54
  400dea:	e7f4      	b.n	400dd6 <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
  400dec:	6301      	str	r1, [r0, #48]	; 0x30
  400dee:	e7f4      	b.n	400dda <pio_set_output+0x12>

00400df0 <pio_configure>:
{
  400df0:	b570      	push	{r4, r5, r6, lr}
  400df2:	b082      	sub	sp, #8
  400df4:	4605      	mov	r5, r0
  400df6:	4616      	mov	r6, r2
  400df8:	461c      	mov	r4, r3
	switch (ul_type) {
  400dfa:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  400dfe:	d014      	beq.n	400e2a <pio_configure+0x3a>
  400e00:	d90a      	bls.n	400e18 <pio_configure+0x28>
  400e02:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400e06:	d024      	beq.n	400e52 <pio_configure+0x62>
  400e08:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400e0c:	d021      	beq.n	400e52 <pio_configure+0x62>
  400e0e:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  400e12:	d017      	beq.n	400e44 <pio_configure+0x54>
		return 0;
  400e14:	2000      	movs	r0, #0
  400e16:	e01a      	b.n	400e4e <pio_configure+0x5e>
	switch (ul_type) {
  400e18:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  400e1c:	d005      	beq.n	400e2a <pio_configure+0x3a>
  400e1e:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  400e22:	d002      	beq.n	400e2a <pio_configure+0x3a>
  400e24:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  400e28:	d1f4      	bne.n	400e14 <pio_configure+0x24>
		pio_set_peripheral(p_pio, ul_type, ul_mask);
  400e2a:	4632      	mov	r2, r6
  400e2c:	4628      	mov	r0, r5
  400e2e:	4b11      	ldr	r3, [pc, #68]	; (400e74 <pio_configure+0x84>)
  400e30:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400e32:	f014 0f01 	tst.w	r4, #1
  400e36:	d102      	bne.n	400e3e <pio_configure+0x4e>
		p_pio->PIO_PUDR = ul_mask;
  400e38:	662e      	str	r6, [r5, #96]	; 0x60
	return 1;
  400e3a:	2001      	movs	r0, #1
  400e3c:	e007      	b.n	400e4e <pio_configure+0x5e>
		p_pio->PIO_PUER = ul_mask;
  400e3e:	666e      	str	r6, [r5, #100]	; 0x64
	return 1;
  400e40:	2001      	movs	r0, #1
  400e42:	e004      	b.n	400e4e <pio_configure+0x5e>
		pio_set_input(p_pio, ul_mask, ul_attribute);
  400e44:	461a      	mov	r2, r3
  400e46:	4631      	mov	r1, r6
  400e48:	4b0b      	ldr	r3, [pc, #44]	; (400e78 <pio_configure+0x88>)
  400e4a:	4798      	blx	r3
	return 1;
  400e4c:	2001      	movs	r0, #1
}
  400e4e:	b002      	add	sp, #8
  400e50:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_output(p_pio, ul_mask, (ul_type == PIO_OUTPUT_1),
  400e52:	f004 0301 	and.w	r3, r4, #1
  400e56:	9300      	str	r3, [sp, #0]
  400e58:	f3c4 0380 	ubfx	r3, r4, #2, #1
  400e5c:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400e60:	bf14      	ite	ne
  400e62:	2200      	movne	r2, #0
  400e64:	2201      	moveq	r2, #1
  400e66:	4631      	mov	r1, r6
  400e68:	4628      	mov	r0, r5
  400e6a:	4c04      	ldr	r4, [pc, #16]	; (400e7c <pio_configure+0x8c>)
  400e6c:	47a0      	blx	r4
	return 1;
  400e6e:	2001      	movs	r0, #1
		break;
  400e70:	e7ed      	b.n	400e4e <pio_configure+0x5e>
  400e72:	bf00      	nop
  400e74:	00400d01 	.word	0x00400d01
  400e78:	00400d93 	.word	0x00400d93
  400e7c:	00400dc9 	.word	0x00400dc9

00400e80 <pio_configure_interrupt>:
	if (ul_attr & PIO_IT_AIME) {
  400e80:	f012 0f10 	tst.w	r2, #16
  400e84:	d012      	beq.n	400eac <pio_configure_interrupt+0x2c>
		p_pio->PIO_AIMER = ul_mask;
  400e86:	f8c0 10b0 	str.w	r1, [r0, #176]	; 0xb0
		if (ul_attr & PIO_IT_RE_OR_HL) {
  400e8a:	f012 0f20 	tst.w	r2, #32
  400e8e:	d007      	beq.n	400ea0 <pio_configure_interrupt+0x20>
			p_pio->PIO_REHLSR = ul_mask;
  400e90:	f8c0 10d4 	str.w	r1, [r0, #212]	; 0xd4
		if (ul_attr & PIO_IT_EDGE) {
  400e94:	f012 0f40 	tst.w	r2, #64	; 0x40
  400e98:	d005      	beq.n	400ea6 <pio_configure_interrupt+0x26>
			p_pio->PIO_ESR = ul_mask;
  400e9a:	f8c0 10c0 	str.w	r1, [r0, #192]	; 0xc0
  400e9e:	4770      	bx	lr
			p_pio->PIO_FELLSR = ul_mask;
  400ea0:	f8c0 10d0 	str.w	r1, [r0, #208]	; 0xd0
  400ea4:	e7f6      	b.n	400e94 <pio_configure_interrupt+0x14>
			p_pio->PIO_LSR = ul_mask;
  400ea6:	f8c0 10c4 	str.w	r1, [r0, #196]	; 0xc4
  400eaa:	4770      	bx	lr
		p_pio->PIO_AIMDR = ul_mask;
  400eac:	f8c0 10b4 	str.w	r1, [r0, #180]	; 0xb4
  400eb0:	4770      	bx	lr

00400eb2 <pio_enable_interrupt>:
	p_pio->PIO_IER = ul_mask;
  400eb2:	6401      	str	r1, [r0, #64]	; 0x40
  400eb4:	4770      	bx	lr

00400eb6 <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  400eb6:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  400eb8:	4770      	bx	lr

00400eba <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  400eba:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  400ebc:	4770      	bx	lr
	...

00400ec0 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  400ec0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400ec4:	4604      	mov	r4, r0
  400ec6:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  400ec8:	4b0e      	ldr	r3, [pc, #56]	; (400f04 <pio_handler_process+0x44>)
  400eca:	4798      	blx	r3
  400ecc:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  400ece:	4620      	mov	r0, r4
  400ed0:	4b0d      	ldr	r3, [pc, #52]	; (400f08 <pio_handler_process+0x48>)
  400ed2:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  400ed4:	4005      	ands	r5, r0
  400ed6:	d013      	beq.n	400f00 <pio_handler_process+0x40>
  400ed8:	4c0c      	ldr	r4, [pc, #48]	; (400f0c <pio_handler_process+0x4c>)
  400eda:	f104 0660 	add.w	r6, r4, #96	; 0x60
  400ede:	e003      	b.n	400ee8 <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  400ee0:	42b4      	cmp	r4, r6
  400ee2:	d00d      	beq.n	400f00 <pio_handler_process+0x40>
  400ee4:	3410      	adds	r4, #16
		while (status != 0) {
  400ee6:	b15d      	cbz	r5, 400f00 <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  400ee8:	6820      	ldr	r0, [r4, #0]
  400eea:	4540      	cmp	r0, r8
  400eec:	d1f8      	bne.n	400ee0 <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  400eee:	6861      	ldr	r1, [r4, #4]
  400ef0:	4229      	tst	r1, r5
  400ef2:	d0f5      	beq.n	400ee0 <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  400ef4:	68e3      	ldr	r3, [r4, #12]
  400ef6:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  400ef8:	6863      	ldr	r3, [r4, #4]
  400efa:	ea25 0503 	bic.w	r5, r5, r3
  400efe:	e7ef      	b.n	400ee0 <pio_handler_process+0x20>
  400f00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400f04:	00400eb7 	.word	0x00400eb7
  400f08:	00400ebb 	.word	0x00400ebb
  400f0c:	20400bf0 	.word	0x20400bf0

00400f10 <pio_handler_set>:
 *
 * \return 0 if successful, 1 if the maximum number of sources has been defined.
 */
uint32_t pio_handler_set(Pio *p_pio, uint32_t ul_id, uint32_t ul_mask,
		uint32_t ul_attr, void (*p_handler) (uint32_t, uint32_t))
{
  400f10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint8_t i;
	struct s_interrupt_source *pSource;

	if (gs_ul_nb_sources >= MAX_INTERRUPT_SOURCES)
  400f12:	4c18      	ldr	r4, [pc, #96]	; (400f74 <pio_handler_set+0x64>)
  400f14:	6826      	ldr	r6, [r4, #0]
  400f16:	2e06      	cmp	r6, #6
  400f18:	d82a      	bhi.n	400f70 <pio_handler_set+0x60>
  400f1a:	f04f 0c00 	mov.w	ip, #0
  400f1e:	4664      	mov	r4, ip
		return 1;

    /* Check interrupt for this pin, if already defined, redefine it. */
	for (i = 0; i <= gs_ul_nb_sources; i++) {
		pSource = &(gs_interrupt_sources[i]);
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  400f20:	4f15      	ldr	r7, [pc, #84]	; (400f78 <pio_handler_set+0x68>)
  400f22:	e004      	b.n	400f2e <pio_handler_set+0x1e>
	for (i = 0; i <= gs_ul_nb_sources; i++) {
  400f24:	3401      	adds	r4, #1
  400f26:	b2e4      	uxtb	r4, r4
  400f28:	46a4      	mov	ip, r4
  400f2a:	42a6      	cmp	r6, r4
  400f2c:	d309      	bcc.n	400f42 <pio_handler_set+0x32>
		pSource = &(gs_interrupt_sources[i]);
  400f2e:	46a6      	mov	lr, r4
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  400f30:	0125      	lsls	r5, r4, #4
  400f32:	597d      	ldr	r5, [r7, r5]
  400f34:	428d      	cmp	r5, r1
  400f36:	d1f5      	bne.n	400f24 <pio_handler_set+0x14>
  400f38:	eb07 1504 	add.w	r5, r7, r4, lsl #4
  400f3c:	686d      	ldr	r5, [r5, #4]
  400f3e:	4295      	cmp	r5, r2
  400f40:	d1f0      	bne.n	400f24 <pio_handler_set+0x14>
			break;
		}
	}

	/* Define new source */
	pSource->id = ul_id;
  400f42:	4d0d      	ldr	r5, [pc, #52]	; (400f78 <pio_handler_set+0x68>)
  400f44:	ea4f 1e0e 	mov.w	lr, lr, lsl #4
  400f48:	eb05 040e 	add.w	r4, r5, lr
  400f4c:	f845 100e 	str.w	r1, [r5, lr]
	pSource->mask = ul_mask;
  400f50:	6062      	str	r2, [r4, #4]
	pSource->attr = ul_attr;
  400f52:	60a3      	str	r3, [r4, #8]
	pSource->handler = p_handler;
  400f54:	9906      	ldr	r1, [sp, #24]
  400f56:	60e1      	str	r1, [r4, #12]
	if (i == gs_ul_nb_sources + 1) {
  400f58:	3601      	adds	r6, #1
  400f5a:	4566      	cmp	r6, ip
  400f5c:	d005      	beq.n	400f6a <pio_handler_set+0x5a>
  400f5e:	4611      	mov	r1, r2
		gs_ul_nb_sources++;
	}

	/* Configure interrupt mode */
	pio_configure_interrupt(p_pio, ul_mask, ul_attr);
  400f60:	461a      	mov	r2, r3
  400f62:	4b06      	ldr	r3, [pc, #24]	; (400f7c <pio_handler_set+0x6c>)
  400f64:	4798      	blx	r3

	return 0;
  400f66:	2000      	movs	r0, #0
  400f68:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		gs_ul_nb_sources++;
  400f6a:	4902      	ldr	r1, [pc, #8]	; (400f74 <pio_handler_set+0x64>)
  400f6c:	600e      	str	r6, [r1, #0]
  400f6e:	e7f6      	b.n	400f5e <pio_handler_set+0x4e>
		return 1;
  400f70:	2001      	movs	r0, #1
}
  400f72:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400f74:	20400c60 	.word	0x20400c60
  400f78:	20400bf0 	.word	0x20400bf0
  400f7c:	00400e81 	.word	0x00400e81

00400f80 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  400f80:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  400f82:	210a      	movs	r1, #10
  400f84:	4801      	ldr	r0, [pc, #4]	; (400f8c <PIOA_Handler+0xc>)
  400f86:	4b02      	ldr	r3, [pc, #8]	; (400f90 <PIOA_Handler+0x10>)
  400f88:	4798      	blx	r3
  400f8a:	bd08      	pop	{r3, pc}
  400f8c:	400e0e00 	.word	0x400e0e00
  400f90:	00400ec1 	.word	0x00400ec1

00400f94 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  400f94:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  400f96:	210b      	movs	r1, #11
  400f98:	4801      	ldr	r0, [pc, #4]	; (400fa0 <PIOB_Handler+0xc>)
  400f9a:	4b02      	ldr	r3, [pc, #8]	; (400fa4 <PIOB_Handler+0x10>)
  400f9c:	4798      	blx	r3
  400f9e:	bd08      	pop	{r3, pc}
  400fa0:	400e1000 	.word	0x400e1000
  400fa4:	00400ec1 	.word	0x00400ec1

00400fa8 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
  400fa8:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
  400faa:	210c      	movs	r1, #12
  400fac:	4801      	ldr	r0, [pc, #4]	; (400fb4 <PIOC_Handler+0xc>)
  400fae:	4b02      	ldr	r3, [pc, #8]	; (400fb8 <PIOC_Handler+0x10>)
  400fb0:	4798      	blx	r3
  400fb2:	bd08      	pop	{r3, pc}
  400fb4:	400e1200 	.word	0x400e1200
  400fb8:	00400ec1 	.word	0x00400ec1

00400fbc <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
  400fbc:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
  400fbe:	2110      	movs	r1, #16
  400fc0:	4801      	ldr	r0, [pc, #4]	; (400fc8 <PIOD_Handler+0xc>)
  400fc2:	4b02      	ldr	r3, [pc, #8]	; (400fcc <PIOD_Handler+0x10>)
  400fc4:	4798      	blx	r3
  400fc6:	bd08      	pop	{r3, pc}
  400fc8:	400e1400 	.word	0x400e1400
  400fcc:	00400ec1 	.word	0x00400ec1

00400fd0 <PIOE_Handler>:
/**
 * \brief Parallel IO Controller E interrupt handler.
 * Redefined PIOE interrupt handler for NVIC interrupt table.
 */
void PIOE_Handler(void)
{
  400fd0:	b508      	push	{r3, lr}
	pio_handler_process(PIOE, ID_PIOE);
  400fd2:	2111      	movs	r1, #17
  400fd4:	4801      	ldr	r0, [pc, #4]	; (400fdc <PIOE_Handler+0xc>)
  400fd6:	4b02      	ldr	r3, [pc, #8]	; (400fe0 <PIOE_Handler+0x10>)
  400fd8:	4798      	blx	r3
  400fda:	bd08      	pop	{r3, pc}
  400fdc:	400e1600 	.word	0x400e1600
  400fe0:	00400ec1 	.word	0x00400ec1

00400fe4 <pmc_mck_set_division>:
 *
 * \param ul_div Division value.
 */
void pmc_mck_set_division(uint32_t ul_div)
{
	switch (ul_div) {
  400fe4:	2803      	cmp	r0, #3
  400fe6:	d011      	beq.n	40100c <pmc_mck_set_division+0x28>
  400fe8:	2804      	cmp	r0, #4
  400fea:	d012      	beq.n	401012 <pmc_mck_set_division+0x2e>
		case 1:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
  400fec:	2802      	cmp	r0, #2
  400fee:	bf0c      	ite	eq
  400ff0:	f44f 7180 	moveq.w	r1, #256	; 0x100
  400ff4:	2100      	movne	r1, #0
		default:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
			break;
	}
	PMC->PMC_MCKR =
			(PMC->PMC_MCKR & (~PMC_MCKR_MDIV_Msk)) | ul_div;
  400ff6:	4a08      	ldr	r2, [pc, #32]	; (401018 <pmc_mck_set_division+0x34>)
  400ff8:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400ffa:	f423 7340 	bic.w	r3, r3, #768	; 0x300
  400ffe:	430b      	orrs	r3, r1
	PMC->PMC_MCKR =
  401000:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  401002:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401004:	f013 0f08 	tst.w	r3, #8
  401008:	d0fb      	beq.n	401002 <pmc_mck_set_division+0x1e>
}
  40100a:	4770      	bx	lr
			ul_div = PMC_MCKR_MDIV_PCK_DIV3;
  40100c:	f44f 7140 	mov.w	r1, #768	; 0x300
			break;
  401010:	e7f1      	b.n	400ff6 <pmc_mck_set_division+0x12>
			ul_div = PMC_MCKR_MDIV_PCK_DIV4;
  401012:	f44f 7100 	mov.w	r1, #512	; 0x200
			break;
  401016:	e7ee      	b.n	400ff6 <pmc_mck_set_division+0x12>
  401018:	400e0600 	.word	0x400e0600

0040101c <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  40101c:	4a17      	ldr	r2, [pc, #92]	; (40107c <pmc_switch_mck_to_pllack+0x60>)
  40101e:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401020:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  401024:	4318      	orrs	r0, r3
  401026:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  401028:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40102a:	f013 0f08 	tst.w	r3, #8
  40102e:	d10a      	bne.n	401046 <pmc_switch_mck_to_pllack+0x2a>
  401030:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  401034:	4911      	ldr	r1, [pc, #68]	; (40107c <pmc_switch_mck_to_pllack+0x60>)
  401036:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  401038:	f012 0f08 	tst.w	r2, #8
  40103c:	d103      	bne.n	401046 <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  40103e:	3b01      	subs	r3, #1
  401040:	d1f9      	bne.n	401036 <pmc_switch_mck_to_pllack+0x1a>
			return 1;
  401042:	2001      	movs	r0, #1
  401044:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  401046:	4a0d      	ldr	r2, [pc, #52]	; (40107c <pmc_switch_mck_to_pllack+0x60>)
  401048:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40104a:	f023 0303 	bic.w	r3, r3, #3
  40104e:	f043 0302 	orr.w	r3, r3, #2
  401052:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  401054:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401056:	f013 0f08 	tst.w	r3, #8
  40105a:	d10a      	bne.n	401072 <pmc_switch_mck_to_pllack+0x56>
  40105c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  401060:	4906      	ldr	r1, [pc, #24]	; (40107c <pmc_switch_mck_to_pllack+0x60>)
  401062:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  401064:	f012 0f08 	tst.w	r2, #8
  401068:	d105      	bne.n	401076 <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  40106a:	3b01      	subs	r3, #1
  40106c:	d1f9      	bne.n	401062 <pmc_switch_mck_to_pllack+0x46>
			return 1;
  40106e:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  401070:	4770      	bx	lr
	return 0;
  401072:	2000      	movs	r0, #0
  401074:	4770      	bx	lr
  401076:	2000      	movs	r0, #0
  401078:	4770      	bx	lr
  40107a:	bf00      	nop
  40107c:	400e0600 	.word	0x400e0600

00401080 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  401080:	b9a0      	cbnz	r0, 4010ac <pmc_switch_mainck_to_xtal+0x2c>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  401082:	480e      	ldr	r0, [pc, #56]	; (4010bc <pmc_switch_mainck_to_xtal+0x3c>)
  401084:	6a03      	ldr	r3, [r0, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  401086:	0209      	lsls	r1, r1, #8
  401088:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  40108a:	4a0d      	ldr	r2, [pc, #52]	; (4010c0 <pmc_switch_mainck_to_xtal+0x40>)
  40108c:	401a      	ands	r2, r3
  40108e:	4b0d      	ldr	r3, [pc, #52]	; (4010c4 <pmc_switch_mainck_to_xtal+0x44>)
  401090:	4313      	orrs	r3, r2
  401092:	4319      	orrs	r1, r3
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  401094:	6201      	str	r1, [r0, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  401096:	4602      	mov	r2, r0
  401098:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40109a:	f013 0f01 	tst.w	r3, #1
  40109e:	d0fb      	beq.n	401098 <pmc_switch_mainck_to_xtal+0x18>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  4010a0:	4a06      	ldr	r2, [pc, #24]	; (4010bc <pmc_switch_mainck_to_xtal+0x3c>)
  4010a2:	6a11      	ldr	r1, [r2, #32]
  4010a4:	4b08      	ldr	r3, [pc, #32]	; (4010c8 <pmc_switch_mainck_to_xtal+0x48>)
  4010a6:	430b      	orrs	r3, r1
  4010a8:	6213      	str	r3, [r2, #32]
  4010aa:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4010ac:	4903      	ldr	r1, [pc, #12]	; (4010bc <pmc_switch_mainck_to_xtal+0x3c>)
  4010ae:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  4010b0:	4a06      	ldr	r2, [pc, #24]	; (4010cc <pmc_switch_mainck_to_xtal+0x4c>)
  4010b2:	401a      	ands	r2, r3
  4010b4:	4b06      	ldr	r3, [pc, #24]	; (4010d0 <pmc_switch_mainck_to_xtal+0x50>)
  4010b6:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4010b8:	620b      	str	r3, [r1, #32]
  4010ba:	4770      	bx	lr
  4010bc:	400e0600 	.word	0x400e0600
  4010c0:	ffc8fffc 	.word	0xffc8fffc
  4010c4:	00370001 	.word	0x00370001
  4010c8:	01370000 	.word	0x01370000
  4010cc:	fec8fffc 	.word	0xfec8fffc
  4010d0:	01370002 	.word	0x01370002

004010d4 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  4010d4:	4b02      	ldr	r3, [pc, #8]	; (4010e0 <pmc_osc_is_ready_mainck+0xc>)
  4010d6:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  4010d8:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  4010dc:	4770      	bx	lr
  4010de:	bf00      	nop
  4010e0:	400e0600 	.word	0x400e0600

004010e4 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  4010e4:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  4010e8:	4b01      	ldr	r3, [pc, #4]	; (4010f0 <pmc_disable_pllack+0xc>)
  4010ea:	629a      	str	r2, [r3, #40]	; 0x28
  4010ec:	4770      	bx	lr
  4010ee:	bf00      	nop
  4010f0:	400e0600 	.word	0x400e0600

004010f4 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  4010f4:	4b02      	ldr	r3, [pc, #8]	; (401100 <pmc_is_locked_pllack+0xc>)
  4010f6:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  4010f8:	f000 0002 	and.w	r0, r0, #2
  4010fc:	4770      	bx	lr
  4010fe:	bf00      	nop
  401100:	400e0600 	.word	0x400e0600

00401104 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
  401104:	283f      	cmp	r0, #63	; 0x3f
  401106:	d81e      	bhi.n	401146 <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
  401108:	281f      	cmp	r0, #31
  40110a:	d80c      	bhi.n	401126 <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  40110c:	4b11      	ldr	r3, [pc, #68]	; (401154 <pmc_enable_periph_clk+0x50>)
  40110e:	699a      	ldr	r2, [r3, #24]
  401110:	2301      	movs	r3, #1
  401112:	4083      	lsls	r3, r0
  401114:	4393      	bics	r3, r2
  401116:	d018      	beq.n	40114a <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
  401118:	2301      	movs	r3, #1
  40111a:	fa03 f000 	lsl.w	r0, r3, r0
  40111e:	4b0d      	ldr	r3, [pc, #52]	; (401154 <pmc_enable_periph_clk+0x50>)
  401120:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  401122:	2000      	movs	r0, #0
  401124:	4770      	bx	lr
		ul_id -= 32;
  401126:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  401128:	4b0a      	ldr	r3, [pc, #40]	; (401154 <pmc_enable_periph_clk+0x50>)
  40112a:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  40112e:	2301      	movs	r3, #1
  401130:	4083      	lsls	r3, r0
  401132:	4393      	bics	r3, r2
  401134:	d00b      	beq.n	40114e <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
  401136:	2301      	movs	r3, #1
  401138:	fa03 f000 	lsl.w	r0, r3, r0
  40113c:	4b05      	ldr	r3, [pc, #20]	; (401154 <pmc_enable_periph_clk+0x50>)
  40113e:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
	return 0;
  401142:	2000      	movs	r0, #0
  401144:	4770      	bx	lr
		return 1;
  401146:	2001      	movs	r0, #1
  401148:	4770      	bx	lr
	return 0;
  40114a:	2000      	movs	r0, #0
  40114c:	4770      	bx	lr
  40114e:	2000      	movs	r0, #0
}
  401150:	4770      	bx	lr
  401152:	bf00      	nop
  401154:	400e0600 	.word	0x400e0600

00401158 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  401158:	e7fe      	b.n	401158 <Dummy_Handler>
	...

0040115c <Reset_Handler>:
{
  40115c:	b500      	push	{lr}
  40115e:	b083      	sub	sp, #12
        if (pSrc != pDest) {
  401160:	4b25      	ldr	r3, [pc, #148]	; (4011f8 <Reset_Handler+0x9c>)
  401162:	4a26      	ldr	r2, [pc, #152]	; (4011fc <Reset_Handler+0xa0>)
  401164:	429a      	cmp	r2, r3
  401166:	d010      	beq.n	40118a <Reset_Handler+0x2e>
                for (; pDest < &_erelocate;) {
  401168:	4b25      	ldr	r3, [pc, #148]	; (401200 <Reset_Handler+0xa4>)
  40116a:	4a23      	ldr	r2, [pc, #140]	; (4011f8 <Reset_Handler+0x9c>)
  40116c:	429a      	cmp	r2, r3
  40116e:	d20c      	bcs.n	40118a <Reset_Handler+0x2e>
  401170:	3b01      	subs	r3, #1
  401172:	1a9b      	subs	r3, r3, r2
  401174:	f023 0303 	bic.w	r3, r3, #3
  401178:	3304      	adds	r3, #4
  40117a:	4413      	add	r3, r2
  40117c:	491f      	ldr	r1, [pc, #124]	; (4011fc <Reset_Handler+0xa0>)
                        *pDest++ = *pSrc++;
  40117e:	f851 0b04 	ldr.w	r0, [r1], #4
  401182:	f842 0b04 	str.w	r0, [r2], #4
                for (; pDest < &_erelocate;) {
  401186:	429a      	cmp	r2, r3
  401188:	d1f9      	bne.n	40117e <Reset_Handler+0x22>
        for (pDest = &_szero; pDest < &_ezero;) {
  40118a:	4b1e      	ldr	r3, [pc, #120]	; (401204 <Reset_Handler+0xa8>)
  40118c:	4a1e      	ldr	r2, [pc, #120]	; (401208 <Reset_Handler+0xac>)
  40118e:	429a      	cmp	r2, r3
  401190:	d20a      	bcs.n	4011a8 <Reset_Handler+0x4c>
  401192:	3b01      	subs	r3, #1
  401194:	1a9b      	subs	r3, r3, r2
  401196:	f023 0303 	bic.w	r3, r3, #3
  40119a:	3304      	adds	r3, #4
  40119c:	4413      	add	r3, r2
                *pDest++ = 0;
  40119e:	2100      	movs	r1, #0
  4011a0:	f842 1b04 	str.w	r1, [r2], #4
        for (pDest = &_szero; pDest < &_ezero;) {
  4011a4:	4293      	cmp	r3, r2
  4011a6:	d1fb      	bne.n	4011a0 <Reset_Handler+0x44>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  4011a8:	4a18      	ldr	r2, [pc, #96]	; (40120c <Reset_Handler+0xb0>)
  4011aa:	4b19      	ldr	r3, [pc, #100]	; (401210 <Reset_Handler+0xb4>)
  4011ac:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  4011b0:	6093      	str	r3, [r2, #8]
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
  4011b2:	f3ef 8310 	mrs	r3, PRIMASK
static volatile uint32_t cpu_irq_critical_section_counter;
static volatile bool     cpu_irq_prev_interrupt_state;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = cpu_irq_is_enabled();
  4011b6:	fab3 f383 	clz	r3, r3
  4011ba:	095b      	lsrs	r3, r3, #5
  4011bc:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  4011be:	b672      	cpsid	i
  __ASM volatile ("dmb");
  4011c0:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  4011c4:	2200      	movs	r2, #0
  4011c6:	4b13      	ldr	r3, [pc, #76]	; (401214 <Reset_Handler+0xb8>)
  4011c8:	701a      	strb	r2, [r3, #0]
	return flags;
  4011ca:	9901      	ldr	r1, [sp, #4]
 */
__always_inline static void fpu_enable(void)
{
	irqflags_t flags;
	flags = cpu_irq_save();
	REG_CPACR |=  (0xFu << 20);
  4011cc:	4a12      	ldr	r2, [pc, #72]	; (401218 <Reset_Handler+0xbc>)
  4011ce:	6813      	ldr	r3, [r2, #0]
  4011d0:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
  4011d4:	6013      	str	r3, [r2, #0]
  __ASM volatile ("dsb");
  4011d6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  4011da:	f3bf 8f6f 	isb	sy
	return (flags);
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	if (cpu_irq_is_enabled_flags(flags))
  4011de:	b129      	cbz	r1, 4011ec <Reset_Handler+0x90>
		cpu_irq_enable();
  4011e0:	2201      	movs	r2, #1
  4011e2:	4b0c      	ldr	r3, [pc, #48]	; (401214 <Reset_Handler+0xb8>)
  4011e4:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb");
  4011e6:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  4011ea:	b662      	cpsie	i
        __libc_init_array();
  4011ec:	4b0b      	ldr	r3, [pc, #44]	; (40121c <Reset_Handler+0xc0>)
  4011ee:	4798      	blx	r3
        main();
  4011f0:	4b0b      	ldr	r3, [pc, #44]	; (401220 <Reset_Handler+0xc4>)
  4011f2:	4798      	blx	r3
  4011f4:	e7fe      	b.n	4011f4 <Reset_Handler+0x98>
  4011f6:	bf00      	nop
  4011f8:	20400000 	.word	0x20400000
  4011fc:	00406f1c 	.word	0x00406f1c
  401200:	204009d0 	.word	0x204009d0
  401204:	20400cd4 	.word	0x20400cd4
  401208:	204009d0 	.word	0x204009d0
  40120c:	e000ed00 	.word	0xe000ed00
  401210:	00400000 	.word	0x00400000
  401214:	20400018 	.word	0x20400018
  401218:	e000ed88 	.word	0xe000ed88
  40121c:	00401bfd 	.word	0x00401bfd
  401220:	004016e1 	.word	0x004016e1

00401224 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate( void )
{
  /* Determine clock frequency according to clock register values */
  switch (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk)
  401224:	4b3b      	ldr	r3, [pc, #236]	; (401314 <SystemCoreClockUpdate+0xf0>)
  401226:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401228:	f003 0303 	and.w	r3, r3, #3
  40122c:	2b01      	cmp	r3, #1
  40122e:	d01d      	beq.n	40126c <SystemCoreClockUpdate+0x48>
  401230:	b183      	cbz	r3, 401254 <SystemCoreClockUpdate+0x30>
  401232:	2b02      	cmp	r3, #2
  401234:	d036      	beq.n	4012a4 <SystemCoreClockUpdate+0x80>

    default:
    break;
  }

  if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 )
  401236:	4b37      	ldr	r3, [pc, #220]	; (401314 <SystemCoreClockUpdate+0xf0>)
  401238:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  40123a:	f003 0370 	and.w	r3, r3, #112	; 0x70
  40123e:	2b70      	cmp	r3, #112	; 0x70
  401240:	d05f      	beq.n	401302 <SystemCoreClockUpdate+0xde>
  {
    SystemCoreClock /= 3U;
  }
  else
  {
    SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  401242:	4b34      	ldr	r3, [pc, #208]	; (401314 <SystemCoreClockUpdate+0xf0>)
  401244:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  401246:	4934      	ldr	r1, [pc, #208]	; (401318 <SystemCoreClockUpdate+0xf4>)
  401248:	f3c2 1202 	ubfx	r2, r2, #4, #3
  40124c:	680b      	ldr	r3, [r1, #0]
  40124e:	40d3      	lsrs	r3, r2
  401250:	600b      	str	r3, [r1, #0]
  401252:	4770      	bx	lr
      if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL )
  401254:	4b31      	ldr	r3, [pc, #196]	; (40131c <SystemCoreClockUpdate+0xf8>)
  401256:	695b      	ldr	r3, [r3, #20]
  401258:	f013 0f80 	tst.w	r3, #128	; 0x80
        SystemCoreClock = CHIP_FREQ_XTAL_32K;
  40125c:	bf14      	ite	ne
  40125e:	f44f 4200 	movne.w	r2, #32768	; 0x8000
        SystemCoreClock = CHIP_FREQ_SLCK_RC;
  401262:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  401266:	4b2c      	ldr	r3, [pc, #176]	; (401318 <SystemCoreClockUpdate+0xf4>)
  401268:	601a      	str	r2, [r3, #0]
  40126a:	e7e4      	b.n	401236 <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  40126c:	4b29      	ldr	r3, [pc, #164]	; (401314 <SystemCoreClockUpdate+0xf0>)
  40126e:	6a1b      	ldr	r3, [r3, #32]
  401270:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  401274:	d003      	beq.n	40127e <SystemCoreClockUpdate+0x5a>
        SystemCoreClock = CHIP_FREQ_XTAL_12M;
  401276:	4a2a      	ldr	r2, [pc, #168]	; (401320 <SystemCoreClockUpdate+0xfc>)
  401278:	4b27      	ldr	r3, [pc, #156]	; (401318 <SystemCoreClockUpdate+0xf4>)
  40127a:	601a      	str	r2, [r3, #0]
  40127c:	e7db      	b.n	401236 <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  40127e:	4a29      	ldr	r2, [pc, #164]	; (401324 <SystemCoreClockUpdate+0x100>)
  401280:	4b25      	ldr	r3, [pc, #148]	; (401318 <SystemCoreClockUpdate+0xf4>)
  401282:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  401284:	4b23      	ldr	r3, [pc, #140]	; (401314 <SystemCoreClockUpdate+0xf0>)
  401286:	6a1b      	ldr	r3, [r3, #32]
  401288:	f003 0370 	and.w	r3, r3, #112	; 0x70
  40128c:	2b10      	cmp	r3, #16
  40128e:	d005      	beq.n	40129c <SystemCoreClockUpdate+0x78>
  401290:	2b20      	cmp	r3, #32
  401292:	d1d0      	bne.n	401236 <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 3U;
  401294:	4a22      	ldr	r2, [pc, #136]	; (401320 <SystemCoreClockUpdate+0xfc>)
  401296:	4b20      	ldr	r3, [pc, #128]	; (401318 <SystemCoreClockUpdate+0xf4>)
  401298:	601a      	str	r2, [r3, #0]
          break;
  40129a:	e7cc      	b.n	401236 <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 2U;
  40129c:	4a22      	ldr	r2, [pc, #136]	; (401328 <SystemCoreClockUpdate+0x104>)
  40129e:	4b1e      	ldr	r3, [pc, #120]	; (401318 <SystemCoreClockUpdate+0xf4>)
  4012a0:	601a      	str	r2, [r3, #0]
          break;
  4012a2:	e7c8      	b.n	401236 <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  4012a4:	4b1b      	ldr	r3, [pc, #108]	; (401314 <SystemCoreClockUpdate+0xf0>)
  4012a6:	6a1b      	ldr	r3, [r3, #32]
  4012a8:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  4012ac:	d016      	beq.n	4012dc <SystemCoreClockUpdate+0xb8>
        SystemCoreClock = CHIP_FREQ_XTAL_12M ;
  4012ae:	4a1c      	ldr	r2, [pc, #112]	; (401320 <SystemCoreClockUpdate+0xfc>)
  4012b0:	4b19      	ldr	r3, [pc, #100]	; (401318 <SystemCoreClockUpdate+0xf4>)
  4012b2:	601a      	str	r2, [r3, #0]
      if ( (uint32_t) (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK )
  4012b4:	4b17      	ldr	r3, [pc, #92]	; (401314 <SystemCoreClockUpdate+0xf0>)
  4012b6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4012b8:	f003 0303 	and.w	r3, r3, #3
  4012bc:	2b02      	cmp	r3, #2
  4012be:	d1ba      	bne.n	401236 <SystemCoreClockUpdate+0x12>
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  4012c0:	4a14      	ldr	r2, [pc, #80]	; (401314 <SystemCoreClockUpdate+0xf0>)
  4012c2:	6a91      	ldr	r1, [r2, #40]	; 0x28
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  4012c4:	6a92      	ldr	r2, [r2, #40]	; 0x28
  4012c6:	4814      	ldr	r0, [pc, #80]	; (401318 <SystemCoreClockUpdate+0xf4>)
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  4012c8:	f3c1 410a 	ubfx	r1, r1, #16, #11
  4012cc:	6803      	ldr	r3, [r0, #0]
  4012ce:	fb01 3303 	mla	r3, r1, r3, r3
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  4012d2:	b2d2      	uxtb	r2, r2
  4012d4:	fbb3 f3f2 	udiv	r3, r3, r2
  4012d8:	6003      	str	r3, [r0, #0]
  4012da:	e7ac      	b.n	401236 <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  4012dc:	4a11      	ldr	r2, [pc, #68]	; (401324 <SystemCoreClockUpdate+0x100>)
  4012de:	4b0e      	ldr	r3, [pc, #56]	; (401318 <SystemCoreClockUpdate+0xf4>)
  4012e0:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  4012e2:	4b0c      	ldr	r3, [pc, #48]	; (401314 <SystemCoreClockUpdate+0xf0>)
  4012e4:	6a1b      	ldr	r3, [r3, #32]
  4012e6:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4012ea:	2b10      	cmp	r3, #16
  4012ec:	d005      	beq.n	4012fa <SystemCoreClockUpdate+0xd6>
  4012ee:	2b20      	cmp	r3, #32
  4012f0:	d1e0      	bne.n	4012b4 <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 3U;
  4012f2:	4a0b      	ldr	r2, [pc, #44]	; (401320 <SystemCoreClockUpdate+0xfc>)
  4012f4:	4b08      	ldr	r3, [pc, #32]	; (401318 <SystemCoreClockUpdate+0xf4>)
  4012f6:	601a      	str	r2, [r3, #0]
          break;
  4012f8:	e7dc      	b.n	4012b4 <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 2U;
  4012fa:	4a0b      	ldr	r2, [pc, #44]	; (401328 <SystemCoreClockUpdate+0x104>)
  4012fc:	4b06      	ldr	r3, [pc, #24]	; (401318 <SystemCoreClockUpdate+0xf4>)
  4012fe:	601a      	str	r2, [r3, #0]
          break;
  401300:	e7d8      	b.n	4012b4 <SystemCoreClockUpdate+0x90>
    SystemCoreClock /= 3U;
  401302:	4a05      	ldr	r2, [pc, #20]	; (401318 <SystemCoreClockUpdate+0xf4>)
  401304:	6813      	ldr	r3, [r2, #0]
  401306:	4909      	ldr	r1, [pc, #36]	; (40132c <SystemCoreClockUpdate+0x108>)
  401308:	fba1 1303 	umull	r1, r3, r1, r3
  40130c:	085b      	lsrs	r3, r3, #1
  40130e:	6013      	str	r3, [r2, #0]
  401310:	4770      	bx	lr
  401312:	bf00      	nop
  401314:	400e0600 	.word	0x400e0600
  401318:	2040001c 	.word	0x2040001c
  40131c:	400e1810 	.word	0x400e1810
  401320:	00b71b00 	.word	0x00b71b00
  401324:	003d0900 	.word	0x003d0900
  401328:	007a1200 	.word	0x007a1200
  40132c:	aaaaaaab 	.word	0xaaaaaaab

00401330 <system_init_flash>:
 * Initialize flash.
 */
void system_init_flash( uint32_t ul_clk )
{
  /* Set FWS for embedded Flash access according to operating frequency */
  if ( ul_clk < CHIP_FREQ_FWS_0 )
  401330:	4b16      	ldr	r3, [pc, #88]	; (40138c <system_init_flash+0x5c>)
  401332:	4298      	cmp	r0, r3
  401334:	d913      	bls.n	40135e <system_init_flash+0x2e>
  {
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  }
  else
  {
    if (ul_clk < CHIP_FREQ_FWS_1)
  401336:	4b16      	ldr	r3, [pc, #88]	; (401390 <system_init_flash+0x60>)
  401338:	4298      	cmp	r0, r3
  40133a:	d915      	bls.n	401368 <system_init_flash+0x38>
    {
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
    }
    else
    {
      if (ul_clk < CHIP_FREQ_FWS_2)
  40133c:	4b15      	ldr	r3, [pc, #84]	; (401394 <system_init_flash+0x64>)
  40133e:	4298      	cmp	r0, r3
  401340:	d916      	bls.n	401370 <system_init_flash+0x40>
      {
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
      }
      else
      {
        if ( ul_clk < CHIP_FREQ_FWS_3 )
  401342:	4b15      	ldr	r3, [pc, #84]	; (401398 <system_init_flash+0x68>)
  401344:	4298      	cmp	r0, r3
  401346:	d917      	bls.n	401378 <system_init_flash+0x48>
        {
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
        }
        else
        {
          if ( ul_clk < CHIP_FREQ_FWS_4 )
  401348:	4b14      	ldr	r3, [pc, #80]	; (40139c <system_init_flash+0x6c>)
  40134a:	4298      	cmp	r0, r3
  40134c:	d918      	bls.n	401380 <system_init_flash+0x50>
          {
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
          }
          else
          {
            if ( ul_clk < CHIP_FREQ_FWS_5 )
  40134e:	4b14      	ldr	r3, [pc, #80]	; (4013a0 <system_init_flash+0x70>)
  401350:	4298      	cmp	r0, r3
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  401352:	bf94      	ite	ls
  401354:	4a13      	ldrls	r2, [pc, #76]	; (4013a4 <system_init_flash+0x74>)
            }
            else
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(6)|EEFC_FMR_CLOE;
  401356:	4a14      	ldrhi	r2, [pc, #80]	; (4013a8 <system_init_flash+0x78>)
  401358:	4b14      	ldr	r3, [pc, #80]	; (4013ac <system_init_flash+0x7c>)
  40135a:	601a      	str	r2, [r3, #0]
  40135c:	4770      	bx	lr
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  40135e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  401362:	4b12      	ldr	r3, [pc, #72]	; (4013ac <system_init_flash+0x7c>)
  401364:	601a      	str	r2, [r3, #0]
  401366:	4770      	bx	lr
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  401368:	4a11      	ldr	r2, [pc, #68]	; (4013b0 <system_init_flash+0x80>)
  40136a:	4b10      	ldr	r3, [pc, #64]	; (4013ac <system_init_flash+0x7c>)
  40136c:	601a      	str	r2, [r3, #0]
  40136e:	4770      	bx	lr
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  401370:	4a10      	ldr	r2, [pc, #64]	; (4013b4 <system_init_flash+0x84>)
  401372:	4b0e      	ldr	r3, [pc, #56]	; (4013ac <system_init_flash+0x7c>)
  401374:	601a      	str	r2, [r3, #0]
  401376:	4770      	bx	lr
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  401378:	4a0f      	ldr	r2, [pc, #60]	; (4013b8 <system_init_flash+0x88>)
  40137a:	4b0c      	ldr	r3, [pc, #48]	; (4013ac <system_init_flash+0x7c>)
  40137c:	601a      	str	r2, [r3, #0]
  40137e:	4770      	bx	lr
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  401380:	f04f 2204 	mov.w	r2, #67109888	; 0x4000400
  401384:	4b09      	ldr	r3, [pc, #36]	; (4013ac <system_init_flash+0x7c>)
  401386:	601a      	str	r2, [r3, #0]
  401388:	4770      	bx	lr
  40138a:	bf00      	nop
  40138c:	015ef3bf 	.word	0x015ef3bf
  401390:	02bde77f 	.word	0x02bde77f
  401394:	041cdb3f 	.word	0x041cdb3f
  401398:	057bceff 	.word	0x057bceff
  40139c:	06dac2bf 	.word	0x06dac2bf
  4013a0:	0839b67f 	.word	0x0839b67f
  4013a4:	04000500 	.word	0x04000500
  4013a8:	04000600 	.word	0x04000600
  4013ac:	400e0c00 	.word	0x400e0c00
  4013b0:	04000100 	.word	0x04000100
  4013b4:	04000200 	.word	0x04000200
  4013b8:	04000300 	.word	0x04000300

004013bc <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  4013bc:	4b0a      	ldr	r3, [pc, #40]	; (4013e8 <_sbrk+0x2c>)
  4013be:	681b      	ldr	r3, [r3, #0]
  4013c0:	b153      	cbz	r3, 4013d8 <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
  4013c2:	4b09      	ldr	r3, [pc, #36]	; (4013e8 <_sbrk+0x2c>)
  4013c4:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  4013c6:	181a      	adds	r2, r3, r0
  4013c8:	4908      	ldr	r1, [pc, #32]	; (4013ec <_sbrk+0x30>)
  4013ca:	4291      	cmp	r1, r2
  4013cc:	db08      	blt.n	4013e0 <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
  4013ce:	4610      	mov	r0, r2
  4013d0:	4a05      	ldr	r2, [pc, #20]	; (4013e8 <_sbrk+0x2c>)
  4013d2:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  4013d4:	4618      	mov	r0, r3
  4013d6:	4770      	bx	lr
		heap = (unsigned char *)&_end;
  4013d8:	4a05      	ldr	r2, [pc, #20]	; (4013f0 <_sbrk+0x34>)
  4013da:	4b03      	ldr	r3, [pc, #12]	; (4013e8 <_sbrk+0x2c>)
  4013dc:	601a      	str	r2, [r3, #0]
  4013de:	e7f0      	b.n	4013c2 <_sbrk+0x6>
		return (caddr_t) -1;	
  4013e0:	f04f 30ff 	mov.w	r0, #4294967295
}
  4013e4:	4770      	bx	lr
  4013e6:	bf00      	nop
  4013e8:	20400c64 	.word	0x20400c64
  4013ec:	2045fffc 	.word	0x2045fffc
  4013f0:	20402ed8 	.word	0x20402ed8

004013f4 <Button1_Handler>:
//HANDLERS:
volatile int but_flag_1=0;
volatile int but_flag_2=0;
volatile int but_flag_3=0;
void Button1_Handler(void){
	but_flag_1 = 1;
  4013f4:	2201      	movs	r2, #1
  4013f6:	4b01      	ldr	r3, [pc, #4]	; (4013fc <Button1_Handler+0x8>)
  4013f8:	601a      	str	r2, [r3, #0]
  4013fa:	4770      	bx	lr
  4013fc:	20400c68 	.word	0x20400c68

00401400 <Button2_Handler>:
}
void Button2_Handler(void){
	but_flag_2 = 1;
  401400:	2201      	movs	r2, #1
  401402:	4b01      	ldr	r3, [pc, #4]	; (401408 <Button2_Handler+0x8>)
  401404:	601a      	str	r2, [r3, #0]
  401406:	4770      	bx	lr
  401408:	20400c6c 	.word	0x20400c6c

0040140c <Button3_Handler>:
}
void Button3_Handler(void){
	but_flag_3 = 1;
  40140c:	2201      	movs	r2, #1
  40140e:	4b01      	ldr	r3, [pc, #4]	; (401414 <Button3_Handler+0x8>)
  401410:	601a      	str	r2, [r3, #0]
  401412:	4770      	bx	lr
  401414:	20400c70 	.word	0x20400c70

00401418 <pisca_led_3>:
void pisca_led_3(int n, int t){
  401418:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	for (int i=0;i<n;i++){
  40141c:	f1b0 0800 	subs.w	r8, r0, #0
  401420:	dd30      	ble.n	401484 <pisca_led_3+0x6c>
  401422:	460f      	mov	r7, r1
		delay_ms(t);
  401424:	17cd      	asrs	r5, r1, #31
  401426:	4b18      	ldr	r3, [pc, #96]	; (401488 <pisca_led_3+0x70>)
  401428:	fba1 0103 	umull	r0, r1, r1, r3
  40142c:	fb03 1105 	mla	r1, r3, r5, r1
  401430:	f241 722c 	movw	r2, #5932	; 0x172c
  401434:	2300      	movs	r3, #0
  401436:	f241 742b 	movw	r4, #5931	; 0x172b
  40143a:	2500      	movs	r5, #0
  40143c:	1900      	adds	r0, r0, r4
  40143e:	4169      	adcs	r1, r5
  401440:	4c12      	ldr	r4, [pc, #72]	; (40148c <pisca_led_3+0x74>)
  401442:	47a0      	blx	r4
  401444:	4682      	mov	sl, r0
  401446:	2400      	movs	r4, #0
		pio_clear(LED_PIO_3, LED_IDX_MASK_3);
  401448:	4e11      	ldr	r6, [pc, #68]	; (401490 <pisca_led_3+0x78>)
  40144a:	f8df 9050 	ldr.w	r9, [pc, #80]	; 40149c <pisca_led_3+0x84>
		delay_ms(t);
  40144e:	4d11      	ldr	r5, [pc, #68]	; (401494 <pisca_led_3+0x7c>)
  401450:	e00a      	b.n	401468 <pisca_led_3+0x50>
  401452:	2033      	movs	r0, #51	; 0x33
  401454:	47a8      	blx	r5
		pio_set(LED_PIO_3, LED_IDX_MASK_3);
  401456:	2104      	movs	r1, #4
  401458:	4630      	mov	r0, r6
  40145a:	4b0f      	ldr	r3, [pc, #60]	; (401498 <pisca_led_3+0x80>)
  40145c:	4798      	blx	r3
		delay_ms(t);
  40145e:	2033      	movs	r0, #51	; 0x33
  401460:	47a8      	blx	r5
	for (int i=0;i<n;i++){
  401462:	3401      	adds	r4, #1
  401464:	45a0      	cmp	r8, r4
  401466:	d00d      	beq.n	401484 <pisca_led_3+0x6c>
		pio_clear(LED_PIO_3, LED_IDX_MASK_3);
  401468:	2104      	movs	r1, #4
  40146a:	4630      	mov	r0, r6
  40146c:	47c8      	blx	r9
		delay_ms(t);
  40146e:	2f00      	cmp	r7, #0
  401470:	d0ef      	beq.n	401452 <pisca_led_3+0x3a>
  401472:	4650      	mov	r0, sl
  401474:	47a8      	blx	r5
		pio_set(LED_PIO_3, LED_IDX_MASK_3);
  401476:	2104      	movs	r1, #4
  401478:	4630      	mov	r0, r6
  40147a:	4b07      	ldr	r3, [pc, #28]	; (401498 <pisca_led_3+0x80>)
  40147c:	4798      	blx	r3
		delay_ms(t);
  40147e:	4650      	mov	r0, sl
  401480:	47a8      	blx	r5
  401482:	e7ee      	b.n	401462 <pisca_led_3+0x4a>
  401484:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  401488:	11e1a300 	.word	0x11e1a300
  40148c:	004018ed 	.word	0x004018ed
  401490:	400e1000 	.word	0x400e1000
  401494:	20400001 	.word	0x20400001
  401498:	00400cf9 	.word	0x00400cf9
  40149c:	00400cfd 	.word	0x00400cfd

004014a0 <RTC_init>:
void RTC_init(Rtc *rtc, uint32_t id_rtc, calendar t, uint32_t irq_type){
  4014a0:	b082      	sub	sp, #8
  4014a2:	b570      	push	{r4, r5, r6, lr}
  4014a4:	b082      	sub	sp, #8
  4014a6:	4605      	mov	r5, r0
  4014a8:	460c      	mov	r4, r1
  4014aa:	a906      	add	r1, sp, #24
  4014ac:	e881 000c 	stmia.w	r1, {r2, r3}
	pmc_enable_periph_clk(ID_RTC);
  4014b0:	2002      	movs	r0, #2
  4014b2:	4b1d      	ldr	r3, [pc, #116]	; (401528 <RTC_init+0x88>)
  4014b4:	4798      	blx	r3
	rtc_set_hour_mode(rtc, 0);
  4014b6:	2100      	movs	r1, #0
  4014b8:	4628      	mov	r0, r5
  4014ba:	4b1c      	ldr	r3, [pc, #112]	; (40152c <RTC_init+0x8c>)
  4014bc:	4798      	blx	r3
	rtc_set_date(rtc, t.year, t.month, t.day, t.week);
  4014be:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4014c0:	9300      	str	r3, [sp, #0]
  4014c2:	9b08      	ldr	r3, [sp, #32]
  4014c4:	9a07      	ldr	r2, [sp, #28]
  4014c6:	9906      	ldr	r1, [sp, #24]
  4014c8:	4628      	mov	r0, r5
  4014ca:	4e19      	ldr	r6, [pc, #100]	; (401530 <RTC_init+0x90>)
  4014cc:	47b0      	blx	r6
	rtc_set_time(rtc, t.hour, t.minute, t.second);
  4014ce:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  4014d0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  4014d2:	990a      	ldr	r1, [sp, #40]	; 0x28
  4014d4:	4628      	mov	r0, r5
  4014d6:	4e17      	ldr	r6, [pc, #92]	; (401534 <RTC_init+0x94>)
  4014d8:	47b0      	blx	r6
	NVIC_DisableIRQ(id_rtc);
  4014da:	b262      	sxtb	r2, r4
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
  4014dc:	b2e4      	uxtb	r4, r4
  4014de:	f004 011f 	and.w	r1, r4, #31
  4014e2:	2301      	movs	r3, #1
  4014e4:	408b      	lsls	r3, r1
  4014e6:	0956      	lsrs	r6, r2, #5
  4014e8:	4813      	ldr	r0, [pc, #76]	; (401538 <RTC_init+0x98>)
  4014ea:	eb00 0186 	add.w	r1, r0, r6, lsl #2
  4014ee:	f8c1 3080 	str.w	r3, [r1, #128]	; 0x80
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
  4014f2:	f8c1 3180 	str.w	r3, [r1, #384]	; 0x180
  if(IRQn < 0) {
  4014f6:	2a00      	cmp	r2, #0
  4014f8:	db0f      	blt.n	40151a <RTC_init+0x7a>
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  4014fa:	490f      	ldr	r1, [pc, #60]	; (401538 <RTC_init+0x98>)
  4014fc:	4411      	add	r1, r2
  4014fe:	2280      	movs	r2, #128	; 0x80
  401500:	f881 2300 	strb.w	r2, [r1, #768]	; 0x300
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  401504:	f840 3026 	str.w	r3, [r0, r6, lsl #2]
	rtc_enable_interrupt(rtc,  irq_type);
  401508:	990d      	ldr	r1, [sp, #52]	; 0x34
  40150a:	4628      	mov	r0, r5
  40150c:	4b0b      	ldr	r3, [pc, #44]	; (40153c <RTC_init+0x9c>)
  40150e:	4798      	blx	r3
}
  401510:	b002      	add	sp, #8
  401512:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  401516:	b002      	add	sp, #8
  401518:	4770      	bx	lr
    SCB->SHPR[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  40151a:	f004 040f 	and.w	r4, r4, #15
  40151e:	4a08      	ldr	r2, [pc, #32]	; (401540 <RTC_init+0xa0>)
  401520:	2180      	movs	r1, #128	; 0x80
  401522:	5511      	strb	r1, [r2, r4]
  401524:	e7ee      	b.n	401504 <RTC_init+0x64>
  401526:	bf00      	nop
  401528:	00401105 	.word	0x00401105
  40152c:	004001ad 	.word	0x004001ad
  401530:	00400345 	.word	0x00400345
  401534:	00400221 	.word	0x00400221
  401538:	e000e100 	.word	0xe000e100
  40153c:	004001c3 	.word	0x004001c3
  401540:	e000ed14 	.word	0xe000ed14

00401544 <LED_init>:
void LED_init(int estado){
  401544:	b5f0      	push	{r4, r5, r6, r7, lr}
  401546:	b083      	sub	sp, #12
  401548:	4606      	mov	r6, r0
	pmc_enable_periph_clk(LED_PIO_ID_1);
  40154a:	200a      	movs	r0, #10
  40154c:	4f0e      	ldr	r7, [pc, #56]	; (401588 <LED_init+0x44>)
  40154e:	47b8      	blx	r7
	pio_set_output(LED_PIO_1, LED_IDX_MASK_1, estado, 0, 0); //3o argumento fala como incializar o led, 0 eh ligado!!!!!!!!!!!
  401550:	2400      	movs	r4, #0
  401552:	9400      	str	r4, [sp, #0]
  401554:	4623      	mov	r3, r4
  401556:	4632      	mov	r2, r6
  401558:	2101      	movs	r1, #1
  40155a:	480c      	ldr	r0, [pc, #48]	; (40158c <LED_init+0x48>)
  40155c:	4d0c      	ldr	r5, [pc, #48]	; (401590 <LED_init+0x4c>)
  40155e:	47a8      	blx	r5
	pmc_enable_periph_clk(LED_PIO_ID_2);
  401560:	200c      	movs	r0, #12
  401562:	47b8      	blx	r7
	pio_set_output(LED_PIO_2, LED_IDX_MASK_2, estado, 0, 0);
  401564:	9400      	str	r4, [sp, #0]
  401566:	4623      	mov	r3, r4
  401568:	4632      	mov	r2, r6
  40156a:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  40156e:	4809      	ldr	r0, [pc, #36]	; (401594 <LED_init+0x50>)
  401570:	47a8      	blx	r5
	pmc_enable_periph_clk(LED_PIO_ID_3);
  401572:	200b      	movs	r0, #11
  401574:	47b8      	blx	r7
	pio_set_output(LED_PIO_3, LED_IDX_MASK_3, estado, 0, 0);
  401576:	9400      	str	r4, [sp, #0]
  401578:	4623      	mov	r3, r4
  40157a:	4632      	mov	r2, r6
  40157c:	2104      	movs	r1, #4
  40157e:	4806      	ldr	r0, [pc, #24]	; (401598 <LED_init+0x54>)
  401580:	47a8      	blx	r5
};
  401582:	b003      	add	sp, #12
  401584:	bdf0      	pop	{r4, r5, r6, r7, pc}
  401586:	bf00      	nop
  401588:	00401105 	.word	0x00401105
  40158c:	400e0e00 	.word	0x400e0e00
  401590:	00400dc9 	.word	0x00400dc9
  401594:	400e1200 	.word	0x400e1200
  401598:	400e1000 	.word	0x400e1000

0040159c <BUT_init>:
{
  40159c:	b5f0      	push	{r4, r5, r6, r7, lr}
  40159e:	b083      	sub	sp, #12
	pmc_enable_periph_clk(BUT_PIO_ID_1);
  4015a0:	2010      	movs	r0, #16
  4015a2:	4c2c      	ldr	r4, [pc, #176]	; (401654 <BUT_init+0xb8>)
  4015a4:	47a0      	blx	r4
	pmc_enable_periph_clk(BUT_PIO_ID_2);
  4015a6:	200c      	movs	r0, #12
  4015a8:	47a0      	blx	r4
	pmc_enable_periph_clk(BUT_PIO_ID_3);
  4015aa:	200a      	movs	r0, #10
  4015ac:	47a0      	blx	r4
	pio_configure(BUT_PIO_1, PIO_INPUT, BUT_IDX_MASK_1, PIO_PULLUP | PIO_DEBOUNCE);
  4015ae:	4c2a      	ldr	r4, [pc, #168]	; (401658 <BUT_init+0xbc>)
  4015b0:	2309      	movs	r3, #9
  4015b2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  4015b6:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
  4015ba:	4620      	mov	r0, r4
  4015bc:	4f27      	ldr	r7, [pc, #156]	; (40165c <BUT_init+0xc0>)
  4015be:	47b8      	blx	r7
	pio_configure(BUT_PIO_2, PIO_INPUT, BUT_IDX_MASK_2, PIO_PULLUP| PIO_DEBOUNCE);
  4015c0:	4e27      	ldr	r6, [pc, #156]	; (401660 <BUT_init+0xc4>)
  4015c2:	2309      	movs	r3, #9
  4015c4:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
  4015c8:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
  4015cc:	4630      	mov	r0, r6
  4015ce:	47b8      	blx	r7
	pio_configure(BUT_PIO_3, PIO_INPUT, BUT_IDX_MASK_3, PIO_PULLUP| PIO_DEBOUNCE);
  4015d0:	4d24      	ldr	r5, [pc, #144]	; (401664 <BUT_init+0xc8>)
  4015d2:	2309      	movs	r3, #9
  4015d4:	f44f 2200 	mov.w	r2, #524288	; 0x80000
  4015d8:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
  4015dc:	4628      	mov	r0, r5
  4015de:	47b8      	blx	r7
	pio_handler_set(BUT_PIO_1,
  4015e0:	4b21      	ldr	r3, [pc, #132]	; (401668 <BUT_init+0xcc>)
  4015e2:	9300      	str	r3, [sp, #0]
  4015e4:	2350      	movs	r3, #80	; 0x50
  4015e6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  4015ea:	2110      	movs	r1, #16
  4015ec:	4620      	mov	r0, r4
  4015ee:	4f1f      	ldr	r7, [pc, #124]	; (40166c <BUT_init+0xd0>)
  4015f0:	47b8      	blx	r7
	pio_handler_set(BUT_PIO_2,
  4015f2:	4b1f      	ldr	r3, [pc, #124]	; (401670 <BUT_init+0xd4>)
  4015f4:	9300      	str	r3, [sp, #0]
  4015f6:	2350      	movs	r3, #80	; 0x50
  4015f8:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
  4015fc:	210c      	movs	r1, #12
  4015fe:	4630      	mov	r0, r6
  401600:	47b8      	blx	r7
	pio_handler_set(BUT_PIO_3,
  401602:	4b1c      	ldr	r3, [pc, #112]	; (401674 <BUT_init+0xd8>)
  401604:	9300      	str	r3, [sp, #0]
  401606:	2350      	movs	r3, #80	; 0x50
  401608:	f44f 2200 	mov.w	r2, #524288	; 0x80000
  40160c:	210a      	movs	r1, #10
  40160e:	4628      	mov	r0, r5
  401610:	47b8      	blx	r7
	pio_enable_interrupt(BUT_PIO_1, BUT_IDX_MASK_1);
  401612:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  401616:	4620      	mov	r0, r4
  401618:	4c17      	ldr	r4, [pc, #92]	; (401678 <BUT_init+0xdc>)
  40161a:	47a0      	blx	r4
	pio_enable_interrupt(BUT_PIO_2, BUT_IDX_MASK_2);
  40161c:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
  401620:	4630      	mov	r0, r6
  401622:	47a0      	blx	r4
	pio_enable_interrupt(BUT_PIO_3, BUT_IDX_MASK_3);
  401624:	f44f 2100 	mov.w	r1, #524288	; 0x80000
  401628:	4628      	mov	r0, r5
  40162a:	47a0      	blx	r4
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  40162c:	4b13      	ldr	r3, [pc, #76]	; (40167c <BUT_init+0xe0>)
  40162e:	f44f 3280 	mov.w	r2, #65536	; 0x10000
  401632:	601a      	str	r2, [r3, #0]
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  401634:	2280      	movs	r2, #128	; 0x80
  401636:	f883 2310 	strb.w	r2, [r3, #784]	; 0x310
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  40163a:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  40163e:	6019      	str	r1, [r3, #0]
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  401640:	f883 230c 	strb.w	r2, [r3, #780]	; 0x30c
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  401644:	f44f 6180 	mov.w	r1, #1024	; 0x400
  401648:	6019      	str	r1, [r3, #0]
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  40164a:	f883 230a 	strb.w	r2, [r3, #778]	; 0x30a
}
  40164e:	b003      	add	sp, #12
  401650:	bdf0      	pop	{r4, r5, r6, r7, pc}
  401652:	bf00      	nop
  401654:	00401105 	.word	0x00401105
  401658:	400e1400 	.word	0x400e1400
  40165c:	00400df1 	.word	0x00400df1
  401660:	400e1200 	.word	0x400e1200
  401664:	400e0e00 	.word	0x400e0e00
  401668:	004013f5 	.word	0x004013f5
  40166c:	00400f11 	.word	0x00400f11
  401670:	00401401 	.word	0x00401401
  401674:	0040140d 	.word	0x0040140d
  401678:	00400eb3 	.word	0x00400eb3
  40167c:	e000e100 	.word	0xe000e100

00401680 <RTC_Handler>:
}

void RTC_Handler(void)
{
  401680:	b538      	push	{r3, r4, r5, lr}
	uint32_t ul_status = rtc_get_status(RTC);
  401682:	4812      	ldr	r0, [pc, #72]	; (4016cc <RTC_Handler+0x4c>)
  401684:	4b12      	ldr	r3, [pc, #72]	; (4016d0 <RTC_Handler+0x50>)
  401686:	4798      	blx	r3

	/* seccond tick	*/
	if ((ul_status & RTC_SR_SEC) == RTC_SR_SEC) {
  401688:	f010 0f04 	tst.w	r0, #4
  40168c:	d002      	beq.n	401694 <RTC_Handler+0x14>
		flag_tick_rtc=1;
  40168e:	2201      	movs	r2, #1
  401690:	4b10      	ldr	r3, [pc, #64]	; (4016d4 <RTC_Handler+0x54>)
  401692:	701a      	strb	r2, [r3, #0]
	}
	
	/* Time or date alarm */
	if ((ul_status & RTC_SR_ALARM) == RTC_SR_ALARM) {
  401694:	f010 0f02 	tst.w	r0, #2
  401698:	d002      	beq.n	4016a0 <RTC_Handler+0x20>
		flag_rtc = 1;
  40169a:	2201      	movs	r2, #1
  40169c:	4b0e      	ldr	r3, [pc, #56]	; (4016d8 <RTC_Handler+0x58>)
  40169e:	701a      	strb	r2, [r3, #0]
	}
	
	rtc_clear_status(RTC, RTC_SCCR_SECCLR);
  4016a0:	4d0a      	ldr	r5, [pc, #40]	; (4016cc <RTC_Handler+0x4c>)
  4016a2:	2104      	movs	r1, #4
  4016a4:	4628      	mov	r0, r5
  4016a6:	4c0d      	ldr	r4, [pc, #52]	; (4016dc <RTC_Handler+0x5c>)
  4016a8:	47a0      	blx	r4
	rtc_clear_status(RTC, RTC_SCCR_ALRCLR);
  4016aa:	2102      	movs	r1, #2
  4016ac:	4628      	mov	r0, r5
  4016ae:	47a0      	blx	r4
	rtc_clear_status(RTC, RTC_SCCR_ACKCLR);
  4016b0:	2101      	movs	r1, #1
  4016b2:	4628      	mov	r0, r5
  4016b4:	47a0      	blx	r4
	rtc_clear_status(RTC, RTC_SCCR_TIMCLR);
  4016b6:	2108      	movs	r1, #8
  4016b8:	4628      	mov	r0, r5
  4016ba:	47a0      	blx	r4
	rtc_clear_status(RTC, RTC_SCCR_CALCLR);
  4016bc:	2110      	movs	r1, #16
  4016be:	4628      	mov	r0, r5
  4016c0:	47a0      	blx	r4
	rtc_clear_status(RTC, RTC_SCCR_TDERRCLR);
  4016c2:	2120      	movs	r1, #32
  4016c4:	4628      	mov	r0, r5
  4016c6:	47a0      	blx	r4
  4016c8:	bd38      	pop	{r3, r4, r5, pc}
  4016ca:	bf00      	nop
  4016cc:	400e1860 	.word	0x400e1860
  4016d0:	0040045d 	.word	0x0040045d
  4016d4:	20400c75 	.word	0x20400c75
  4016d8:	20400c74 	.word	0x20400c74
  4016dc:	00400461 	.word	0x00400461

004016e0 <main>:
}


int main (void)
{
  4016e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4016e4:	b0a1      	sub	sp, #132	; 0x84
	board_init();
  4016e6:	4b67      	ldr	r3, [pc, #412]	; (401884 <main+0x1a4>)
  4016e8:	4798      	blx	r3
	sysclk_init();
  4016ea:	4b67      	ldr	r3, [pc, #412]	; (401888 <main+0x1a8>)
  4016ec:	4798      	blx	r3
	delay_init();

	// Init OLED
	gfx_mono_ssd1306_init();
  4016ee:	4b67      	ldr	r3, [pc, #412]	; (40188c <main+0x1ac>)
  4016f0:	4798      	blx	r3
	WDT->WDT_MR = WDT_MR_WDDIS;
  4016f2:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  4016f6:	4b66      	ldr	r3, [pc, #408]	; (401890 <main+0x1b0>)
  4016f8:	605a      	str	r2, [r3, #4]
	
	/* Configura Leds */
	LED_init(1);
  4016fa:	2001      	movs	r0, #1
  4016fc:	4b65      	ldr	r3, [pc, #404]	; (401894 <main+0x1b4>)
  4016fe:	4798      	blx	r3

	/* Configura os bot?es */
	BUT_init();
  401700:	4b65      	ldr	r3, [pc, #404]	; (401898 <main+0x1b8>)
  401702:	4798      	blx	r3
	
	// Escreve na tela um circulo e um texto
	//gfx_mono_draw_filled_circle(20, 16, 16, GFX_PIXEL_SET, GFX_WHOLE);
	//gfx_mono_draw_string("mundo", 50,16, &sysfont);
	calendar rtc_initial = {2018, 3, 19, 12, 15, 45 ,1};
  401704:	ac19      	add	r4, sp, #100	; 0x64
  401706:	4d65      	ldr	r5, [pc, #404]	; (40189c <main+0x1bc>)
  401708:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
  40170a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
  40170c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
  401710:	e884 0007 	stmia.w	r4, {r0, r1, r2}
	RTC_init(RTC, ID_RTC, rtc_initial, RTC_IER_ALREN | RTC_IER_SECEN);
  401714:	2306      	movs	r3, #6
  401716:	9305      	str	r3, [sp, #20]
  401718:	466c      	mov	r4, sp
  40171a:	ad1b      	add	r5, sp, #108	; 0x6c
  40171c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
  40171e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
  401720:	682b      	ldr	r3, [r5, #0]
  401722:	6023      	str	r3, [r4, #0]
  401724:	ab19      	add	r3, sp, #100	; 0x64
  401726:	cb0c      	ldmia	r3, {r2, r3}
  401728:	2102      	movs	r1, #2
  40172a:	485d      	ldr	r0, [pc, #372]	; (4018a0 <main+0x1c0>)
  40172c:	4c5d      	ldr	r4, [pc, #372]	; (4018a4 <main+0x1c4>)
  40172e:	47a0      	blx	r4
	int sec_cro=0;
	int min_cro=0;
	int contagem=0;
	but_flag_1=0;
  401730:	2300      	movs	r3, #0
  401732:	4a5d      	ldr	r2, [pc, #372]	; (4018a8 <main+0x1c8>)
  401734:	6013      	str	r3, [r2, #0]
	but_flag_2=0;
  401736:	4a5d      	ldr	r2, [pc, #372]	; (4018ac <main+0x1cc>)
  401738:	6013      	str	r3, [r2, #0]
	but_flag_3=0;
  40173a:	4a5d      	ldr	r2, [pc, #372]	; (4018b0 <main+0x1d0>)
  40173c:	6013      	str	r3, [r2, #0]
				rtc_set_time_alarm(RTC, 1, hr, 1, min+min_cro, 1, sec + sec_cro);
				}else{
				rtc_set_date_alarm(RTC, 1, rtc_initial.month, 1, rtc_initial.day);
			rtc_set_time_alarm(RTC, 1, hr, 1, min+1+min_cro, 1, sec+sec_cro-60);}
			
			flag_rtc=0;
  40173e:	4d5d      	ldr	r5, [pc, #372]	; (4018b4 <main+0x1d4>)
			pio_set(LED_PIO_1,LED_IDX_MASK_1);
  401740:	4e5d      	ldr	r6, [pc, #372]	; (4018b8 <main+0x1d8>)
  401742:	f8df 9198 	ldr.w	r9, [pc, #408]	; 4018dc <main+0x1fc>
  401746:	e098      	b.n	40187a <main+0x19a>
			rtc_get_time(RTC, &hr, &min, &sec);
  401748:	ab08      	add	r3, sp, #32
  40174a:	aa07      	add	r2, sp, #28
  40174c:	a906      	add	r1, sp, #24
  40174e:	4854      	ldr	r0, [pc, #336]	; (4018a0 <main+0x1c0>)
  401750:	f8df a178 	ldr.w	sl, [pc, #376]	; 4018cc <main+0x1ec>
  401754:	47d0      	blx	sl
			sprintf(buffer1, "%.2d : %.2d : %.2d", hr, min, sec);
  401756:	9b08      	ldr	r3, [sp, #32]
  401758:	9300      	str	r3, [sp, #0]
  40175a:	9b07      	ldr	r3, [sp, #28]
  40175c:	9a06      	ldr	r2, [sp, #24]
  40175e:	4957      	ldr	r1, [pc, #348]	; (4018bc <main+0x1dc>)
  401760:	a809      	add	r0, sp, #36	; 0x24
  401762:	f8df a17c 	ldr.w	sl, [pc, #380]	; 4018e0 <main+0x200>
  401766:	47d0      	blx	sl
			sprintf(buffer2, "%.2d : %.2d", min_cro, sec_cro);
  401768:	463b      	mov	r3, r7
  40176a:	4642      	mov	r2, r8
  40176c:	4954      	ldr	r1, [pc, #336]	; (4018c0 <main+0x1e0>)
  40176e:	a811      	add	r0, sp, #68	; 0x44
  401770:	47d0      	blx	sl
			gfx_mono_draw_string(buffer1, 0,0, &sysfont);
  401772:	f8df b170 	ldr.w	fp, [pc, #368]	; 4018e4 <main+0x204>
  401776:	465b      	mov	r3, fp
  401778:	2200      	movs	r2, #0
  40177a:	4611      	mov	r1, r2
  40177c:	a809      	add	r0, sp, #36	; 0x24
  40177e:	f8df a168 	ldr.w	sl, [pc, #360]	; 4018e8 <main+0x208>
  401782:	47d0      	blx	sl
			gfx_mono_draw_string(buffer2, 0,15, &sysfont);
  401784:	465b      	mov	r3, fp
  401786:	220f      	movs	r2, #15
  401788:	2100      	movs	r1, #0
  40178a:	a811      	add	r0, sp, #68	; 0x44
  40178c:	47d0      	blx	sl
			flag_tick_rtc=0;
  40178e:	2200      	movs	r2, #0
  401790:	4b4c      	ldr	r3, [pc, #304]	; (4018c4 <main+0x1e4>)
  401792:	701a      	strb	r2, [r3, #0]
  401794:	e017      	b.n	4017c6 <main+0xe6>
			pio_clear(LED_PIO_1,LED_IDX_MASK_1);
  401796:	2101      	movs	r1, #1
  401798:	4630      	mov	r0, r6
  40179a:	4b4b      	ldr	r3, [pc, #300]	; (4018c8 <main+0x1e8>)
  40179c:	4798      	blx	r3
  40179e:	e017      	b.n	4017d0 <main+0xf0>
			min_cro+=1;
  4017a0:	f108 0801 	add.w	r8, r8, #1
			but_flag_1=0;
  4017a4:	2200      	movs	r2, #0
  4017a6:	4b40      	ldr	r3, [pc, #256]	; (4018a8 <main+0x1c8>)
  4017a8:	601a      	str	r2, [r3, #0]
  4017aa:	e015      	b.n	4017d8 <main+0xf8>
		if (but_flag_3==1){
  4017ac:	4b40      	ldr	r3, [pc, #256]	; (4018b0 <main+0x1d0>)
  4017ae:	681b      	ldr	r3, [r3, #0]
  4017b0:	2b01      	cmp	r3, #1
  4017b2:	d01a      	beq.n	4017ea <main+0x10a>
			
		}
		
		if(flag_rtc==1){
  4017b4:	782b      	ldrb	r3, [r5, #0]
  4017b6:	b2db      	uxtb	r3, r3
  4017b8:	2b01      	cmp	r3, #1
  4017ba:	d054      	beq.n	401866 <main+0x186>
		if (flag_tick_rtc==1){
  4017bc:	4b41      	ldr	r3, [pc, #260]	; (4018c4 <main+0x1e4>)
  4017be:	781b      	ldrb	r3, [r3, #0]
  4017c0:	b2db      	uxtb	r3, r3
  4017c2:	2b01      	cmp	r3, #1
  4017c4:	d0c0      	beq.n	401748 <main+0x68>
		if(contagem==1){
  4017c6:	2c00      	cmp	r4, #0
  4017c8:	d1e5      	bne.n	401796 <main+0xb6>
			pio_set(LED_PIO_1,LED_IDX_MASK_1);
  4017ca:	2101      	movs	r1, #1
  4017cc:	4630      	mov	r0, r6
  4017ce:	47c8      	blx	r9
		if (but_flag_1==1){
  4017d0:	4b35      	ldr	r3, [pc, #212]	; (4018a8 <main+0x1c8>)
  4017d2:	681b      	ldr	r3, [r3, #0]
  4017d4:	2b01      	cmp	r3, #1
  4017d6:	d0e3      	beq.n	4017a0 <main+0xc0>
		if(but_flag_2==1){
  4017d8:	4b34      	ldr	r3, [pc, #208]	; (4018ac <main+0x1cc>)
  4017da:	681b      	ldr	r3, [r3, #0]
  4017dc:	2b01      	cmp	r3, #1
  4017de:	d1e5      	bne.n	4017ac <main+0xcc>
			sec_cro+=1;
  4017e0:	3701      	adds	r7, #1
			but_flag_2=0;
  4017e2:	2200      	movs	r2, #0
  4017e4:	4b31      	ldr	r3, [pc, #196]	; (4018ac <main+0x1cc>)
  4017e6:	601a      	str	r2, [r3, #0]
  4017e8:	e7e0      	b.n	4017ac <main+0xcc>
			but_flag_3=0;
  4017ea:	2200      	movs	r2, #0
  4017ec:	4b30      	ldr	r3, [pc, #192]	; (4018b0 <main+0x1d0>)
  4017ee:	601a      	str	r2, [r3, #0]
			rtc_get_time(RTC, &hr, &min, &sec);
  4017f0:	ab11      	add	r3, sp, #68	; 0x44
  4017f2:	aa09      	add	r2, sp, #36	; 0x24
  4017f4:	a908      	add	r1, sp, #32
  4017f6:	482a      	ldr	r0, [pc, #168]	; (4018a0 <main+0x1c0>)
  4017f8:	4c34      	ldr	r4, [pc, #208]	; (4018cc <main+0x1ec>)
  4017fa:	47a0      	blx	r4
			if (sec_cro+sec<=59){
  4017fc:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4017fe:	443b      	add	r3, r7
  401800:	2b3b      	cmp	r3, #59	; 0x3b
  401802:	dc18      	bgt.n	401836 <main+0x156>
				rtc_set_date_alarm(RTC, 1, rtc_initial.month, 1, rtc_initial.day);
  401804:	2313      	movs	r3, #19
  401806:	9300      	str	r3, [sp, #0]
  401808:	2301      	movs	r3, #1
  40180a:	2203      	movs	r2, #3
  40180c:	4619      	mov	r1, r3
  40180e:	4824      	ldr	r0, [pc, #144]	; (4018a0 <main+0x1c0>)
  401810:	4c2f      	ldr	r4, [pc, #188]	; (4018d0 <main+0x1f0>)
  401812:	47a0      	blx	r4
				rtc_set_time_alarm(RTC, 1, hr, 1, min+min_cro, 1, sec + sec_cro);
  401814:	9b11      	ldr	r3, [sp, #68]	; 0x44
  401816:	443b      	add	r3, r7
  401818:	9302      	str	r3, [sp, #8]
  40181a:	2101      	movs	r1, #1
  40181c:	9101      	str	r1, [sp, #4]
  40181e:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401820:	4443      	add	r3, r8
  401822:	9300      	str	r3, [sp, #0]
  401824:	460b      	mov	r3, r1
  401826:	9a08      	ldr	r2, [sp, #32]
  401828:	481d      	ldr	r0, [pc, #116]	; (4018a0 <main+0x1c0>)
  40182a:	4c2a      	ldr	r4, [pc, #168]	; (4018d4 <main+0x1f4>)
  40182c:	47a0      	blx	r4
			flag_rtc=0;
  40182e:	2300      	movs	r3, #0
  401830:	702b      	strb	r3, [r5, #0]
			contagem=1;
  401832:	2401      	movs	r4, #1
  401834:	e7be      	b.n	4017b4 <main+0xd4>
				rtc_set_date_alarm(RTC, 1, rtc_initial.month, 1, rtc_initial.day);
  401836:	2313      	movs	r3, #19
  401838:	9300      	str	r3, [sp, #0]
  40183a:	2301      	movs	r3, #1
  40183c:	2203      	movs	r2, #3
  40183e:	4619      	mov	r1, r3
  401840:	4817      	ldr	r0, [pc, #92]	; (4018a0 <main+0x1c0>)
  401842:	4c23      	ldr	r4, [pc, #140]	; (4018d0 <main+0x1f0>)
  401844:	47a0      	blx	r4
			rtc_set_time_alarm(RTC, 1, hr, 1, min+1+min_cro, 1, sec+sec_cro-60);}
  401846:	9b11      	ldr	r3, [sp, #68]	; 0x44
  401848:	443b      	add	r3, r7
  40184a:	3b3c      	subs	r3, #60	; 0x3c
  40184c:	9302      	str	r3, [sp, #8]
  40184e:	2101      	movs	r1, #1
  401850:	9101      	str	r1, [sp, #4]
  401852:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401854:	440b      	add	r3, r1
  401856:	4443      	add	r3, r8
  401858:	9300      	str	r3, [sp, #0]
  40185a:	460b      	mov	r3, r1
  40185c:	9a08      	ldr	r2, [sp, #32]
  40185e:	4810      	ldr	r0, [pc, #64]	; (4018a0 <main+0x1c0>)
  401860:	4c1c      	ldr	r4, [pc, #112]	; (4018d4 <main+0x1f4>)
  401862:	47a0      	blx	r4
  401864:	e7e3      	b.n	40182e <main+0x14e>
			pio_set(LED_PIO_1,LED_IDX_MASK_1);
  401866:	2101      	movs	r1, #1
  401868:	4630      	mov	r0, r6
  40186a:	47c8      	blx	r9
			contagem=0;
			sec_cro=0;
			min_cro=0;
			flag_rtc=0;
  40186c:	2300      	movs	r3, #0
  40186e:	702b      	strb	r3, [r5, #0]
			pisca_led_3(10,300);
  401870:	f44f 7196 	mov.w	r1, #300	; 0x12c
  401874:	200a      	movs	r0, #10
  401876:	4b18      	ldr	r3, [pc, #96]	; (4018d8 <main+0x1f8>)
  401878:	4798      	blx	r3
{
  40187a:	2400      	movs	r4, #0
  40187c:	46a0      	mov	r8, r4
  40187e:	4627      	mov	r7, r4
  401880:	e79c      	b.n	4017bc <main+0xdc>
  401882:	bf00      	nop
  401884:	00400bb9 	.word	0x00400bb9
  401888:	00400b49 	.word	0x00400b49
  40188c:	00400829 	.word	0x00400829
  401890:	400e1850 	.word	0x400e1850
  401894:	00401545 	.word	0x00401545
  401898:	0040159d 	.word	0x0040159d
  40189c:	00406c2c 	.word	0x00406c2c
  4018a0:	400e1860 	.word	0x400e1860
  4018a4:	004014a1 	.word	0x004014a1
  4018a8:	20400c68 	.word	0x20400c68
  4018ac:	20400c6c 	.word	0x20400c6c
  4018b0:	20400c70 	.word	0x20400c70
  4018b4:	20400c74 	.word	0x20400c74
  4018b8:	400e0e00 	.word	0x400e0e00
  4018bc:	00406c48 	.word	0x00406c48
  4018c0:	00406c5c 	.word	0x00406c5c
  4018c4:	20400c75 	.word	0x20400c75
  4018c8:	00400cfd 	.word	0x00400cfd
  4018cc:	004001c7 	.word	0x004001c7
  4018d0:	004003fd 	.word	0x004003fd
  4018d4:	004002b1 	.word	0x004002b1
  4018d8:	00401419 	.word	0x00401419
  4018dc:	00400cf9 	.word	0x00400cf9
  4018e0:	00401ce9 	.word	0x00401ce9
  4018e4:	2040000c 	.word	0x2040000c
  4018e8:	00400791 	.word	0x00400791

004018ec <__aeabi_uldivmod>:
  4018ec:	b953      	cbnz	r3, 401904 <__aeabi_uldivmod+0x18>
  4018ee:	b94a      	cbnz	r2, 401904 <__aeabi_uldivmod+0x18>
  4018f0:	2900      	cmp	r1, #0
  4018f2:	bf08      	it	eq
  4018f4:	2800      	cmpeq	r0, #0
  4018f6:	bf1c      	itt	ne
  4018f8:	f04f 31ff 	movne.w	r1, #4294967295
  4018fc:	f04f 30ff 	movne.w	r0, #4294967295
  401900:	f000 b97a 	b.w	401bf8 <__aeabi_idiv0>
  401904:	f1ad 0c08 	sub.w	ip, sp, #8
  401908:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  40190c:	f000 f806 	bl	40191c <__udivmoddi4>
  401910:	f8dd e004 	ldr.w	lr, [sp, #4]
  401914:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  401918:	b004      	add	sp, #16
  40191a:	4770      	bx	lr

0040191c <__udivmoddi4>:
  40191c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  401920:	468c      	mov	ip, r1
  401922:	460d      	mov	r5, r1
  401924:	4604      	mov	r4, r0
  401926:	9e08      	ldr	r6, [sp, #32]
  401928:	2b00      	cmp	r3, #0
  40192a:	d151      	bne.n	4019d0 <__udivmoddi4+0xb4>
  40192c:	428a      	cmp	r2, r1
  40192e:	4617      	mov	r7, r2
  401930:	d96d      	bls.n	401a0e <__udivmoddi4+0xf2>
  401932:	fab2 fe82 	clz	lr, r2
  401936:	f1be 0f00 	cmp.w	lr, #0
  40193a:	d00b      	beq.n	401954 <__udivmoddi4+0x38>
  40193c:	f1ce 0c20 	rsb	ip, lr, #32
  401940:	fa01 f50e 	lsl.w	r5, r1, lr
  401944:	fa20 fc0c 	lsr.w	ip, r0, ip
  401948:	fa02 f70e 	lsl.w	r7, r2, lr
  40194c:	ea4c 0c05 	orr.w	ip, ip, r5
  401950:	fa00 f40e 	lsl.w	r4, r0, lr
  401954:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  401958:	0c25      	lsrs	r5, r4, #16
  40195a:	fbbc f8fa 	udiv	r8, ip, sl
  40195e:	fa1f f987 	uxth.w	r9, r7
  401962:	fb0a cc18 	mls	ip, sl, r8, ip
  401966:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  40196a:	fb08 f309 	mul.w	r3, r8, r9
  40196e:	42ab      	cmp	r3, r5
  401970:	d90a      	bls.n	401988 <__udivmoddi4+0x6c>
  401972:	19ed      	adds	r5, r5, r7
  401974:	f108 32ff 	add.w	r2, r8, #4294967295
  401978:	f080 8123 	bcs.w	401bc2 <__udivmoddi4+0x2a6>
  40197c:	42ab      	cmp	r3, r5
  40197e:	f240 8120 	bls.w	401bc2 <__udivmoddi4+0x2a6>
  401982:	f1a8 0802 	sub.w	r8, r8, #2
  401986:	443d      	add	r5, r7
  401988:	1aed      	subs	r5, r5, r3
  40198a:	b2a4      	uxth	r4, r4
  40198c:	fbb5 f0fa 	udiv	r0, r5, sl
  401990:	fb0a 5510 	mls	r5, sl, r0, r5
  401994:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  401998:	fb00 f909 	mul.w	r9, r0, r9
  40199c:	45a1      	cmp	r9, r4
  40199e:	d909      	bls.n	4019b4 <__udivmoddi4+0x98>
  4019a0:	19e4      	adds	r4, r4, r7
  4019a2:	f100 33ff 	add.w	r3, r0, #4294967295
  4019a6:	f080 810a 	bcs.w	401bbe <__udivmoddi4+0x2a2>
  4019aa:	45a1      	cmp	r9, r4
  4019ac:	f240 8107 	bls.w	401bbe <__udivmoddi4+0x2a2>
  4019b0:	3802      	subs	r0, #2
  4019b2:	443c      	add	r4, r7
  4019b4:	eba4 0409 	sub.w	r4, r4, r9
  4019b8:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  4019bc:	2100      	movs	r1, #0
  4019be:	2e00      	cmp	r6, #0
  4019c0:	d061      	beq.n	401a86 <__udivmoddi4+0x16a>
  4019c2:	fa24 f40e 	lsr.w	r4, r4, lr
  4019c6:	2300      	movs	r3, #0
  4019c8:	6034      	str	r4, [r6, #0]
  4019ca:	6073      	str	r3, [r6, #4]
  4019cc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4019d0:	428b      	cmp	r3, r1
  4019d2:	d907      	bls.n	4019e4 <__udivmoddi4+0xc8>
  4019d4:	2e00      	cmp	r6, #0
  4019d6:	d054      	beq.n	401a82 <__udivmoddi4+0x166>
  4019d8:	2100      	movs	r1, #0
  4019da:	e886 0021 	stmia.w	r6, {r0, r5}
  4019de:	4608      	mov	r0, r1
  4019e0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4019e4:	fab3 f183 	clz	r1, r3
  4019e8:	2900      	cmp	r1, #0
  4019ea:	f040 808e 	bne.w	401b0a <__udivmoddi4+0x1ee>
  4019ee:	42ab      	cmp	r3, r5
  4019f0:	d302      	bcc.n	4019f8 <__udivmoddi4+0xdc>
  4019f2:	4282      	cmp	r2, r0
  4019f4:	f200 80fa 	bhi.w	401bec <__udivmoddi4+0x2d0>
  4019f8:	1a84      	subs	r4, r0, r2
  4019fa:	eb65 0503 	sbc.w	r5, r5, r3
  4019fe:	2001      	movs	r0, #1
  401a00:	46ac      	mov	ip, r5
  401a02:	2e00      	cmp	r6, #0
  401a04:	d03f      	beq.n	401a86 <__udivmoddi4+0x16a>
  401a06:	e886 1010 	stmia.w	r6, {r4, ip}
  401a0a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  401a0e:	b912      	cbnz	r2, 401a16 <__udivmoddi4+0xfa>
  401a10:	2701      	movs	r7, #1
  401a12:	fbb7 f7f2 	udiv	r7, r7, r2
  401a16:	fab7 fe87 	clz	lr, r7
  401a1a:	f1be 0f00 	cmp.w	lr, #0
  401a1e:	d134      	bne.n	401a8a <__udivmoddi4+0x16e>
  401a20:	1beb      	subs	r3, r5, r7
  401a22:	0c3a      	lsrs	r2, r7, #16
  401a24:	fa1f fc87 	uxth.w	ip, r7
  401a28:	2101      	movs	r1, #1
  401a2a:	fbb3 f8f2 	udiv	r8, r3, r2
  401a2e:	0c25      	lsrs	r5, r4, #16
  401a30:	fb02 3318 	mls	r3, r2, r8, r3
  401a34:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  401a38:	fb0c f308 	mul.w	r3, ip, r8
  401a3c:	42ab      	cmp	r3, r5
  401a3e:	d907      	bls.n	401a50 <__udivmoddi4+0x134>
  401a40:	19ed      	adds	r5, r5, r7
  401a42:	f108 30ff 	add.w	r0, r8, #4294967295
  401a46:	d202      	bcs.n	401a4e <__udivmoddi4+0x132>
  401a48:	42ab      	cmp	r3, r5
  401a4a:	f200 80d1 	bhi.w	401bf0 <__udivmoddi4+0x2d4>
  401a4e:	4680      	mov	r8, r0
  401a50:	1aed      	subs	r5, r5, r3
  401a52:	b2a3      	uxth	r3, r4
  401a54:	fbb5 f0f2 	udiv	r0, r5, r2
  401a58:	fb02 5510 	mls	r5, r2, r0, r5
  401a5c:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  401a60:	fb0c fc00 	mul.w	ip, ip, r0
  401a64:	45a4      	cmp	ip, r4
  401a66:	d907      	bls.n	401a78 <__udivmoddi4+0x15c>
  401a68:	19e4      	adds	r4, r4, r7
  401a6a:	f100 33ff 	add.w	r3, r0, #4294967295
  401a6e:	d202      	bcs.n	401a76 <__udivmoddi4+0x15a>
  401a70:	45a4      	cmp	ip, r4
  401a72:	f200 80b8 	bhi.w	401be6 <__udivmoddi4+0x2ca>
  401a76:	4618      	mov	r0, r3
  401a78:	eba4 040c 	sub.w	r4, r4, ip
  401a7c:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  401a80:	e79d      	b.n	4019be <__udivmoddi4+0xa2>
  401a82:	4631      	mov	r1, r6
  401a84:	4630      	mov	r0, r6
  401a86:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  401a8a:	f1ce 0420 	rsb	r4, lr, #32
  401a8e:	fa05 f30e 	lsl.w	r3, r5, lr
  401a92:	fa07 f70e 	lsl.w	r7, r7, lr
  401a96:	fa20 f804 	lsr.w	r8, r0, r4
  401a9a:	0c3a      	lsrs	r2, r7, #16
  401a9c:	fa25 f404 	lsr.w	r4, r5, r4
  401aa0:	ea48 0803 	orr.w	r8, r8, r3
  401aa4:	fbb4 f1f2 	udiv	r1, r4, r2
  401aa8:	ea4f 4518 	mov.w	r5, r8, lsr #16
  401aac:	fb02 4411 	mls	r4, r2, r1, r4
  401ab0:	fa1f fc87 	uxth.w	ip, r7
  401ab4:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  401ab8:	fb01 f30c 	mul.w	r3, r1, ip
  401abc:	42ab      	cmp	r3, r5
  401abe:	fa00 f40e 	lsl.w	r4, r0, lr
  401ac2:	d909      	bls.n	401ad8 <__udivmoddi4+0x1bc>
  401ac4:	19ed      	adds	r5, r5, r7
  401ac6:	f101 30ff 	add.w	r0, r1, #4294967295
  401aca:	f080 808a 	bcs.w	401be2 <__udivmoddi4+0x2c6>
  401ace:	42ab      	cmp	r3, r5
  401ad0:	f240 8087 	bls.w	401be2 <__udivmoddi4+0x2c6>
  401ad4:	3902      	subs	r1, #2
  401ad6:	443d      	add	r5, r7
  401ad8:	1aeb      	subs	r3, r5, r3
  401ada:	fa1f f588 	uxth.w	r5, r8
  401ade:	fbb3 f0f2 	udiv	r0, r3, r2
  401ae2:	fb02 3310 	mls	r3, r2, r0, r3
  401ae6:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  401aea:	fb00 f30c 	mul.w	r3, r0, ip
  401aee:	42ab      	cmp	r3, r5
  401af0:	d907      	bls.n	401b02 <__udivmoddi4+0x1e6>
  401af2:	19ed      	adds	r5, r5, r7
  401af4:	f100 38ff 	add.w	r8, r0, #4294967295
  401af8:	d26f      	bcs.n	401bda <__udivmoddi4+0x2be>
  401afa:	42ab      	cmp	r3, r5
  401afc:	d96d      	bls.n	401bda <__udivmoddi4+0x2be>
  401afe:	3802      	subs	r0, #2
  401b00:	443d      	add	r5, r7
  401b02:	1aeb      	subs	r3, r5, r3
  401b04:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  401b08:	e78f      	b.n	401a2a <__udivmoddi4+0x10e>
  401b0a:	f1c1 0720 	rsb	r7, r1, #32
  401b0e:	fa22 f807 	lsr.w	r8, r2, r7
  401b12:	408b      	lsls	r3, r1
  401b14:	fa05 f401 	lsl.w	r4, r5, r1
  401b18:	ea48 0303 	orr.w	r3, r8, r3
  401b1c:	fa20 fe07 	lsr.w	lr, r0, r7
  401b20:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  401b24:	40fd      	lsrs	r5, r7
  401b26:	ea4e 0e04 	orr.w	lr, lr, r4
  401b2a:	fbb5 f9fc 	udiv	r9, r5, ip
  401b2e:	ea4f 441e 	mov.w	r4, lr, lsr #16
  401b32:	fb0c 5519 	mls	r5, ip, r9, r5
  401b36:	fa1f f883 	uxth.w	r8, r3
  401b3a:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  401b3e:	fb09 f408 	mul.w	r4, r9, r8
  401b42:	42ac      	cmp	r4, r5
  401b44:	fa02 f201 	lsl.w	r2, r2, r1
  401b48:	fa00 fa01 	lsl.w	sl, r0, r1
  401b4c:	d908      	bls.n	401b60 <__udivmoddi4+0x244>
  401b4e:	18ed      	adds	r5, r5, r3
  401b50:	f109 30ff 	add.w	r0, r9, #4294967295
  401b54:	d243      	bcs.n	401bde <__udivmoddi4+0x2c2>
  401b56:	42ac      	cmp	r4, r5
  401b58:	d941      	bls.n	401bde <__udivmoddi4+0x2c2>
  401b5a:	f1a9 0902 	sub.w	r9, r9, #2
  401b5e:	441d      	add	r5, r3
  401b60:	1b2d      	subs	r5, r5, r4
  401b62:	fa1f fe8e 	uxth.w	lr, lr
  401b66:	fbb5 f0fc 	udiv	r0, r5, ip
  401b6a:	fb0c 5510 	mls	r5, ip, r0, r5
  401b6e:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  401b72:	fb00 f808 	mul.w	r8, r0, r8
  401b76:	45a0      	cmp	r8, r4
  401b78:	d907      	bls.n	401b8a <__udivmoddi4+0x26e>
  401b7a:	18e4      	adds	r4, r4, r3
  401b7c:	f100 35ff 	add.w	r5, r0, #4294967295
  401b80:	d229      	bcs.n	401bd6 <__udivmoddi4+0x2ba>
  401b82:	45a0      	cmp	r8, r4
  401b84:	d927      	bls.n	401bd6 <__udivmoddi4+0x2ba>
  401b86:	3802      	subs	r0, #2
  401b88:	441c      	add	r4, r3
  401b8a:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  401b8e:	eba4 0408 	sub.w	r4, r4, r8
  401b92:	fba0 8902 	umull	r8, r9, r0, r2
  401b96:	454c      	cmp	r4, r9
  401b98:	46c6      	mov	lr, r8
  401b9a:	464d      	mov	r5, r9
  401b9c:	d315      	bcc.n	401bca <__udivmoddi4+0x2ae>
  401b9e:	d012      	beq.n	401bc6 <__udivmoddi4+0x2aa>
  401ba0:	b156      	cbz	r6, 401bb8 <__udivmoddi4+0x29c>
  401ba2:	ebba 030e 	subs.w	r3, sl, lr
  401ba6:	eb64 0405 	sbc.w	r4, r4, r5
  401baa:	fa04 f707 	lsl.w	r7, r4, r7
  401bae:	40cb      	lsrs	r3, r1
  401bb0:	431f      	orrs	r7, r3
  401bb2:	40cc      	lsrs	r4, r1
  401bb4:	6037      	str	r7, [r6, #0]
  401bb6:	6074      	str	r4, [r6, #4]
  401bb8:	2100      	movs	r1, #0
  401bba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  401bbe:	4618      	mov	r0, r3
  401bc0:	e6f8      	b.n	4019b4 <__udivmoddi4+0x98>
  401bc2:	4690      	mov	r8, r2
  401bc4:	e6e0      	b.n	401988 <__udivmoddi4+0x6c>
  401bc6:	45c2      	cmp	sl, r8
  401bc8:	d2ea      	bcs.n	401ba0 <__udivmoddi4+0x284>
  401bca:	ebb8 0e02 	subs.w	lr, r8, r2
  401bce:	eb69 0503 	sbc.w	r5, r9, r3
  401bd2:	3801      	subs	r0, #1
  401bd4:	e7e4      	b.n	401ba0 <__udivmoddi4+0x284>
  401bd6:	4628      	mov	r0, r5
  401bd8:	e7d7      	b.n	401b8a <__udivmoddi4+0x26e>
  401bda:	4640      	mov	r0, r8
  401bdc:	e791      	b.n	401b02 <__udivmoddi4+0x1e6>
  401bde:	4681      	mov	r9, r0
  401be0:	e7be      	b.n	401b60 <__udivmoddi4+0x244>
  401be2:	4601      	mov	r1, r0
  401be4:	e778      	b.n	401ad8 <__udivmoddi4+0x1bc>
  401be6:	3802      	subs	r0, #2
  401be8:	443c      	add	r4, r7
  401bea:	e745      	b.n	401a78 <__udivmoddi4+0x15c>
  401bec:	4608      	mov	r0, r1
  401bee:	e708      	b.n	401a02 <__udivmoddi4+0xe6>
  401bf0:	f1a8 0802 	sub.w	r8, r8, #2
  401bf4:	443d      	add	r5, r7
  401bf6:	e72b      	b.n	401a50 <__udivmoddi4+0x134>

00401bf8 <__aeabi_idiv0>:
  401bf8:	4770      	bx	lr
  401bfa:	bf00      	nop

00401bfc <__libc_init_array>:
  401bfc:	b570      	push	{r4, r5, r6, lr}
  401bfe:	4e0f      	ldr	r6, [pc, #60]	; (401c3c <__libc_init_array+0x40>)
  401c00:	4d0f      	ldr	r5, [pc, #60]	; (401c40 <__libc_init_array+0x44>)
  401c02:	1b76      	subs	r6, r6, r5
  401c04:	10b6      	asrs	r6, r6, #2
  401c06:	bf18      	it	ne
  401c08:	2400      	movne	r4, #0
  401c0a:	d005      	beq.n	401c18 <__libc_init_array+0x1c>
  401c0c:	3401      	adds	r4, #1
  401c0e:	f855 3b04 	ldr.w	r3, [r5], #4
  401c12:	4798      	blx	r3
  401c14:	42a6      	cmp	r6, r4
  401c16:	d1f9      	bne.n	401c0c <__libc_init_array+0x10>
  401c18:	4e0a      	ldr	r6, [pc, #40]	; (401c44 <__libc_init_array+0x48>)
  401c1a:	4d0b      	ldr	r5, [pc, #44]	; (401c48 <__libc_init_array+0x4c>)
  401c1c:	1b76      	subs	r6, r6, r5
  401c1e:	f005 f967 	bl	406ef0 <_init>
  401c22:	10b6      	asrs	r6, r6, #2
  401c24:	bf18      	it	ne
  401c26:	2400      	movne	r4, #0
  401c28:	d006      	beq.n	401c38 <__libc_init_array+0x3c>
  401c2a:	3401      	adds	r4, #1
  401c2c:	f855 3b04 	ldr.w	r3, [r5], #4
  401c30:	4798      	blx	r3
  401c32:	42a6      	cmp	r6, r4
  401c34:	d1f9      	bne.n	401c2a <__libc_init_array+0x2e>
  401c36:	bd70      	pop	{r4, r5, r6, pc}
  401c38:	bd70      	pop	{r4, r5, r6, pc}
  401c3a:	bf00      	nop
  401c3c:	00406efc 	.word	0x00406efc
  401c40:	00406efc 	.word	0x00406efc
  401c44:	00406f04 	.word	0x00406f04
  401c48:	00406efc 	.word	0x00406efc

00401c4c <memset>:
  401c4c:	b470      	push	{r4, r5, r6}
  401c4e:	0786      	lsls	r6, r0, #30
  401c50:	d046      	beq.n	401ce0 <memset+0x94>
  401c52:	1e54      	subs	r4, r2, #1
  401c54:	2a00      	cmp	r2, #0
  401c56:	d041      	beq.n	401cdc <memset+0x90>
  401c58:	b2ca      	uxtb	r2, r1
  401c5a:	4603      	mov	r3, r0
  401c5c:	e002      	b.n	401c64 <memset+0x18>
  401c5e:	f114 34ff 	adds.w	r4, r4, #4294967295
  401c62:	d33b      	bcc.n	401cdc <memset+0x90>
  401c64:	f803 2b01 	strb.w	r2, [r3], #1
  401c68:	079d      	lsls	r5, r3, #30
  401c6a:	d1f8      	bne.n	401c5e <memset+0x12>
  401c6c:	2c03      	cmp	r4, #3
  401c6e:	d92e      	bls.n	401cce <memset+0x82>
  401c70:	b2cd      	uxtb	r5, r1
  401c72:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  401c76:	2c0f      	cmp	r4, #15
  401c78:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  401c7c:	d919      	bls.n	401cb2 <memset+0x66>
  401c7e:	f103 0210 	add.w	r2, r3, #16
  401c82:	4626      	mov	r6, r4
  401c84:	3e10      	subs	r6, #16
  401c86:	2e0f      	cmp	r6, #15
  401c88:	f842 5c10 	str.w	r5, [r2, #-16]
  401c8c:	f842 5c0c 	str.w	r5, [r2, #-12]
  401c90:	f842 5c08 	str.w	r5, [r2, #-8]
  401c94:	f842 5c04 	str.w	r5, [r2, #-4]
  401c98:	f102 0210 	add.w	r2, r2, #16
  401c9c:	d8f2      	bhi.n	401c84 <memset+0x38>
  401c9e:	f1a4 0210 	sub.w	r2, r4, #16
  401ca2:	f022 020f 	bic.w	r2, r2, #15
  401ca6:	f004 040f 	and.w	r4, r4, #15
  401caa:	3210      	adds	r2, #16
  401cac:	2c03      	cmp	r4, #3
  401cae:	4413      	add	r3, r2
  401cb0:	d90d      	bls.n	401cce <memset+0x82>
  401cb2:	461e      	mov	r6, r3
  401cb4:	4622      	mov	r2, r4
  401cb6:	3a04      	subs	r2, #4
  401cb8:	2a03      	cmp	r2, #3
  401cba:	f846 5b04 	str.w	r5, [r6], #4
  401cbe:	d8fa      	bhi.n	401cb6 <memset+0x6a>
  401cc0:	1f22      	subs	r2, r4, #4
  401cc2:	f022 0203 	bic.w	r2, r2, #3
  401cc6:	3204      	adds	r2, #4
  401cc8:	4413      	add	r3, r2
  401cca:	f004 0403 	and.w	r4, r4, #3
  401cce:	b12c      	cbz	r4, 401cdc <memset+0x90>
  401cd0:	b2c9      	uxtb	r1, r1
  401cd2:	441c      	add	r4, r3
  401cd4:	f803 1b01 	strb.w	r1, [r3], #1
  401cd8:	429c      	cmp	r4, r3
  401cda:	d1fb      	bne.n	401cd4 <memset+0x88>
  401cdc:	bc70      	pop	{r4, r5, r6}
  401cde:	4770      	bx	lr
  401ce0:	4614      	mov	r4, r2
  401ce2:	4603      	mov	r3, r0
  401ce4:	e7c2      	b.n	401c6c <memset+0x20>
  401ce6:	bf00      	nop

00401ce8 <sprintf>:
  401ce8:	b40e      	push	{r1, r2, r3}
  401cea:	b5f0      	push	{r4, r5, r6, r7, lr}
  401cec:	b09c      	sub	sp, #112	; 0x70
  401cee:	ab21      	add	r3, sp, #132	; 0x84
  401cf0:	490f      	ldr	r1, [pc, #60]	; (401d30 <sprintf+0x48>)
  401cf2:	f853 2b04 	ldr.w	r2, [r3], #4
  401cf6:	9301      	str	r3, [sp, #4]
  401cf8:	4605      	mov	r5, r0
  401cfa:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
  401cfe:	6808      	ldr	r0, [r1, #0]
  401d00:	9502      	str	r5, [sp, #8]
  401d02:	f44f 7702 	mov.w	r7, #520	; 0x208
  401d06:	f64f 76ff 	movw	r6, #65535	; 0xffff
  401d0a:	a902      	add	r1, sp, #8
  401d0c:	9506      	str	r5, [sp, #24]
  401d0e:	f8ad 7014 	strh.w	r7, [sp, #20]
  401d12:	9404      	str	r4, [sp, #16]
  401d14:	9407      	str	r4, [sp, #28]
  401d16:	f8ad 6016 	strh.w	r6, [sp, #22]
  401d1a:	f000 f80b 	bl	401d34 <_svfprintf_r>
  401d1e:	9b02      	ldr	r3, [sp, #8]
  401d20:	2200      	movs	r2, #0
  401d22:	701a      	strb	r2, [r3, #0]
  401d24:	b01c      	add	sp, #112	; 0x70
  401d26:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
  401d2a:	b003      	add	sp, #12
  401d2c:	4770      	bx	lr
  401d2e:	bf00      	nop
  401d30:	20400020 	.word	0x20400020

00401d34 <_svfprintf_r>:
  401d34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401d38:	b0c3      	sub	sp, #268	; 0x10c
  401d3a:	460c      	mov	r4, r1
  401d3c:	910b      	str	r1, [sp, #44]	; 0x2c
  401d3e:	4692      	mov	sl, r2
  401d40:	930f      	str	r3, [sp, #60]	; 0x3c
  401d42:	900c      	str	r0, [sp, #48]	; 0x30
  401d44:	f002 fa0c 	bl	404160 <_localeconv_r>
  401d48:	6803      	ldr	r3, [r0, #0]
  401d4a:	931a      	str	r3, [sp, #104]	; 0x68
  401d4c:	4618      	mov	r0, r3
  401d4e:	f003 f8d7 	bl	404f00 <strlen>
  401d52:	89a3      	ldrh	r3, [r4, #12]
  401d54:	9019      	str	r0, [sp, #100]	; 0x64
  401d56:	0619      	lsls	r1, r3, #24
  401d58:	d503      	bpl.n	401d62 <_svfprintf_r+0x2e>
  401d5a:	6923      	ldr	r3, [r4, #16]
  401d5c:	2b00      	cmp	r3, #0
  401d5e:	f001 8003 	beq.w	402d68 <_svfprintf_r+0x1034>
  401d62:	2300      	movs	r3, #0
  401d64:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
  401d68:	9313      	str	r3, [sp, #76]	; 0x4c
  401d6a:	9315      	str	r3, [sp, #84]	; 0x54
  401d6c:	9314      	str	r3, [sp, #80]	; 0x50
  401d6e:	9327      	str	r3, [sp, #156]	; 0x9c
  401d70:	9326      	str	r3, [sp, #152]	; 0x98
  401d72:	9318      	str	r3, [sp, #96]	; 0x60
  401d74:	931b      	str	r3, [sp, #108]	; 0x6c
  401d76:	9309      	str	r3, [sp, #36]	; 0x24
  401d78:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
  401d7c:	46c8      	mov	r8, r9
  401d7e:	9316      	str	r3, [sp, #88]	; 0x58
  401d80:	9317      	str	r3, [sp, #92]	; 0x5c
  401d82:	f89a 3000 	ldrb.w	r3, [sl]
  401d86:	4654      	mov	r4, sl
  401d88:	b1e3      	cbz	r3, 401dc4 <_svfprintf_r+0x90>
  401d8a:	2b25      	cmp	r3, #37	; 0x25
  401d8c:	d102      	bne.n	401d94 <_svfprintf_r+0x60>
  401d8e:	e019      	b.n	401dc4 <_svfprintf_r+0x90>
  401d90:	2b25      	cmp	r3, #37	; 0x25
  401d92:	d003      	beq.n	401d9c <_svfprintf_r+0x68>
  401d94:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  401d98:	2b00      	cmp	r3, #0
  401d9a:	d1f9      	bne.n	401d90 <_svfprintf_r+0x5c>
  401d9c:	eba4 050a 	sub.w	r5, r4, sl
  401da0:	b185      	cbz	r5, 401dc4 <_svfprintf_r+0x90>
  401da2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401da4:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  401da6:	f8c8 a000 	str.w	sl, [r8]
  401daa:	3301      	adds	r3, #1
  401dac:	442a      	add	r2, r5
  401dae:	2b07      	cmp	r3, #7
  401db0:	f8c8 5004 	str.w	r5, [r8, #4]
  401db4:	9227      	str	r2, [sp, #156]	; 0x9c
  401db6:	9326      	str	r3, [sp, #152]	; 0x98
  401db8:	dc7f      	bgt.n	401eba <_svfprintf_r+0x186>
  401dba:	f108 0808 	add.w	r8, r8, #8
  401dbe:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401dc0:	442b      	add	r3, r5
  401dc2:	9309      	str	r3, [sp, #36]	; 0x24
  401dc4:	7823      	ldrb	r3, [r4, #0]
  401dc6:	2b00      	cmp	r3, #0
  401dc8:	d07f      	beq.n	401eca <_svfprintf_r+0x196>
  401dca:	2300      	movs	r3, #0
  401dcc:	461a      	mov	r2, r3
  401dce:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  401dd2:	4619      	mov	r1, r3
  401dd4:	930d      	str	r3, [sp, #52]	; 0x34
  401dd6:	469b      	mov	fp, r3
  401dd8:	f04f 30ff 	mov.w	r0, #4294967295
  401ddc:	7863      	ldrb	r3, [r4, #1]
  401dde:	900a      	str	r0, [sp, #40]	; 0x28
  401de0:	f104 0a01 	add.w	sl, r4, #1
  401de4:	f10a 0a01 	add.w	sl, sl, #1
  401de8:	f1a3 0020 	sub.w	r0, r3, #32
  401dec:	2858      	cmp	r0, #88	; 0x58
  401dee:	f200 83c1 	bhi.w	402574 <_svfprintf_r+0x840>
  401df2:	e8df f010 	tbh	[pc, r0, lsl #1]
  401df6:	0238      	.short	0x0238
  401df8:	03bf03bf 	.word	0x03bf03bf
  401dfc:	03bf0240 	.word	0x03bf0240
  401e00:	03bf03bf 	.word	0x03bf03bf
  401e04:	03bf03bf 	.word	0x03bf03bf
  401e08:	024503bf 	.word	0x024503bf
  401e0c:	03bf0203 	.word	0x03bf0203
  401e10:	026b005d 	.word	0x026b005d
  401e14:	028603bf 	.word	0x028603bf
  401e18:	039d039d 	.word	0x039d039d
  401e1c:	039d039d 	.word	0x039d039d
  401e20:	039d039d 	.word	0x039d039d
  401e24:	039d039d 	.word	0x039d039d
  401e28:	03bf039d 	.word	0x03bf039d
  401e2c:	03bf03bf 	.word	0x03bf03bf
  401e30:	03bf03bf 	.word	0x03bf03bf
  401e34:	03bf03bf 	.word	0x03bf03bf
  401e38:	03bf03bf 	.word	0x03bf03bf
  401e3c:	033703bf 	.word	0x033703bf
  401e40:	03bf0357 	.word	0x03bf0357
  401e44:	03bf0357 	.word	0x03bf0357
  401e48:	03bf03bf 	.word	0x03bf03bf
  401e4c:	039803bf 	.word	0x039803bf
  401e50:	03bf03bf 	.word	0x03bf03bf
  401e54:	03bf03ad 	.word	0x03bf03ad
  401e58:	03bf03bf 	.word	0x03bf03bf
  401e5c:	03bf03bf 	.word	0x03bf03bf
  401e60:	03bf0259 	.word	0x03bf0259
  401e64:	031e03bf 	.word	0x031e03bf
  401e68:	03bf03bf 	.word	0x03bf03bf
  401e6c:	03bf03bf 	.word	0x03bf03bf
  401e70:	03bf03bf 	.word	0x03bf03bf
  401e74:	03bf03bf 	.word	0x03bf03bf
  401e78:	03bf03bf 	.word	0x03bf03bf
  401e7c:	02db02c6 	.word	0x02db02c6
  401e80:	03570357 	.word	0x03570357
  401e84:	028b0357 	.word	0x028b0357
  401e88:	03bf02db 	.word	0x03bf02db
  401e8c:	029003bf 	.word	0x029003bf
  401e90:	029d03bf 	.word	0x029d03bf
  401e94:	02b401cc 	.word	0x02b401cc
  401e98:	03bf0208 	.word	0x03bf0208
  401e9c:	03bf01e1 	.word	0x03bf01e1
  401ea0:	03bf007e 	.word	0x03bf007e
  401ea4:	020d03bf 	.word	0x020d03bf
  401ea8:	980d      	ldr	r0, [sp, #52]	; 0x34
  401eaa:	930f      	str	r3, [sp, #60]	; 0x3c
  401eac:	4240      	negs	r0, r0
  401eae:	900d      	str	r0, [sp, #52]	; 0x34
  401eb0:	f04b 0b04 	orr.w	fp, fp, #4
  401eb4:	f89a 3000 	ldrb.w	r3, [sl]
  401eb8:	e794      	b.n	401de4 <_svfprintf_r+0xb0>
  401eba:	aa25      	add	r2, sp, #148	; 0x94
  401ebc:	990b      	ldr	r1, [sp, #44]	; 0x2c
  401ebe:	980c      	ldr	r0, [sp, #48]	; 0x30
  401ec0:	f003 f88c 	bl	404fdc <__ssprint_r>
  401ec4:	b940      	cbnz	r0, 401ed8 <_svfprintf_r+0x1a4>
  401ec6:	46c8      	mov	r8, r9
  401ec8:	e779      	b.n	401dbe <_svfprintf_r+0x8a>
  401eca:	9b27      	ldr	r3, [sp, #156]	; 0x9c
  401ecc:	b123      	cbz	r3, 401ed8 <_svfprintf_r+0x1a4>
  401ece:	980c      	ldr	r0, [sp, #48]	; 0x30
  401ed0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  401ed2:	aa25      	add	r2, sp, #148	; 0x94
  401ed4:	f003 f882 	bl	404fdc <__ssprint_r>
  401ed8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  401eda:	899b      	ldrh	r3, [r3, #12]
  401edc:	f013 0f40 	tst.w	r3, #64	; 0x40
  401ee0:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401ee2:	bf18      	it	ne
  401ee4:	f04f 33ff 	movne.w	r3, #4294967295
  401ee8:	9309      	str	r3, [sp, #36]	; 0x24
  401eea:	9809      	ldr	r0, [sp, #36]	; 0x24
  401eec:	b043      	add	sp, #268	; 0x10c
  401eee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401ef2:	f01b 0f20 	tst.w	fp, #32
  401ef6:	9311      	str	r3, [sp, #68]	; 0x44
  401ef8:	f040 81dd 	bne.w	4022b6 <_svfprintf_r+0x582>
  401efc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401efe:	f01b 0f10 	tst.w	fp, #16
  401f02:	4613      	mov	r3, r2
  401f04:	f040 856e 	bne.w	4029e4 <_svfprintf_r+0xcb0>
  401f08:	f01b 0f40 	tst.w	fp, #64	; 0x40
  401f0c:	f000 856a 	beq.w	4029e4 <_svfprintf_r+0xcb0>
  401f10:	8814      	ldrh	r4, [r2, #0]
  401f12:	3204      	adds	r2, #4
  401f14:	2500      	movs	r5, #0
  401f16:	2301      	movs	r3, #1
  401f18:	920f      	str	r2, [sp, #60]	; 0x3c
  401f1a:	2700      	movs	r7, #0
  401f1c:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  401f20:	990a      	ldr	r1, [sp, #40]	; 0x28
  401f22:	1c4a      	adds	r2, r1, #1
  401f24:	f000 8265 	beq.w	4023f2 <_svfprintf_r+0x6be>
  401f28:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
  401f2c:	9207      	str	r2, [sp, #28]
  401f2e:	ea54 0205 	orrs.w	r2, r4, r5
  401f32:	f040 8264 	bne.w	4023fe <_svfprintf_r+0x6ca>
  401f36:	2900      	cmp	r1, #0
  401f38:	f040 843c 	bne.w	4027b4 <_svfprintf_r+0xa80>
  401f3c:	2b00      	cmp	r3, #0
  401f3e:	f040 84d7 	bne.w	4028f0 <_svfprintf_r+0xbbc>
  401f42:	f01b 0301 	ands.w	r3, fp, #1
  401f46:	930e      	str	r3, [sp, #56]	; 0x38
  401f48:	f000 8604 	beq.w	402b54 <_svfprintf_r+0xe20>
  401f4c:	ae42      	add	r6, sp, #264	; 0x108
  401f4e:	2330      	movs	r3, #48	; 0x30
  401f50:	f806 3d41 	strb.w	r3, [r6, #-65]!
  401f54:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  401f56:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  401f58:	4293      	cmp	r3, r2
  401f5a:	bfb8      	it	lt
  401f5c:	4613      	movlt	r3, r2
  401f5e:	9308      	str	r3, [sp, #32]
  401f60:	2300      	movs	r3, #0
  401f62:	9312      	str	r3, [sp, #72]	; 0x48
  401f64:	b117      	cbz	r7, 401f6c <_svfprintf_r+0x238>
  401f66:	9b08      	ldr	r3, [sp, #32]
  401f68:	3301      	adds	r3, #1
  401f6a:	9308      	str	r3, [sp, #32]
  401f6c:	9b07      	ldr	r3, [sp, #28]
  401f6e:	f013 0302 	ands.w	r3, r3, #2
  401f72:	9310      	str	r3, [sp, #64]	; 0x40
  401f74:	d002      	beq.n	401f7c <_svfprintf_r+0x248>
  401f76:	9b08      	ldr	r3, [sp, #32]
  401f78:	3302      	adds	r3, #2
  401f7a:	9308      	str	r3, [sp, #32]
  401f7c:	9b07      	ldr	r3, [sp, #28]
  401f7e:	f013 0584 	ands.w	r5, r3, #132	; 0x84
  401f82:	f040 830e 	bne.w	4025a2 <_svfprintf_r+0x86e>
  401f86:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  401f88:	9a08      	ldr	r2, [sp, #32]
  401f8a:	eba3 0b02 	sub.w	fp, r3, r2
  401f8e:	f1bb 0f00 	cmp.w	fp, #0
  401f92:	f340 8306 	ble.w	4025a2 <_svfprintf_r+0x86e>
  401f96:	f1bb 0f10 	cmp.w	fp, #16
  401f9a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  401f9c:	9a26      	ldr	r2, [sp, #152]	; 0x98
  401f9e:	dd29      	ble.n	401ff4 <_svfprintf_r+0x2c0>
  401fa0:	4643      	mov	r3, r8
  401fa2:	4621      	mov	r1, r4
  401fa4:	46a8      	mov	r8, r5
  401fa6:	2710      	movs	r7, #16
  401fa8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  401faa:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  401fac:	e006      	b.n	401fbc <_svfprintf_r+0x288>
  401fae:	f1ab 0b10 	sub.w	fp, fp, #16
  401fb2:	f1bb 0f10 	cmp.w	fp, #16
  401fb6:	f103 0308 	add.w	r3, r3, #8
  401fba:	dd18      	ble.n	401fee <_svfprintf_r+0x2ba>
  401fbc:	3201      	adds	r2, #1
  401fbe:	48b7      	ldr	r0, [pc, #732]	; (40229c <_svfprintf_r+0x568>)
  401fc0:	9226      	str	r2, [sp, #152]	; 0x98
  401fc2:	3110      	adds	r1, #16
  401fc4:	2a07      	cmp	r2, #7
  401fc6:	9127      	str	r1, [sp, #156]	; 0x9c
  401fc8:	e883 0081 	stmia.w	r3, {r0, r7}
  401fcc:	ddef      	ble.n	401fae <_svfprintf_r+0x27a>
  401fce:	aa25      	add	r2, sp, #148	; 0x94
  401fd0:	4629      	mov	r1, r5
  401fd2:	4620      	mov	r0, r4
  401fd4:	f003 f802 	bl	404fdc <__ssprint_r>
  401fd8:	2800      	cmp	r0, #0
  401fda:	f47f af7d 	bne.w	401ed8 <_svfprintf_r+0x1a4>
  401fde:	f1ab 0b10 	sub.w	fp, fp, #16
  401fe2:	f1bb 0f10 	cmp.w	fp, #16
  401fe6:	9927      	ldr	r1, [sp, #156]	; 0x9c
  401fe8:	9a26      	ldr	r2, [sp, #152]	; 0x98
  401fea:	464b      	mov	r3, r9
  401fec:	dce6      	bgt.n	401fbc <_svfprintf_r+0x288>
  401fee:	4645      	mov	r5, r8
  401ff0:	460c      	mov	r4, r1
  401ff2:	4698      	mov	r8, r3
  401ff4:	3201      	adds	r2, #1
  401ff6:	4ba9      	ldr	r3, [pc, #676]	; (40229c <_svfprintf_r+0x568>)
  401ff8:	9226      	str	r2, [sp, #152]	; 0x98
  401ffa:	445c      	add	r4, fp
  401ffc:	2a07      	cmp	r2, #7
  401ffe:	9427      	str	r4, [sp, #156]	; 0x9c
  402000:	e888 0808 	stmia.w	r8, {r3, fp}
  402004:	f300 8498 	bgt.w	402938 <_svfprintf_r+0xc04>
  402008:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  40200c:	f108 0808 	add.w	r8, r8, #8
  402010:	b177      	cbz	r7, 402030 <_svfprintf_r+0x2fc>
  402012:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402014:	3301      	adds	r3, #1
  402016:	3401      	adds	r4, #1
  402018:	f10d 0177 	add.w	r1, sp, #119	; 0x77
  40201c:	2201      	movs	r2, #1
  40201e:	2b07      	cmp	r3, #7
  402020:	9427      	str	r4, [sp, #156]	; 0x9c
  402022:	9326      	str	r3, [sp, #152]	; 0x98
  402024:	e888 0006 	stmia.w	r8, {r1, r2}
  402028:	f300 83db 	bgt.w	4027e2 <_svfprintf_r+0xaae>
  40202c:	f108 0808 	add.w	r8, r8, #8
  402030:	9b10      	ldr	r3, [sp, #64]	; 0x40
  402032:	b16b      	cbz	r3, 402050 <_svfprintf_r+0x31c>
  402034:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402036:	3301      	adds	r3, #1
  402038:	3402      	adds	r4, #2
  40203a:	a91e      	add	r1, sp, #120	; 0x78
  40203c:	2202      	movs	r2, #2
  40203e:	2b07      	cmp	r3, #7
  402040:	9427      	str	r4, [sp, #156]	; 0x9c
  402042:	9326      	str	r3, [sp, #152]	; 0x98
  402044:	e888 0006 	stmia.w	r8, {r1, r2}
  402048:	f300 83d6 	bgt.w	4027f8 <_svfprintf_r+0xac4>
  40204c:	f108 0808 	add.w	r8, r8, #8
  402050:	2d80      	cmp	r5, #128	; 0x80
  402052:	f000 8315 	beq.w	402680 <_svfprintf_r+0x94c>
  402056:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402058:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  40205a:	1a9f      	subs	r7, r3, r2
  40205c:	2f00      	cmp	r7, #0
  40205e:	dd36      	ble.n	4020ce <_svfprintf_r+0x39a>
  402060:	2f10      	cmp	r7, #16
  402062:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402064:	4d8e      	ldr	r5, [pc, #568]	; (4022a0 <_svfprintf_r+0x56c>)
  402066:	dd27      	ble.n	4020b8 <_svfprintf_r+0x384>
  402068:	4642      	mov	r2, r8
  40206a:	4621      	mov	r1, r4
  40206c:	46b0      	mov	r8, r6
  40206e:	f04f 0b10 	mov.w	fp, #16
  402072:	462e      	mov	r6, r5
  402074:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402076:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402078:	e004      	b.n	402084 <_svfprintf_r+0x350>
  40207a:	3f10      	subs	r7, #16
  40207c:	2f10      	cmp	r7, #16
  40207e:	f102 0208 	add.w	r2, r2, #8
  402082:	dd15      	ble.n	4020b0 <_svfprintf_r+0x37c>
  402084:	3301      	adds	r3, #1
  402086:	3110      	adds	r1, #16
  402088:	2b07      	cmp	r3, #7
  40208a:	9127      	str	r1, [sp, #156]	; 0x9c
  40208c:	9326      	str	r3, [sp, #152]	; 0x98
  40208e:	e882 0840 	stmia.w	r2, {r6, fp}
  402092:	ddf2      	ble.n	40207a <_svfprintf_r+0x346>
  402094:	aa25      	add	r2, sp, #148	; 0x94
  402096:	4629      	mov	r1, r5
  402098:	4620      	mov	r0, r4
  40209a:	f002 ff9f 	bl	404fdc <__ssprint_r>
  40209e:	2800      	cmp	r0, #0
  4020a0:	f47f af1a 	bne.w	401ed8 <_svfprintf_r+0x1a4>
  4020a4:	3f10      	subs	r7, #16
  4020a6:	2f10      	cmp	r7, #16
  4020a8:	9927      	ldr	r1, [sp, #156]	; 0x9c
  4020aa:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4020ac:	464a      	mov	r2, r9
  4020ae:	dce9      	bgt.n	402084 <_svfprintf_r+0x350>
  4020b0:	4635      	mov	r5, r6
  4020b2:	460c      	mov	r4, r1
  4020b4:	4646      	mov	r6, r8
  4020b6:	4690      	mov	r8, r2
  4020b8:	3301      	adds	r3, #1
  4020ba:	443c      	add	r4, r7
  4020bc:	2b07      	cmp	r3, #7
  4020be:	9427      	str	r4, [sp, #156]	; 0x9c
  4020c0:	9326      	str	r3, [sp, #152]	; 0x98
  4020c2:	e888 00a0 	stmia.w	r8, {r5, r7}
  4020c6:	f300 8381 	bgt.w	4027cc <_svfprintf_r+0xa98>
  4020ca:	f108 0808 	add.w	r8, r8, #8
  4020ce:	9b07      	ldr	r3, [sp, #28]
  4020d0:	05df      	lsls	r7, r3, #23
  4020d2:	f100 8268 	bmi.w	4025a6 <_svfprintf_r+0x872>
  4020d6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4020d8:	990e      	ldr	r1, [sp, #56]	; 0x38
  4020da:	f8c8 6000 	str.w	r6, [r8]
  4020de:	3301      	adds	r3, #1
  4020e0:	440c      	add	r4, r1
  4020e2:	2b07      	cmp	r3, #7
  4020e4:	9427      	str	r4, [sp, #156]	; 0x9c
  4020e6:	f8c8 1004 	str.w	r1, [r8, #4]
  4020ea:	9326      	str	r3, [sp, #152]	; 0x98
  4020ec:	f300 834d 	bgt.w	40278a <_svfprintf_r+0xa56>
  4020f0:	f108 0808 	add.w	r8, r8, #8
  4020f4:	9b07      	ldr	r3, [sp, #28]
  4020f6:	075b      	lsls	r3, r3, #29
  4020f8:	d53a      	bpl.n	402170 <_svfprintf_r+0x43c>
  4020fa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4020fc:	9a08      	ldr	r2, [sp, #32]
  4020fe:	1a9d      	subs	r5, r3, r2
  402100:	2d00      	cmp	r5, #0
  402102:	dd35      	ble.n	402170 <_svfprintf_r+0x43c>
  402104:	2d10      	cmp	r5, #16
  402106:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402108:	dd20      	ble.n	40214c <_svfprintf_r+0x418>
  40210a:	2610      	movs	r6, #16
  40210c:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  40210e:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
  402112:	e004      	b.n	40211e <_svfprintf_r+0x3ea>
  402114:	3d10      	subs	r5, #16
  402116:	2d10      	cmp	r5, #16
  402118:	f108 0808 	add.w	r8, r8, #8
  40211c:	dd16      	ble.n	40214c <_svfprintf_r+0x418>
  40211e:	3301      	adds	r3, #1
  402120:	4a5e      	ldr	r2, [pc, #376]	; (40229c <_svfprintf_r+0x568>)
  402122:	9326      	str	r3, [sp, #152]	; 0x98
  402124:	3410      	adds	r4, #16
  402126:	2b07      	cmp	r3, #7
  402128:	9427      	str	r4, [sp, #156]	; 0x9c
  40212a:	e888 0044 	stmia.w	r8, {r2, r6}
  40212e:	ddf1      	ble.n	402114 <_svfprintf_r+0x3e0>
  402130:	aa25      	add	r2, sp, #148	; 0x94
  402132:	4659      	mov	r1, fp
  402134:	4638      	mov	r0, r7
  402136:	f002 ff51 	bl	404fdc <__ssprint_r>
  40213a:	2800      	cmp	r0, #0
  40213c:	f47f aecc 	bne.w	401ed8 <_svfprintf_r+0x1a4>
  402140:	3d10      	subs	r5, #16
  402142:	2d10      	cmp	r5, #16
  402144:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402146:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402148:	46c8      	mov	r8, r9
  40214a:	dce8      	bgt.n	40211e <_svfprintf_r+0x3ea>
  40214c:	3301      	adds	r3, #1
  40214e:	4a53      	ldr	r2, [pc, #332]	; (40229c <_svfprintf_r+0x568>)
  402150:	9326      	str	r3, [sp, #152]	; 0x98
  402152:	442c      	add	r4, r5
  402154:	2b07      	cmp	r3, #7
  402156:	9427      	str	r4, [sp, #156]	; 0x9c
  402158:	e888 0024 	stmia.w	r8, {r2, r5}
  40215c:	dd08      	ble.n	402170 <_svfprintf_r+0x43c>
  40215e:	aa25      	add	r2, sp, #148	; 0x94
  402160:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402162:	980c      	ldr	r0, [sp, #48]	; 0x30
  402164:	f002 ff3a 	bl	404fdc <__ssprint_r>
  402168:	2800      	cmp	r0, #0
  40216a:	f47f aeb5 	bne.w	401ed8 <_svfprintf_r+0x1a4>
  40216e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402170:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402172:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  402174:	9908      	ldr	r1, [sp, #32]
  402176:	428a      	cmp	r2, r1
  402178:	bfac      	ite	ge
  40217a:	189b      	addge	r3, r3, r2
  40217c:	185b      	addlt	r3, r3, r1
  40217e:	9309      	str	r3, [sp, #36]	; 0x24
  402180:	2c00      	cmp	r4, #0
  402182:	f040 830d 	bne.w	4027a0 <_svfprintf_r+0xa6c>
  402186:	2300      	movs	r3, #0
  402188:	9326      	str	r3, [sp, #152]	; 0x98
  40218a:	46c8      	mov	r8, r9
  40218c:	e5f9      	b.n	401d82 <_svfprintf_r+0x4e>
  40218e:	9311      	str	r3, [sp, #68]	; 0x44
  402190:	f01b 0320 	ands.w	r3, fp, #32
  402194:	f040 81e3 	bne.w	40255e <_svfprintf_r+0x82a>
  402198:	f01b 0210 	ands.w	r2, fp, #16
  40219c:	f040 842e 	bne.w	4029fc <_svfprintf_r+0xcc8>
  4021a0:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
  4021a4:	f000 842a 	beq.w	4029fc <_svfprintf_r+0xcc8>
  4021a8:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4021aa:	4613      	mov	r3, r2
  4021ac:	460a      	mov	r2, r1
  4021ae:	3204      	adds	r2, #4
  4021b0:	880c      	ldrh	r4, [r1, #0]
  4021b2:	920f      	str	r2, [sp, #60]	; 0x3c
  4021b4:	2500      	movs	r5, #0
  4021b6:	e6b0      	b.n	401f1a <_svfprintf_r+0x1e6>
  4021b8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4021ba:	9311      	str	r3, [sp, #68]	; 0x44
  4021bc:	6816      	ldr	r6, [r2, #0]
  4021be:	2400      	movs	r4, #0
  4021c0:	f88d 4077 	strb.w	r4, [sp, #119]	; 0x77
  4021c4:	1d15      	adds	r5, r2, #4
  4021c6:	2e00      	cmp	r6, #0
  4021c8:	f000 86a7 	beq.w	402f1a <_svfprintf_r+0x11e6>
  4021cc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4021ce:	1c53      	adds	r3, r2, #1
  4021d0:	f000 8609 	beq.w	402de6 <_svfprintf_r+0x10b2>
  4021d4:	4621      	mov	r1, r4
  4021d6:	4630      	mov	r0, r6
  4021d8:	f002 fa8a 	bl	4046f0 <memchr>
  4021dc:	2800      	cmp	r0, #0
  4021de:	f000 86e1 	beq.w	402fa4 <_svfprintf_r+0x1270>
  4021e2:	1b83      	subs	r3, r0, r6
  4021e4:	930e      	str	r3, [sp, #56]	; 0x38
  4021e6:	940a      	str	r4, [sp, #40]	; 0x28
  4021e8:	950f      	str	r5, [sp, #60]	; 0x3c
  4021ea:	f8cd b01c 	str.w	fp, [sp, #28]
  4021ee:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  4021f2:	9308      	str	r3, [sp, #32]
  4021f4:	9412      	str	r4, [sp, #72]	; 0x48
  4021f6:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4021fa:	e6b3      	b.n	401f64 <_svfprintf_r+0x230>
  4021fc:	f89a 3000 	ldrb.w	r3, [sl]
  402200:	2201      	movs	r2, #1
  402202:	212b      	movs	r1, #43	; 0x2b
  402204:	e5ee      	b.n	401de4 <_svfprintf_r+0xb0>
  402206:	f04b 0b20 	orr.w	fp, fp, #32
  40220a:	f89a 3000 	ldrb.w	r3, [sl]
  40220e:	e5e9      	b.n	401de4 <_svfprintf_r+0xb0>
  402210:	9311      	str	r3, [sp, #68]	; 0x44
  402212:	2a00      	cmp	r2, #0
  402214:	f040 8795 	bne.w	403142 <_svfprintf_r+0x140e>
  402218:	4b22      	ldr	r3, [pc, #136]	; (4022a4 <_svfprintf_r+0x570>)
  40221a:	9318      	str	r3, [sp, #96]	; 0x60
  40221c:	f01b 0f20 	tst.w	fp, #32
  402220:	f040 8111 	bne.w	402446 <_svfprintf_r+0x712>
  402224:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402226:	f01b 0f10 	tst.w	fp, #16
  40222a:	4613      	mov	r3, r2
  40222c:	f040 83e1 	bne.w	4029f2 <_svfprintf_r+0xcbe>
  402230:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402234:	f000 83dd 	beq.w	4029f2 <_svfprintf_r+0xcbe>
  402238:	3304      	adds	r3, #4
  40223a:	8814      	ldrh	r4, [r2, #0]
  40223c:	930f      	str	r3, [sp, #60]	; 0x3c
  40223e:	2500      	movs	r5, #0
  402240:	f01b 0f01 	tst.w	fp, #1
  402244:	f000 810c 	beq.w	402460 <_svfprintf_r+0x72c>
  402248:	ea54 0305 	orrs.w	r3, r4, r5
  40224c:	f000 8108 	beq.w	402460 <_svfprintf_r+0x72c>
  402250:	2330      	movs	r3, #48	; 0x30
  402252:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
  402256:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
  40225a:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
  40225e:	f04b 0b02 	orr.w	fp, fp, #2
  402262:	2302      	movs	r3, #2
  402264:	e659      	b.n	401f1a <_svfprintf_r+0x1e6>
  402266:	f89a 3000 	ldrb.w	r3, [sl]
  40226a:	2900      	cmp	r1, #0
  40226c:	f47f adba 	bne.w	401de4 <_svfprintf_r+0xb0>
  402270:	2201      	movs	r2, #1
  402272:	2120      	movs	r1, #32
  402274:	e5b6      	b.n	401de4 <_svfprintf_r+0xb0>
  402276:	f04b 0b01 	orr.w	fp, fp, #1
  40227a:	f89a 3000 	ldrb.w	r3, [sl]
  40227e:	e5b1      	b.n	401de4 <_svfprintf_r+0xb0>
  402280:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  402282:	6823      	ldr	r3, [r4, #0]
  402284:	930d      	str	r3, [sp, #52]	; 0x34
  402286:	4618      	mov	r0, r3
  402288:	2800      	cmp	r0, #0
  40228a:	4623      	mov	r3, r4
  40228c:	f103 0304 	add.w	r3, r3, #4
  402290:	f6ff ae0a 	blt.w	401ea8 <_svfprintf_r+0x174>
  402294:	930f      	str	r3, [sp, #60]	; 0x3c
  402296:	f89a 3000 	ldrb.w	r3, [sl]
  40229a:	e5a3      	b.n	401de4 <_svfprintf_r+0xb0>
  40229c:	00406cb0 	.word	0x00406cb0
  4022a0:	00406cc0 	.word	0x00406cc0
  4022a4:	00406c90 	.word	0x00406c90
  4022a8:	f04b 0b10 	orr.w	fp, fp, #16
  4022ac:	f01b 0f20 	tst.w	fp, #32
  4022b0:	9311      	str	r3, [sp, #68]	; 0x44
  4022b2:	f43f ae23 	beq.w	401efc <_svfprintf_r+0x1c8>
  4022b6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4022b8:	3507      	adds	r5, #7
  4022ba:	f025 0307 	bic.w	r3, r5, #7
  4022be:	f103 0208 	add.w	r2, r3, #8
  4022c2:	e9d3 4500 	ldrd	r4, r5, [r3]
  4022c6:	920f      	str	r2, [sp, #60]	; 0x3c
  4022c8:	2301      	movs	r3, #1
  4022ca:	e626      	b.n	401f1a <_svfprintf_r+0x1e6>
  4022cc:	f89a 3000 	ldrb.w	r3, [sl]
  4022d0:	2b2a      	cmp	r3, #42	; 0x2a
  4022d2:	f10a 0401 	add.w	r4, sl, #1
  4022d6:	f000 8727 	beq.w	403128 <_svfprintf_r+0x13f4>
  4022da:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  4022de:	2809      	cmp	r0, #9
  4022e0:	46a2      	mov	sl, r4
  4022e2:	f200 86ad 	bhi.w	403040 <_svfprintf_r+0x130c>
  4022e6:	2300      	movs	r3, #0
  4022e8:	461c      	mov	r4, r3
  4022ea:	f81a 3b01 	ldrb.w	r3, [sl], #1
  4022ee:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  4022f2:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  4022f6:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  4022fa:	2809      	cmp	r0, #9
  4022fc:	d9f5      	bls.n	4022ea <_svfprintf_r+0x5b6>
  4022fe:	940a      	str	r4, [sp, #40]	; 0x28
  402300:	e572      	b.n	401de8 <_svfprintf_r+0xb4>
  402302:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
  402306:	f89a 3000 	ldrb.w	r3, [sl]
  40230a:	e56b      	b.n	401de4 <_svfprintf_r+0xb0>
  40230c:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
  402310:	f89a 3000 	ldrb.w	r3, [sl]
  402314:	e566      	b.n	401de4 <_svfprintf_r+0xb0>
  402316:	f89a 3000 	ldrb.w	r3, [sl]
  40231a:	2b6c      	cmp	r3, #108	; 0x6c
  40231c:	bf03      	ittte	eq
  40231e:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
  402322:	f04b 0b20 	orreq.w	fp, fp, #32
  402326:	f10a 0a01 	addeq.w	sl, sl, #1
  40232a:	f04b 0b10 	orrne.w	fp, fp, #16
  40232e:	e559      	b.n	401de4 <_svfprintf_r+0xb0>
  402330:	2a00      	cmp	r2, #0
  402332:	f040 8711 	bne.w	403158 <_svfprintf_r+0x1424>
  402336:	f01b 0f20 	tst.w	fp, #32
  40233a:	f040 84f9 	bne.w	402d30 <_svfprintf_r+0xffc>
  40233e:	f01b 0f10 	tst.w	fp, #16
  402342:	f040 84ac 	bne.w	402c9e <_svfprintf_r+0xf6a>
  402346:	f01b 0f40 	tst.w	fp, #64	; 0x40
  40234a:	f000 84a8 	beq.w	402c9e <_svfprintf_r+0xf6a>
  40234e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402350:	6813      	ldr	r3, [r2, #0]
  402352:	3204      	adds	r2, #4
  402354:	920f      	str	r2, [sp, #60]	; 0x3c
  402356:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
  40235a:	801a      	strh	r2, [r3, #0]
  40235c:	e511      	b.n	401d82 <_svfprintf_r+0x4e>
  40235e:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402360:	4bb3      	ldr	r3, [pc, #716]	; (402630 <_svfprintf_r+0x8fc>)
  402362:	680c      	ldr	r4, [r1, #0]
  402364:	9318      	str	r3, [sp, #96]	; 0x60
  402366:	2230      	movs	r2, #48	; 0x30
  402368:	2378      	movs	r3, #120	; 0x78
  40236a:	3104      	adds	r1, #4
  40236c:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
  402370:	9311      	str	r3, [sp, #68]	; 0x44
  402372:	f04b 0b02 	orr.w	fp, fp, #2
  402376:	910f      	str	r1, [sp, #60]	; 0x3c
  402378:	2500      	movs	r5, #0
  40237a:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
  40237e:	2302      	movs	r3, #2
  402380:	e5cb      	b.n	401f1a <_svfprintf_r+0x1e6>
  402382:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402384:	9311      	str	r3, [sp, #68]	; 0x44
  402386:	680a      	ldr	r2, [r1, #0]
  402388:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  40238c:	2300      	movs	r3, #0
  40238e:	460a      	mov	r2, r1
  402390:	461f      	mov	r7, r3
  402392:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  402396:	3204      	adds	r2, #4
  402398:	2301      	movs	r3, #1
  40239a:	9308      	str	r3, [sp, #32]
  40239c:	f8cd b01c 	str.w	fp, [sp, #28]
  4023a0:	970a      	str	r7, [sp, #40]	; 0x28
  4023a2:	9712      	str	r7, [sp, #72]	; 0x48
  4023a4:	920f      	str	r2, [sp, #60]	; 0x3c
  4023a6:	930e      	str	r3, [sp, #56]	; 0x38
  4023a8:	ae28      	add	r6, sp, #160	; 0xa0
  4023aa:	e5df      	b.n	401f6c <_svfprintf_r+0x238>
  4023ac:	9311      	str	r3, [sp, #68]	; 0x44
  4023ae:	2a00      	cmp	r2, #0
  4023b0:	f040 86ea 	bne.w	403188 <_svfprintf_r+0x1454>
  4023b4:	f01b 0f20 	tst.w	fp, #32
  4023b8:	d15d      	bne.n	402476 <_svfprintf_r+0x742>
  4023ba:	f01b 0f10 	tst.w	fp, #16
  4023be:	f040 8308 	bne.w	4029d2 <_svfprintf_r+0xc9e>
  4023c2:	f01b 0f40 	tst.w	fp, #64	; 0x40
  4023c6:	f000 8304 	beq.w	4029d2 <_svfprintf_r+0xc9e>
  4023ca:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4023cc:	f9b1 4000 	ldrsh.w	r4, [r1]
  4023d0:	3104      	adds	r1, #4
  4023d2:	17e5      	asrs	r5, r4, #31
  4023d4:	4622      	mov	r2, r4
  4023d6:	462b      	mov	r3, r5
  4023d8:	910f      	str	r1, [sp, #60]	; 0x3c
  4023da:	2a00      	cmp	r2, #0
  4023dc:	f173 0300 	sbcs.w	r3, r3, #0
  4023e0:	db58      	blt.n	402494 <_svfprintf_r+0x760>
  4023e2:	990a      	ldr	r1, [sp, #40]	; 0x28
  4023e4:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4023e8:	1c4a      	adds	r2, r1, #1
  4023ea:	f04f 0301 	mov.w	r3, #1
  4023ee:	f47f ad9b 	bne.w	401f28 <_svfprintf_r+0x1f4>
  4023f2:	ea54 0205 	orrs.w	r2, r4, r5
  4023f6:	f000 81df 	beq.w	4027b8 <_svfprintf_r+0xa84>
  4023fa:	f8cd b01c 	str.w	fp, [sp, #28]
  4023fe:	2b01      	cmp	r3, #1
  402400:	f000 827b 	beq.w	4028fa <_svfprintf_r+0xbc6>
  402404:	2b02      	cmp	r3, #2
  402406:	f040 8206 	bne.w	402816 <_svfprintf_r+0xae2>
  40240a:	9818      	ldr	r0, [sp, #96]	; 0x60
  40240c:	464e      	mov	r6, r9
  40240e:	0923      	lsrs	r3, r4, #4
  402410:	f004 010f 	and.w	r1, r4, #15
  402414:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  402418:	092a      	lsrs	r2, r5, #4
  40241a:	461c      	mov	r4, r3
  40241c:	4615      	mov	r5, r2
  40241e:	5c43      	ldrb	r3, [r0, r1]
  402420:	f806 3d01 	strb.w	r3, [r6, #-1]!
  402424:	ea54 0305 	orrs.w	r3, r4, r5
  402428:	d1f1      	bne.n	40240e <_svfprintf_r+0x6da>
  40242a:	eba9 0306 	sub.w	r3, r9, r6
  40242e:	930e      	str	r3, [sp, #56]	; 0x38
  402430:	e590      	b.n	401f54 <_svfprintf_r+0x220>
  402432:	9311      	str	r3, [sp, #68]	; 0x44
  402434:	2a00      	cmp	r2, #0
  402436:	f040 86a3 	bne.w	403180 <_svfprintf_r+0x144c>
  40243a:	4b7e      	ldr	r3, [pc, #504]	; (402634 <_svfprintf_r+0x900>)
  40243c:	9318      	str	r3, [sp, #96]	; 0x60
  40243e:	f01b 0f20 	tst.w	fp, #32
  402442:	f43f aeef 	beq.w	402224 <_svfprintf_r+0x4f0>
  402446:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402448:	3507      	adds	r5, #7
  40244a:	f025 0307 	bic.w	r3, r5, #7
  40244e:	f103 0208 	add.w	r2, r3, #8
  402452:	f01b 0f01 	tst.w	fp, #1
  402456:	920f      	str	r2, [sp, #60]	; 0x3c
  402458:	e9d3 4500 	ldrd	r4, r5, [r3]
  40245c:	f47f aef4 	bne.w	402248 <_svfprintf_r+0x514>
  402460:	2302      	movs	r3, #2
  402462:	e55a      	b.n	401f1a <_svfprintf_r+0x1e6>
  402464:	9311      	str	r3, [sp, #68]	; 0x44
  402466:	2a00      	cmp	r2, #0
  402468:	f040 8686 	bne.w	403178 <_svfprintf_r+0x1444>
  40246c:	f04b 0b10 	orr.w	fp, fp, #16
  402470:	f01b 0f20 	tst.w	fp, #32
  402474:	d0a1      	beq.n	4023ba <_svfprintf_r+0x686>
  402476:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402478:	3507      	adds	r5, #7
  40247a:	f025 0507 	bic.w	r5, r5, #7
  40247e:	e9d5 2300 	ldrd	r2, r3, [r5]
  402482:	2a00      	cmp	r2, #0
  402484:	f105 0108 	add.w	r1, r5, #8
  402488:	461d      	mov	r5, r3
  40248a:	f173 0300 	sbcs.w	r3, r3, #0
  40248e:	910f      	str	r1, [sp, #60]	; 0x3c
  402490:	4614      	mov	r4, r2
  402492:	daa6      	bge.n	4023e2 <_svfprintf_r+0x6ae>
  402494:	272d      	movs	r7, #45	; 0x2d
  402496:	4264      	negs	r4, r4
  402498:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  40249c:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  4024a0:	2301      	movs	r3, #1
  4024a2:	e53d      	b.n	401f20 <_svfprintf_r+0x1ec>
  4024a4:	9311      	str	r3, [sp, #68]	; 0x44
  4024a6:	2a00      	cmp	r2, #0
  4024a8:	f040 8662 	bne.w	403170 <_svfprintf_r+0x143c>
  4024ac:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4024ae:	3507      	adds	r5, #7
  4024b0:	f025 0307 	bic.w	r3, r5, #7
  4024b4:	f103 0208 	add.w	r2, r3, #8
  4024b8:	920f      	str	r2, [sp, #60]	; 0x3c
  4024ba:	681a      	ldr	r2, [r3, #0]
  4024bc:	9215      	str	r2, [sp, #84]	; 0x54
  4024be:	685b      	ldr	r3, [r3, #4]
  4024c0:	9314      	str	r3, [sp, #80]	; 0x50
  4024c2:	9b14      	ldr	r3, [sp, #80]	; 0x50
  4024c4:	9d15      	ldr	r5, [sp, #84]	; 0x54
  4024c6:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
  4024ca:	4628      	mov	r0, r5
  4024cc:	4621      	mov	r1, r4
  4024ce:	f04f 32ff 	mov.w	r2, #4294967295
  4024d2:	4b59      	ldr	r3, [pc, #356]	; (402638 <_svfprintf_r+0x904>)
  4024d4:	f003 fe48 	bl	406168 <__aeabi_dcmpun>
  4024d8:	2800      	cmp	r0, #0
  4024da:	f040 834a 	bne.w	402b72 <_svfprintf_r+0xe3e>
  4024de:	4628      	mov	r0, r5
  4024e0:	4621      	mov	r1, r4
  4024e2:	f04f 32ff 	mov.w	r2, #4294967295
  4024e6:	4b54      	ldr	r3, [pc, #336]	; (402638 <_svfprintf_r+0x904>)
  4024e8:	f003 fe20 	bl	40612c <__aeabi_dcmple>
  4024ec:	2800      	cmp	r0, #0
  4024ee:	f040 8340 	bne.w	402b72 <_svfprintf_r+0xe3e>
  4024f2:	a815      	add	r0, sp, #84	; 0x54
  4024f4:	c80d      	ldmia	r0, {r0, r2, r3}
  4024f6:	9914      	ldr	r1, [sp, #80]	; 0x50
  4024f8:	f003 fe0e 	bl	406118 <__aeabi_dcmplt>
  4024fc:	2800      	cmp	r0, #0
  4024fe:	f040 8530 	bne.w	402f62 <_svfprintf_r+0x122e>
  402502:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402506:	4e4d      	ldr	r6, [pc, #308]	; (40263c <_svfprintf_r+0x908>)
  402508:	4b4d      	ldr	r3, [pc, #308]	; (402640 <_svfprintf_r+0x90c>)
  40250a:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
  40250e:	9007      	str	r0, [sp, #28]
  402510:	9811      	ldr	r0, [sp, #68]	; 0x44
  402512:	2203      	movs	r2, #3
  402514:	2100      	movs	r1, #0
  402516:	9208      	str	r2, [sp, #32]
  402518:	910a      	str	r1, [sp, #40]	; 0x28
  40251a:	2847      	cmp	r0, #71	; 0x47
  40251c:	bfd8      	it	le
  40251e:	461e      	movle	r6, r3
  402520:	920e      	str	r2, [sp, #56]	; 0x38
  402522:	9112      	str	r1, [sp, #72]	; 0x48
  402524:	e51e      	b.n	401f64 <_svfprintf_r+0x230>
  402526:	f04b 0b08 	orr.w	fp, fp, #8
  40252a:	f89a 3000 	ldrb.w	r3, [sl]
  40252e:	e459      	b.n	401de4 <_svfprintf_r+0xb0>
  402530:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402534:	2300      	movs	r3, #0
  402536:	461c      	mov	r4, r3
  402538:	f81a 3b01 	ldrb.w	r3, [sl], #1
  40253c:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  402540:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  402544:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402548:	2809      	cmp	r0, #9
  40254a:	d9f5      	bls.n	402538 <_svfprintf_r+0x804>
  40254c:	940d      	str	r4, [sp, #52]	; 0x34
  40254e:	e44b      	b.n	401de8 <_svfprintf_r+0xb4>
  402550:	f04b 0b10 	orr.w	fp, fp, #16
  402554:	9311      	str	r3, [sp, #68]	; 0x44
  402556:	f01b 0320 	ands.w	r3, fp, #32
  40255a:	f43f ae1d 	beq.w	402198 <_svfprintf_r+0x464>
  40255e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402560:	3507      	adds	r5, #7
  402562:	f025 0307 	bic.w	r3, r5, #7
  402566:	f103 0208 	add.w	r2, r3, #8
  40256a:	e9d3 4500 	ldrd	r4, r5, [r3]
  40256e:	920f      	str	r2, [sp, #60]	; 0x3c
  402570:	2300      	movs	r3, #0
  402572:	e4d2      	b.n	401f1a <_svfprintf_r+0x1e6>
  402574:	9311      	str	r3, [sp, #68]	; 0x44
  402576:	2a00      	cmp	r2, #0
  402578:	f040 85e7 	bne.w	40314a <_svfprintf_r+0x1416>
  40257c:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40257e:	2a00      	cmp	r2, #0
  402580:	f43f aca3 	beq.w	401eca <_svfprintf_r+0x196>
  402584:	2300      	movs	r3, #0
  402586:	2101      	movs	r1, #1
  402588:	461f      	mov	r7, r3
  40258a:	9108      	str	r1, [sp, #32]
  40258c:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  402590:	f8cd b01c 	str.w	fp, [sp, #28]
  402594:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  402598:	930a      	str	r3, [sp, #40]	; 0x28
  40259a:	9312      	str	r3, [sp, #72]	; 0x48
  40259c:	910e      	str	r1, [sp, #56]	; 0x38
  40259e:	ae28      	add	r6, sp, #160	; 0xa0
  4025a0:	e4e4      	b.n	401f6c <_svfprintf_r+0x238>
  4025a2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4025a4:	e534      	b.n	402010 <_svfprintf_r+0x2dc>
  4025a6:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4025a8:	2b65      	cmp	r3, #101	; 0x65
  4025aa:	f340 80a7 	ble.w	4026fc <_svfprintf_r+0x9c8>
  4025ae:	a815      	add	r0, sp, #84	; 0x54
  4025b0:	c80d      	ldmia	r0, {r0, r2, r3}
  4025b2:	9914      	ldr	r1, [sp, #80]	; 0x50
  4025b4:	f003 fda6 	bl	406104 <__aeabi_dcmpeq>
  4025b8:	2800      	cmp	r0, #0
  4025ba:	f000 8150 	beq.w	40285e <_svfprintf_r+0xb2a>
  4025be:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4025c0:	4a20      	ldr	r2, [pc, #128]	; (402644 <_svfprintf_r+0x910>)
  4025c2:	f8c8 2000 	str.w	r2, [r8]
  4025c6:	3301      	adds	r3, #1
  4025c8:	3401      	adds	r4, #1
  4025ca:	2201      	movs	r2, #1
  4025cc:	2b07      	cmp	r3, #7
  4025ce:	9427      	str	r4, [sp, #156]	; 0x9c
  4025d0:	9326      	str	r3, [sp, #152]	; 0x98
  4025d2:	f8c8 2004 	str.w	r2, [r8, #4]
  4025d6:	f300 836a 	bgt.w	402cae <_svfprintf_r+0xf7a>
  4025da:	f108 0808 	add.w	r8, r8, #8
  4025de:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  4025e0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  4025e2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4025e4:	4293      	cmp	r3, r2
  4025e6:	db03      	blt.n	4025f0 <_svfprintf_r+0x8bc>
  4025e8:	9b07      	ldr	r3, [sp, #28]
  4025ea:	07dd      	lsls	r5, r3, #31
  4025ec:	f57f ad82 	bpl.w	4020f4 <_svfprintf_r+0x3c0>
  4025f0:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4025f2:	9919      	ldr	r1, [sp, #100]	; 0x64
  4025f4:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  4025f6:	f8c8 2000 	str.w	r2, [r8]
  4025fa:	3301      	adds	r3, #1
  4025fc:	440c      	add	r4, r1
  4025fe:	2b07      	cmp	r3, #7
  402600:	f8c8 1004 	str.w	r1, [r8, #4]
  402604:	9427      	str	r4, [sp, #156]	; 0x9c
  402606:	9326      	str	r3, [sp, #152]	; 0x98
  402608:	f300 839e 	bgt.w	402d48 <_svfprintf_r+0x1014>
  40260c:	f108 0808 	add.w	r8, r8, #8
  402610:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402612:	1e5e      	subs	r6, r3, #1
  402614:	2e00      	cmp	r6, #0
  402616:	f77f ad6d 	ble.w	4020f4 <_svfprintf_r+0x3c0>
  40261a:	2e10      	cmp	r6, #16
  40261c:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40261e:	4d0a      	ldr	r5, [pc, #40]	; (402648 <_svfprintf_r+0x914>)
  402620:	f340 81f5 	ble.w	402a0e <_svfprintf_r+0xcda>
  402624:	4622      	mov	r2, r4
  402626:	2710      	movs	r7, #16
  402628:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  40262c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  40262e:	e013      	b.n	402658 <_svfprintf_r+0x924>
  402630:	00406c90 	.word	0x00406c90
  402634:	00406c7c 	.word	0x00406c7c
  402638:	7fefffff 	.word	0x7fefffff
  40263c:	00406c70 	.word	0x00406c70
  402640:	00406c6c 	.word	0x00406c6c
  402644:	00406cac 	.word	0x00406cac
  402648:	00406cc0 	.word	0x00406cc0
  40264c:	f108 0808 	add.w	r8, r8, #8
  402650:	3e10      	subs	r6, #16
  402652:	2e10      	cmp	r6, #16
  402654:	f340 81da 	ble.w	402a0c <_svfprintf_r+0xcd8>
  402658:	3301      	adds	r3, #1
  40265a:	3210      	adds	r2, #16
  40265c:	2b07      	cmp	r3, #7
  40265e:	9227      	str	r2, [sp, #156]	; 0x9c
  402660:	9326      	str	r3, [sp, #152]	; 0x98
  402662:	e888 00a0 	stmia.w	r8, {r5, r7}
  402666:	ddf1      	ble.n	40264c <_svfprintf_r+0x918>
  402668:	aa25      	add	r2, sp, #148	; 0x94
  40266a:	4621      	mov	r1, r4
  40266c:	4658      	mov	r0, fp
  40266e:	f002 fcb5 	bl	404fdc <__ssprint_r>
  402672:	2800      	cmp	r0, #0
  402674:	f47f ac30 	bne.w	401ed8 <_svfprintf_r+0x1a4>
  402678:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  40267a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40267c:	46c8      	mov	r8, r9
  40267e:	e7e7      	b.n	402650 <_svfprintf_r+0x91c>
  402680:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  402682:	9a08      	ldr	r2, [sp, #32]
  402684:	1a9f      	subs	r7, r3, r2
  402686:	2f00      	cmp	r7, #0
  402688:	f77f ace5 	ble.w	402056 <_svfprintf_r+0x322>
  40268c:	2f10      	cmp	r7, #16
  40268e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402690:	4db6      	ldr	r5, [pc, #728]	; (40296c <_svfprintf_r+0xc38>)
  402692:	dd27      	ble.n	4026e4 <_svfprintf_r+0x9b0>
  402694:	4642      	mov	r2, r8
  402696:	4621      	mov	r1, r4
  402698:	46b0      	mov	r8, r6
  40269a:	f04f 0b10 	mov.w	fp, #16
  40269e:	462e      	mov	r6, r5
  4026a0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4026a2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4026a4:	e004      	b.n	4026b0 <_svfprintf_r+0x97c>
  4026a6:	3f10      	subs	r7, #16
  4026a8:	2f10      	cmp	r7, #16
  4026aa:	f102 0208 	add.w	r2, r2, #8
  4026ae:	dd15      	ble.n	4026dc <_svfprintf_r+0x9a8>
  4026b0:	3301      	adds	r3, #1
  4026b2:	3110      	adds	r1, #16
  4026b4:	2b07      	cmp	r3, #7
  4026b6:	9127      	str	r1, [sp, #156]	; 0x9c
  4026b8:	9326      	str	r3, [sp, #152]	; 0x98
  4026ba:	e882 0840 	stmia.w	r2, {r6, fp}
  4026be:	ddf2      	ble.n	4026a6 <_svfprintf_r+0x972>
  4026c0:	aa25      	add	r2, sp, #148	; 0x94
  4026c2:	4629      	mov	r1, r5
  4026c4:	4620      	mov	r0, r4
  4026c6:	f002 fc89 	bl	404fdc <__ssprint_r>
  4026ca:	2800      	cmp	r0, #0
  4026cc:	f47f ac04 	bne.w	401ed8 <_svfprintf_r+0x1a4>
  4026d0:	3f10      	subs	r7, #16
  4026d2:	2f10      	cmp	r7, #16
  4026d4:	9927      	ldr	r1, [sp, #156]	; 0x9c
  4026d6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4026d8:	464a      	mov	r2, r9
  4026da:	dce9      	bgt.n	4026b0 <_svfprintf_r+0x97c>
  4026dc:	4635      	mov	r5, r6
  4026de:	460c      	mov	r4, r1
  4026e0:	4646      	mov	r6, r8
  4026e2:	4690      	mov	r8, r2
  4026e4:	3301      	adds	r3, #1
  4026e6:	443c      	add	r4, r7
  4026e8:	2b07      	cmp	r3, #7
  4026ea:	9427      	str	r4, [sp, #156]	; 0x9c
  4026ec:	9326      	str	r3, [sp, #152]	; 0x98
  4026ee:	e888 00a0 	stmia.w	r8, {r5, r7}
  4026f2:	f300 8232 	bgt.w	402b5a <_svfprintf_r+0xe26>
  4026f6:	f108 0808 	add.w	r8, r8, #8
  4026fa:	e4ac      	b.n	402056 <_svfprintf_r+0x322>
  4026fc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4026fe:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402700:	2b01      	cmp	r3, #1
  402702:	f340 81fe 	ble.w	402b02 <_svfprintf_r+0xdce>
  402706:	3701      	adds	r7, #1
  402708:	3401      	adds	r4, #1
  40270a:	2301      	movs	r3, #1
  40270c:	2f07      	cmp	r7, #7
  40270e:	9427      	str	r4, [sp, #156]	; 0x9c
  402710:	9726      	str	r7, [sp, #152]	; 0x98
  402712:	f8c8 6000 	str.w	r6, [r8]
  402716:	f8c8 3004 	str.w	r3, [r8, #4]
  40271a:	f300 8203 	bgt.w	402b24 <_svfprintf_r+0xdf0>
  40271e:	f108 0808 	add.w	r8, r8, #8
  402722:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402724:	9b1a      	ldr	r3, [sp, #104]	; 0x68
  402726:	f8c8 3000 	str.w	r3, [r8]
  40272a:	3701      	adds	r7, #1
  40272c:	4414      	add	r4, r2
  40272e:	2f07      	cmp	r7, #7
  402730:	9427      	str	r4, [sp, #156]	; 0x9c
  402732:	9726      	str	r7, [sp, #152]	; 0x98
  402734:	f8c8 2004 	str.w	r2, [r8, #4]
  402738:	f300 8200 	bgt.w	402b3c <_svfprintf_r+0xe08>
  40273c:	f108 0808 	add.w	r8, r8, #8
  402740:	a815      	add	r0, sp, #84	; 0x54
  402742:	c80d      	ldmia	r0, {r0, r2, r3}
  402744:	9914      	ldr	r1, [sp, #80]	; 0x50
  402746:	f003 fcdd 	bl	406104 <__aeabi_dcmpeq>
  40274a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40274c:	2800      	cmp	r0, #0
  40274e:	f040 8101 	bne.w	402954 <_svfprintf_r+0xc20>
  402752:	3b01      	subs	r3, #1
  402754:	3701      	adds	r7, #1
  402756:	3601      	adds	r6, #1
  402758:	441c      	add	r4, r3
  40275a:	2f07      	cmp	r7, #7
  40275c:	9726      	str	r7, [sp, #152]	; 0x98
  40275e:	9427      	str	r4, [sp, #156]	; 0x9c
  402760:	f8c8 6000 	str.w	r6, [r8]
  402764:	f8c8 3004 	str.w	r3, [r8, #4]
  402768:	f300 8127 	bgt.w	4029ba <_svfprintf_r+0xc86>
  40276c:	f108 0808 	add.w	r8, r8, #8
  402770:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
  402772:	f8c8 2004 	str.w	r2, [r8, #4]
  402776:	3701      	adds	r7, #1
  402778:	4414      	add	r4, r2
  40277a:	ab21      	add	r3, sp, #132	; 0x84
  40277c:	2f07      	cmp	r7, #7
  40277e:	9427      	str	r4, [sp, #156]	; 0x9c
  402780:	9726      	str	r7, [sp, #152]	; 0x98
  402782:	f8c8 3000 	str.w	r3, [r8]
  402786:	f77f acb3 	ble.w	4020f0 <_svfprintf_r+0x3bc>
  40278a:	aa25      	add	r2, sp, #148	; 0x94
  40278c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40278e:	980c      	ldr	r0, [sp, #48]	; 0x30
  402790:	f002 fc24 	bl	404fdc <__ssprint_r>
  402794:	2800      	cmp	r0, #0
  402796:	f47f ab9f 	bne.w	401ed8 <_svfprintf_r+0x1a4>
  40279a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40279c:	46c8      	mov	r8, r9
  40279e:	e4a9      	b.n	4020f4 <_svfprintf_r+0x3c0>
  4027a0:	aa25      	add	r2, sp, #148	; 0x94
  4027a2:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4027a4:	980c      	ldr	r0, [sp, #48]	; 0x30
  4027a6:	f002 fc19 	bl	404fdc <__ssprint_r>
  4027aa:	2800      	cmp	r0, #0
  4027ac:	f43f aceb 	beq.w	402186 <_svfprintf_r+0x452>
  4027b0:	f7ff bb92 	b.w	401ed8 <_svfprintf_r+0x1a4>
  4027b4:	f8dd b01c 	ldr.w	fp, [sp, #28]
  4027b8:	2b01      	cmp	r3, #1
  4027ba:	f000 8134 	beq.w	402a26 <_svfprintf_r+0xcf2>
  4027be:	2b02      	cmp	r3, #2
  4027c0:	d125      	bne.n	40280e <_svfprintf_r+0xada>
  4027c2:	f8cd b01c 	str.w	fp, [sp, #28]
  4027c6:	2400      	movs	r4, #0
  4027c8:	2500      	movs	r5, #0
  4027ca:	e61e      	b.n	40240a <_svfprintf_r+0x6d6>
  4027cc:	aa25      	add	r2, sp, #148	; 0x94
  4027ce:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4027d0:	980c      	ldr	r0, [sp, #48]	; 0x30
  4027d2:	f002 fc03 	bl	404fdc <__ssprint_r>
  4027d6:	2800      	cmp	r0, #0
  4027d8:	f47f ab7e 	bne.w	401ed8 <_svfprintf_r+0x1a4>
  4027dc:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4027de:	46c8      	mov	r8, r9
  4027e0:	e475      	b.n	4020ce <_svfprintf_r+0x39a>
  4027e2:	aa25      	add	r2, sp, #148	; 0x94
  4027e4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4027e6:	980c      	ldr	r0, [sp, #48]	; 0x30
  4027e8:	f002 fbf8 	bl	404fdc <__ssprint_r>
  4027ec:	2800      	cmp	r0, #0
  4027ee:	f47f ab73 	bne.w	401ed8 <_svfprintf_r+0x1a4>
  4027f2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4027f4:	46c8      	mov	r8, r9
  4027f6:	e41b      	b.n	402030 <_svfprintf_r+0x2fc>
  4027f8:	aa25      	add	r2, sp, #148	; 0x94
  4027fa:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4027fc:	980c      	ldr	r0, [sp, #48]	; 0x30
  4027fe:	f002 fbed 	bl	404fdc <__ssprint_r>
  402802:	2800      	cmp	r0, #0
  402804:	f47f ab68 	bne.w	401ed8 <_svfprintf_r+0x1a4>
  402808:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40280a:	46c8      	mov	r8, r9
  40280c:	e420      	b.n	402050 <_svfprintf_r+0x31c>
  40280e:	f8cd b01c 	str.w	fp, [sp, #28]
  402812:	2400      	movs	r4, #0
  402814:	2500      	movs	r5, #0
  402816:	4649      	mov	r1, r9
  402818:	e000      	b.n	40281c <_svfprintf_r+0xae8>
  40281a:	4631      	mov	r1, r6
  40281c:	08e2      	lsrs	r2, r4, #3
  40281e:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  402822:	08e8      	lsrs	r0, r5, #3
  402824:	f004 0307 	and.w	r3, r4, #7
  402828:	4605      	mov	r5, r0
  40282a:	4614      	mov	r4, r2
  40282c:	3330      	adds	r3, #48	; 0x30
  40282e:	ea54 0205 	orrs.w	r2, r4, r5
  402832:	f801 3c01 	strb.w	r3, [r1, #-1]
  402836:	f101 36ff 	add.w	r6, r1, #4294967295
  40283a:	d1ee      	bne.n	40281a <_svfprintf_r+0xae6>
  40283c:	9a07      	ldr	r2, [sp, #28]
  40283e:	07d2      	lsls	r2, r2, #31
  402840:	f57f adf3 	bpl.w	40242a <_svfprintf_r+0x6f6>
  402844:	2b30      	cmp	r3, #48	; 0x30
  402846:	f43f adf0 	beq.w	40242a <_svfprintf_r+0x6f6>
  40284a:	3902      	subs	r1, #2
  40284c:	2330      	movs	r3, #48	; 0x30
  40284e:	f806 3c01 	strb.w	r3, [r6, #-1]
  402852:	eba9 0301 	sub.w	r3, r9, r1
  402856:	930e      	str	r3, [sp, #56]	; 0x38
  402858:	460e      	mov	r6, r1
  40285a:	f7ff bb7b 	b.w	401f54 <_svfprintf_r+0x220>
  40285e:	991f      	ldr	r1, [sp, #124]	; 0x7c
  402860:	2900      	cmp	r1, #0
  402862:	f340 822e 	ble.w	402cc2 <_svfprintf_r+0xf8e>
  402866:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402868:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  40286a:	4293      	cmp	r3, r2
  40286c:	bfa8      	it	ge
  40286e:	4613      	movge	r3, r2
  402870:	2b00      	cmp	r3, #0
  402872:	461f      	mov	r7, r3
  402874:	dd0d      	ble.n	402892 <_svfprintf_r+0xb5e>
  402876:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402878:	f8c8 6000 	str.w	r6, [r8]
  40287c:	3301      	adds	r3, #1
  40287e:	443c      	add	r4, r7
  402880:	2b07      	cmp	r3, #7
  402882:	9427      	str	r4, [sp, #156]	; 0x9c
  402884:	f8c8 7004 	str.w	r7, [r8, #4]
  402888:	9326      	str	r3, [sp, #152]	; 0x98
  40288a:	f300 831f 	bgt.w	402ecc <_svfprintf_r+0x1198>
  40288e:	f108 0808 	add.w	r8, r8, #8
  402892:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402894:	2f00      	cmp	r7, #0
  402896:	bfa8      	it	ge
  402898:	1bdb      	subge	r3, r3, r7
  40289a:	2b00      	cmp	r3, #0
  40289c:	461f      	mov	r7, r3
  40289e:	f340 80d6 	ble.w	402a4e <_svfprintf_r+0xd1a>
  4028a2:	2f10      	cmp	r7, #16
  4028a4:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4028a6:	4d31      	ldr	r5, [pc, #196]	; (40296c <_svfprintf_r+0xc38>)
  4028a8:	f340 81ed 	ble.w	402c86 <_svfprintf_r+0xf52>
  4028ac:	4642      	mov	r2, r8
  4028ae:	4621      	mov	r1, r4
  4028b0:	46b0      	mov	r8, r6
  4028b2:	f04f 0b10 	mov.w	fp, #16
  4028b6:	462e      	mov	r6, r5
  4028b8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4028ba:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4028bc:	e004      	b.n	4028c8 <_svfprintf_r+0xb94>
  4028be:	3208      	adds	r2, #8
  4028c0:	3f10      	subs	r7, #16
  4028c2:	2f10      	cmp	r7, #16
  4028c4:	f340 81db 	ble.w	402c7e <_svfprintf_r+0xf4a>
  4028c8:	3301      	adds	r3, #1
  4028ca:	3110      	adds	r1, #16
  4028cc:	2b07      	cmp	r3, #7
  4028ce:	9127      	str	r1, [sp, #156]	; 0x9c
  4028d0:	9326      	str	r3, [sp, #152]	; 0x98
  4028d2:	e882 0840 	stmia.w	r2, {r6, fp}
  4028d6:	ddf2      	ble.n	4028be <_svfprintf_r+0xb8a>
  4028d8:	aa25      	add	r2, sp, #148	; 0x94
  4028da:	4629      	mov	r1, r5
  4028dc:	4620      	mov	r0, r4
  4028de:	f002 fb7d 	bl	404fdc <__ssprint_r>
  4028e2:	2800      	cmp	r0, #0
  4028e4:	f47f aaf8 	bne.w	401ed8 <_svfprintf_r+0x1a4>
  4028e8:	9927      	ldr	r1, [sp, #156]	; 0x9c
  4028ea:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4028ec:	464a      	mov	r2, r9
  4028ee:	e7e7      	b.n	4028c0 <_svfprintf_r+0xb8c>
  4028f0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4028f2:	930e      	str	r3, [sp, #56]	; 0x38
  4028f4:	464e      	mov	r6, r9
  4028f6:	f7ff bb2d 	b.w	401f54 <_svfprintf_r+0x220>
  4028fa:	2d00      	cmp	r5, #0
  4028fc:	bf08      	it	eq
  4028fe:	2c0a      	cmpeq	r4, #10
  402900:	f0c0 808f 	bcc.w	402a22 <_svfprintf_r+0xcee>
  402904:	464e      	mov	r6, r9
  402906:	4620      	mov	r0, r4
  402908:	4629      	mov	r1, r5
  40290a:	220a      	movs	r2, #10
  40290c:	2300      	movs	r3, #0
  40290e:	f7fe ffed 	bl	4018ec <__aeabi_uldivmod>
  402912:	3230      	adds	r2, #48	; 0x30
  402914:	f806 2d01 	strb.w	r2, [r6, #-1]!
  402918:	4620      	mov	r0, r4
  40291a:	4629      	mov	r1, r5
  40291c:	2300      	movs	r3, #0
  40291e:	220a      	movs	r2, #10
  402920:	f7fe ffe4 	bl	4018ec <__aeabi_uldivmod>
  402924:	4604      	mov	r4, r0
  402926:	460d      	mov	r5, r1
  402928:	ea54 0305 	orrs.w	r3, r4, r5
  40292c:	d1eb      	bne.n	402906 <_svfprintf_r+0xbd2>
  40292e:	eba9 0306 	sub.w	r3, r9, r6
  402932:	930e      	str	r3, [sp, #56]	; 0x38
  402934:	f7ff bb0e 	b.w	401f54 <_svfprintf_r+0x220>
  402938:	aa25      	add	r2, sp, #148	; 0x94
  40293a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40293c:	980c      	ldr	r0, [sp, #48]	; 0x30
  40293e:	f002 fb4d 	bl	404fdc <__ssprint_r>
  402942:	2800      	cmp	r0, #0
  402944:	f47f aac8 	bne.w	401ed8 <_svfprintf_r+0x1a4>
  402948:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  40294c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40294e:	46c8      	mov	r8, r9
  402950:	f7ff bb5e 	b.w	402010 <_svfprintf_r+0x2dc>
  402954:	1e5e      	subs	r6, r3, #1
  402956:	2e00      	cmp	r6, #0
  402958:	f77f af0a 	ble.w	402770 <_svfprintf_r+0xa3c>
  40295c:	2e10      	cmp	r6, #16
  40295e:	4d03      	ldr	r5, [pc, #12]	; (40296c <_svfprintf_r+0xc38>)
  402960:	dd22      	ble.n	4029a8 <_svfprintf_r+0xc74>
  402962:	4622      	mov	r2, r4
  402964:	f04f 0b10 	mov.w	fp, #16
  402968:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40296a:	e006      	b.n	40297a <_svfprintf_r+0xc46>
  40296c:	00406cc0 	.word	0x00406cc0
  402970:	3e10      	subs	r6, #16
  402972:	2e10      	cmp	r6, #16
  402974:	f108 0808 	add.w	r8, r8, #8
  402978:	dd15      	ble.n	4029a6 <_svfprintf_r+0xc72>
  40297a:	3701      	adds	r7, #1
  40297c:	3210      	adds	r2, #16
  40297e:	2f07      	cmp	r7, #7
  402980:	9227      	str	r2, [sp, #156]	; 0x9c
  402982:	9726      	str	r7, [sp, #152]	; 0x98
  402984:	e888 0820 	stmia.w	r8, {r5, fp}
  402988:	ddf2      	ble.n	402970 <_svfprintf_r+0xc3c>
  40298a:	aa25      	add	r2, sp, #148	; 0x94
  40298c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40298e:	4620      	mov	r0, r4
  402990:	f002 fb24 	bl	404fdc <__ssprint_r>
  402994:	2800      	cmp	r0, #0
  402996:	f47f aa9f 	bne.w	401ed8 <_svfprintf_r+0x1a4>
  40299a:	3e10      	subs	r6, #16
  40299c:	2e10      	cmp	r6, #16
  40299e:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4029a0:	9f26      	ldr	r7, [sp, #152]	; 0x98
  4029a2:	46c8      	mov	r8, r9
  4029a4:	dce9      	bgt.n	40297a <_svfprintf_r+0xc46>
  4029a6:	4614      	mov	r4, r2
  4029a8:	3701      	adds	r7, #1
  4029aa:	4434      	add	r4, r6
  4029ac:	2f07      	cmp	r7, #7
  4029ae:	9427      	str	r4, [sp, #156]	; 0x9c
  4029b0:	9726      	str	r7, [sp, #152]	; 0x98
  4029b2:	e888 0060 	stmia.w	r8, {r5, r6}
  4029b6:	f77f aed9 	ble.w	40276c <_svfprintf_r+0xa38>
  4029ba:	aa25      	add	r2, sp, #148	; 0x94
  4029bc:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4029be:	980c      	ldr	r0, [sp, #48]	; 0x30
  4029c0:	f002 fb0c 	bl	404fdc <__ssprint_r>
  4029c4:	2800      	cmp	r0, #0
  4029c6:	f47f aa87 	bne.w	401ed8 <_svfprintf_r+0x1a4>
  4029ca:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4029cc:	9f26      	ldr	r7, [sp, #152]	; 0x98
  4029ce:	46c8      	mov	r8, r9
  4029d0:	e6ce      	b.n	402770 <_svfprintf_r+0xa3c>
  4029d2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4029d4:	6814      	ldr	r4, [r2, #0]
  4029d6:	4613      	mov	r3, r2
  4029d8:	3304      	adds	r3, #4
  4029da:	17e5      	asrs	r5, r4, #31
  4029dc:	930f      	str	r3, [sp, #60]	; 0x3c
  4029de:	4622      	mov	r2, r4
  4029e0:	462b      	mov	r3, r5
  4029e2:	e4fa      	b.n	4023da <_svfprintf_r+0x6a6>
  4029e4:	3204      	adds	r2, #4
  4029e6:	681c      	ldr	r4, [r3, #0]
  4029e8:	920f      	str	r2, [sp, #60]	; 0x3c
  4029ea:	2301      	movs	r3, #1
  4029ec:	2500      	movs	r5, #0
  4029ee:	f7ff ba94 	b.w	401f1a <_svfprintf_r+0x1e6>
  4029f2:	681c      	ldr	r4, [r3, #0]
  4029f4:	3304      	adds	r3, #4
  4029f6:	930f      	str	r3, [sp, #60]	; 0x3c
  4029f8:	2500      	movs	r5, #0
  4029fa:	e421      	b.n	402240 <_svfprintf_r+0x50c>
  4029fc:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4029fe:	460a      	mov	r2, r1
  402a00:	3204      	adds	r2, #4
  402a02:	680c      	ldr	r4, [r1, #0]
  402a04:	920f      	str	r2, [sp, #60]	; 0x3c
  402a06:	2500      	movs	r5, #0
  402a08:	f7ff ba87 	b.w	401f1a <_svfprintf_r+0x1e6>
  402a0c:	4614      	mov	r4, r2
  402a0e:	3301      	adds	r3, #1
  402a10:	4434      	add	r4, r6
  402a12:	2b07      	cmp	r3, #7
  402a14:	9427      	str	r4, [sp, #156]	; 0x9c
  402a16:	9326      	str	r3, [sp, #152]	; 0x98
  402a18:	e888 0060 	stmia.w	r8, {r5, r6}
  402a1c:	f77f ab68 	ble.w	4020f0 <_svfprintf_r+0x3bc>
  402a20:	e6b3      	b.n	40278a <_svfprintf_r+0xa56>
  402a22:	f8dd b01c 	ldr.w	fp, [sp, #28]
  402a26:	f8cd b01c 	str.w	fp, [sp, #28]
  402a2a:	ae42      	add	r6, sp, #264	; 0x108
  402a2c:	3430      	adds	r4, #48	; 0x30
  402a2e:	2301      	movs	r3, #1
  402a30:	f806 4d41 	strb.w	r4, [r6, #-65]!
  402a34:	930e      	str	r3, [sp, #56]	; 0x38
  402a36:	f7ff ba8d 	b.w	401f54 <_svfprintf_r+0x220>
  402a3a:	aa25      	add	r2, sp, #148	; 0x94
  402a3c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402a3e:	980c      	ldr	r0, [sp, #48]	; 0x30
  402a40:	f002 facc 	bl	404fdc <__ssprint_r>
  402a44:	2800      	cmp	r0, #0
  402a46:	f47f aa47 	bne.w	401ed8 <_svfprintf_r+0x1a4>
  402a4a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402a4c:	46c8      	mov	r8, r9
  402a4e:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  402a50:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402a52:	429a      	cmp	r2, r3
  402a54:	db44      	blt.n	402ae0 <_svfprintf_r+0xdac>
  402a56:	9b07      	ldr	r3, [sp, #28]
  402a58:	07d9      	lsls	r1, r3, #31
  402a5a:	d441      	bmi.n	402ae0 <_svfprintf_r+0xdac>
  402a5c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402a5e:	9812      	ldr	r0, [sp, #72]	; 0x48
  402a60:	1a9a      	subs	r2, r3, r2
  402a62:	1a1d      	subs	r5, r3, r0
  402a64:	4295      	cmp	r5, r2
  402a66:	bfa8      	it	ge
  402a68:	4615      	movge	r5, r2
  402a6a:	2d00      	cmp	r5, #0
  402a6c:	dd0e      	ble.n	402a8c <_svfprintf_r+0xd58>
  402a6e:	9926      	ldr	r1, [sp, #152]	; 0x98
  402a70:	f8c8 5004 	str.w	r5, [r8, #4]
  402a74:	3101      	adds	r1, #1
  402a76:	4406      	add	r6, r0
  402a78:	442c      	add	r4, r5
  402a7a:	2907      	cmp	r1, #7
  402a7c:	f8c8 6000 	str.w	r6, [r8]
  402a80:	9427      	str	r4, [sp, #156]	; 0x9c
  402a82:	9126      	str	r1, [sp, #152]	; 0x98
  402a84:	f300 823b 	bgt.w	402efe <_svfprintf_r+0x11ca>
  402a88:	f108 0808 	add.w	r8, r8, #8
  402a8c:	2d00      	cmp	r5, #0
  402a8e:	bfac      	ite	ge
  402a90:	1b56      	subge	r6, r2, r5
  402a92:	4616      	movlt	r6, r2
  402a94:	2e00      	cmp	r6, #0
  402a96:	f77f ab2d 	ble.w	4020f4 <_svfprintf_r+0x3c0>
  402a9a:	2e10      	cmp	r6, #16
  402a9c:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402a9e:	4db0      	ldr	r5, [pc, #704]	; (402d60 <_svfprintf_r+0x102c>)
  402aa0:	ddb5      	ble.n	402a0e <_svfprintf_r+0xcda>
  402aa2:	4622      	mov	r2, r4
  402aa4:	2710      	movs	r7, #16
  402aa6:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  402aaa:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  402aac:	e004      	b.n	402ab8 <_svfprintf_r+0xd84>
  402aae:	f108 0808 	add.w	r8, r8, #8
  402ab2:	3e10      	subs	r6, #16
  402ab4:	2e10      	cmp	r6, #16
  402ab6:	dda9      	ble.n	402a0c <_svfprintf_r+0xcd8>
  402ab8:	3301      	adds	r3, #1
  402aba:	3210      	adds	r2, #16
  402abc:	2b07      	cmp	r3, #7
  402abe:	9227      	str	r2, [sp, #156]	; 0x9c
  402ac0:	9326      	str	r3, [sp, #152]	; 0x98
  402ac2:	e888 00a0 	stmia.w	r8, {r5, r7}
  402ac6:	ddf2      	ble.n	402aae <_svfprintf_r+0xd7a>
  402ac8:	aa25      	add	r2, sp, #148	; 0x94
  402aca:	4621      	mov	r1, r4
  402acc:	4658      	mov	r0, fp
  402ace:	f002 fa85 	bl	404fdc <__ssprint_r>
  402ad2:	2800      	cmp	r0, #0
  402ad4:	f47f aa00 	bne.w	401ed8 <_svfprintf_r+0x1a4>
  402ad8:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402ada:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402adc:	46c8      	mov	r8, r9
  402ade:	e7e8      	b.n	402ab2 <_svfprintf_r+0xd7e>
  402ae0:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402ae2:	9819      	ldr	r0, [sp, #100]	; 0x64
  402ae4:	991a      	ldr	r1, [sp, #104]	; 0x68
  402ae6:	f8c8 1000 	str.w	r1, [r8]
  402aea:	3301      	adds	r3, #1
  402aec:	4404      	add	r4, r0
  402aee:	2b07      	cmp	r3, #7
  402af0:	9427      	str	r4, [sp, #156]	; 0x9c
  402af2:	f8c8 0004 	str.w	r0, [r8, #4]
  402af6:	9326      	str	r3, [sp, #152]	; 0x98
  402af8:	f300 81f5 	bgt.w	402ee6 <_svfprintf_r+0x11b2>
  402afc:	f108 0808 	add.w	r8, r8, #8
  402b00:	e7ac      	b.n	402a5c <_svfprintf_r+0xd28>
  402b02:	9b07      	ldr	r3, [sp, #28]
  402b04:	07da      	lsls	r2, r3, #31
  402b06:	f53f adfe 	bmi.w	402706 <_svfprintf_r+0x9d2>
  402b0a:	3701      	adds	r7, #1
  402b0c:	3401      	adds	r4, #1
  402b0e:	2301      	movs	r3, #1
  402b10:	2f07      	cmp	r7, #7
  402b12:	9427      	str	r4, [sp, #156]	; 0x9c
  402b14:	9726      	str	r7, [sp, #152]	; 0x98
  402b16:	f8c8 6000 	str.w	r6, [r8]
  402b1a:	f8c8 3004 	str.w	r3, [r8, #4]
  402b1e:	f77f ae25 	ble.w	40276c <_svfprintf_r+0xa38>
  402b22:	e74a      	b.n	4029ba <_svfprintf_r+0xc86>
  402b24:	aa25      	add	r2, sp, #148	; 0x94
  402b26:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402b28:	980c      	ldr	r0, [sp, #48]	; 0x30
  402b2a:	f002 fa57 	bl	404fdc <__ssprint_r>
  402b2e:	2800      	cmp	r0, #0
  402b30:	f47f a9d2 	bne.w	401ed8 <_svfprintf_r+0x1a4>
  402b34:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402b36:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402b38:	46c8      	mov	r8, r9
  402b3a:	e5f2      	b.n	402722 <_svfprintf_r+0x9ee>
  402b3c:	aa25      	add	r2, sp, #148	; 0x94
  402b3e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402b40:	980c      	ldr	r0, [sp, #48]	; 0x30
  402b42:	f002 fa4b 	bl	404fdc <__ssprint_r>
  402b46:	2800      	cmp	r0, #0
  402b48:	f47f a9c6 	bne.w	401ed8 <_svfprintf_r+0x1a4>
  402b4c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402b4e:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402b50:	46c8      	mov	r8, r9
  402b52:	e5f5      	b.n	402740 <_svfprintf_r+0xa0c>
  402b54:	464e      	mov	r6, r9
  402b56:	f7ff b9fd 	b.w	401f54 <_svfprintf_r+0x220>
  402b5a:	aa25      	add	r2, sp, #148	; 0x94
  402b5c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402b5e:	980c      	ldr	r0, [sp, #48]	; 0x30
  402b60:	f002 fa3c 	bl	404fdc <__ssprint_r>
  402b64:	2800      	cmp	r0, #0
  402b66:	f47f a9b7 	bne.w	401ed8 <_svfprintf_r+0x1a4>
  402b6a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402b6c:	46c8      	mov	r8, r9
  402b6e:	f7ff ba72 	b.w	402056 <_svfprintf_r+0x322>
  402b72:	9c15      	ldr	r4, [sp, #84]	; 0x54
  402b74:	4622      	mov	r2, r4
  402b76:	4620      	mov	r0, r4
  402b78:	9c14      	ldr	r4, [sp, #80]	; 0x50
  402b7a:	4623      	mov	r3, r4
  402b7c:	4621      	mov	r1, r4
  402b7e:	f003 faf3 	bl	406168 <__aeabi_dcmpun>
  402b82:	2800      	cmp	r0, #0
  402b84:	f040 8286 	bne.w	403094 <_svfprintf_r+0x1360>
  402b88:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402b8a:	3301      	adds	r3, #1
  402b8c:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402b8e:	f023 0320 	bic.w	r3, r3, #32
  402b92:	930e      	str	r3, [sp, #56]	; 0x38
  402b94:	f000 81e2 	beq.w	402f5c <_svfprintf_r+0x1228>
  402b98:	2b47      	cmp	r3, #71	; 0x47
  402b9a:	f000 811e 	beq.w	402dda <_svfprintf_r+0x10a6>
  402b9e:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
  402ba2:	9307      	str	r3, [sp, #28]
  402ba4:	9b14      	ldr	r3, [sp, #80]	; 0x50
  402ba6:	1e1f      	subs	r7, r3, #0
  402ba8:	9b15      	ldr	r3, [sp, #84]	; 0x54
  402baa:	9308      	str	r3, [sp, #32]
  402bac:	bfbb      	ittet	lt
  402bae:	463b      	movlt	r3, r7
  402bb0:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
  402bb4:	2300      	movge	r3, #0
  402bb6:	232d      	movlt	r3, #45	; 0x2d
  402bb8:	9310      	str	r3, [sp, #64]	; 0x40
  402bba:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402bbc:	2b66      	cmp	r3, #102	; 0x66
  402bbe:	f000 81bb 	beq.w	402f38 <_svfprintf_r+0x1204>
  402bc2:	2b46      	cmp	r3, #70	; 0x46
  402bc4:	f000 80df 	beq.w	402d86 <_svfprintf_r+0x1052>
  402bc8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402bca:	9a08      	ldr	r2, [sp, #32]
  402bcc:	2b45      	cmp	r3, #69	; 0x45
  402bce:	bf0c      	ite	eq
  402bd0:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
  402bd2:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
  402bd4:	a823      	add	r0, sp, #140	; 0x8c
  402bd6:	a920      	add	r1, sp, #128	; 0x80
  402bd8:	bf08      	it	eq
  402bda:	1c5d      	addeq	r5, r3, #1
  402bdc:	9004      	str	r0, [sp, #16]
  402bde:	9103      	str	r1, [sp, #12]
  402be0:	a81f      	add	r0, sp, #124	; 0x7c
  402be2:	2102      	movs	r1, #2
  402be4:	463b      	mov	r3, r7
  402be6:	9002      	str	r0, [sp, #8]
  402be8:	9501      	str	r5, [sp, #4]
  402bea:	9100      	str	r1, [sp, #0]
  402bec:	980c      	ldr	r0, [sp, #48]	; 0x30
  402bee:	f000 fb73 	bl	4032d8 <_dtoa_r>
  402bf2:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402bf4:	2b67      	cmp	r3, #103	; 0x67
  402bf6:	4606      	mov	r6, r0
  402bf8:	f040 81e0 	bne.w	402fbc <_svfprintf_r+0x1288>
  402bfc:	f01b 0f01 	tst.w	fp, #1
  402c00:	f000 8246 	beq.w	403090 <_svfprintf_r+0x135c>
  402c04:	1974      	adds	r4, r6, r5
  402c06:	9a16      	ldr	r2, [sp, #88]	; 0x58
  402c08:	9808      	ldr	r0, [sp, #32]
  402c0a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  402c0c:	4639      	mov	r1, r7
  402c0e:	f003 fa79 	bl	406104 <__aeabi_dcmpeq>
  402c12:	2800      	cmp	r0, #0
  402c14:	f040 8165 	bne.w	402ee2 <_svfprintf_r+0x11ae>
  402c18:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  402c1a:	42a3      	cmp	r3, r4
  402c1c:	d206      	bcs.n	402c2c <_svfprintf_r+0xef8>
  402c1e:	2130      	movs	r1, #48	; 0x30
  402c20:	1c5a      	adds	r2, r3, #1
  402c22:	9223      	str	r2, [sp, #140]	; 0x8c
  402c24:	7019      	strb	r1, [r3, #0]
  402c26:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  402c28:	429c      	cmp	r4, r3
  402c2a:	d8f9      	bhi.n	402c20 <_svfprintf_r+0xeec>
  402c2c:	1b9b      	subs	r3, r3, r6
  402c2e:	9313      	str	r3, [sp, #76]	; 0x4c
  402c30:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402c32:	2b47      	cmp	r3, #71	; 0x47
  402c34:	f000 80e9 	beq.w	402e0a <_svfprintf_r+0x10d6>
  402c38:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402c3a:	2b65      	cmp	r3, #101	; 0x65
  402c3c:	f340 81cd 	ble.w	402fda <_svfprintf_r+0x12a6>
  402c40:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402c42:	2b66      	cmp	r3, #102	; 0x66
  402c44:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402c46:	9312      	str	r3, [sp, #72]	; 0x48
  402c48:	f000 819e 	beq.w	402f88 <_svfprintf_r+0x1254>
  402c4c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402c4e:	9a12      	ldr	r2, [sp, #72]	; 0x48
  402c50:	4619      	mov	r1, r3
  402c52:	4291      	cmp	r1, r2
  402c54:	f300 818a 	bgt.w	402f6c <_svfprintf_r+0x1238>
  402c58:	f01b 0f01 	tst.w	fp, #1
  402c5c:	f040 8213 	bne.w	403086 <_svfprintf_r+0x1352>
  402c60:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  402c64:	9308      	str	r3, [sp, #32]
  402c66:	2367      	movs	r3, #103	; 0x67
  402c68:	920e      	str	r2, [sp, #56]	; 0x38
  402c6a:	9311      	str	r3, [sp, #68]	; 0x44
  402c6c:	9b10      	ldr	r3, [sp, #64]	; 0x40
  402c6e:	2b00      	cmp	r3, #0
  402c70:	f040 80c4 	bne.w	402dfc <_svfprintf_r+0x10c8>
  402c74:	930a      	str	r3, [sp, #40]	; 0x28
  402c76:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402c7a:	f7ff b973 	b.w	401f64 <_svfprintf_r+0x230>
  402c7e:	4635      	mov	r5, r6
  402c80:	460c      	mov	r4, r1
  402c82:	4646      	mov	r6, r8
  402c84:	4690      	mov	r8, r2
  402c86:	3301      	adds	r3, #1
  402c88:	443c      	add	r4, r7
  402c8a:	2b07      	cmp	r3, #7
  402c8c:	9427      	str	r4, [sp, #156]	; 0x9c
  402c8e:	9326      	str	r3, [sp, #152]	; 0x98
  402c90:	e888 00a0 	stmia.w	r8, {r5, r7}
  402c94:	f73f aed1 	bgt.w	402a3a <_svfprintf_r+0xd06>
  402c98:	f108 0808 	add.w	r8, r8, #8
  402c9c:	e6d7      	b.n	402a4e <_svfprintf_r+0xd1a>
  402c9e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402ca0:	6813      	ldr	r3, [r2, #0]
  402ca2:	3204      	adds	r2, #4
  402ca4:	920f      	str	r2, [sp, #60]	; 0x3c
  402ca6:	9a09      	ldr	r2, [sp, #36]	; 0x24
  402ca8:	601a      	str	r2, [r3, #0]
  402caa:	f7ff b86a 	b.w	401d82 <_svfprintf_r+0x4e>
  402cae:	aa25      	add	r2, sp, #148	; 0x94
  402cb0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402cb2:	980c      	ldr	r0, [sp, #48]	; 0x30
  402cb4:	f002 f992 	bl	404fdc <__ssprint_r>
  402cb8:	2800      	cmp	r0, #0
  402cba:	f47f a90d 	bne.w	401ed8 <_svfprintf_r+0x1a4>
  402cbe:	46c8      	mov	r8, r9
  402cc0:	e48d      	b.n	4025de <_svfprintf_r+0x8aa>
  402cc2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402cc4:	4a27      	ldr	r2, [pc, #156]	; (402d64 <_svfprintf_r+0x1030>)
  402cc6:	f8c8 2000 	str.w	r2, [r8]
  402cca:	3301      	adds	r3, #1
  402ccc:	3401      	adds	r4, #1
  402cce:	2201      	movs	r2, #1
  402cd0:	2b07      	cmp	r3, #7
  402cd2:	9427      	str	r4, [sp, #156]	; 0x9c
  402cd4:	9326      	str	r3, [sp, #152]	; 0x98
  402cd6:	f8c8 2004 	str.w	r2, [r8, #4]
  402cda:	dc72      	bgt.n	402dc2 <_svfprintf_r+0x108e>
  402cdc:	f108 0808 	add.w	r8, r8, #8
  402ce0:	b929      	cbnz	r1, 402cee <_svfprintf_r+0xfba>
  402ce2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402ce4:	b91b      	cbnz	r3, 402cee <_svfprintf_r+0xfba>
  402ce6:	9b07      	ldr	r3, [sp, #28]
  402ce8:	07d8      	lsls	r0, r3, #31
  402cea:	f57f aa03 	bpl.w	4020f4 <_svfprintf_r+0x3c0>
  402cee:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402cf0:	9819      	ldr	r0, [sp, #100]	; 0x64
  402cf2:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  402cf4:	f8c8 2000 	str.w	r2, [r8]
  402cf8:	3301      	adds	r3, #1
  402cfa:	4602      	mov	r2, r0
  402cfc:	4422      	add	r2, r4
  402cfe:	2b07      	cmp	r3, #7
  402d00:	9227      	str	r2, [sp, #156]	; 0x9c
  402d02:	f8c8 0004 	str.w	r0, [r8, #4]
  402d06:	9326      	str	r3, [sp, #152]	; 0x98
  402d08:	f300 818d 	bgt.w	403026 <_svfprintf_r+0x12f2>
  402d0c:	f108 0808 	add.w	r8, r8, #8
  402d10:	2900      	cmp	r1, #0
  402d12:	f2c0 8165 	blt.w	402fe0 <_svfprintf_r+0x12ac>
  402d16:	9913      	ldr	r1, [sp, #76]	; 0x4c
  402d18:	f8c8 6000 	str.w	r6, [r8]
  402d1c:	3301      	adds	r3, #1
  402d1e:	188c      	adds	r4, r1, r2
  402d20:	2b07      	cmp	r3, #7
  402d22:	9427      	str	r4, [sp, #156]	; 0x9c
  402d24:	9326      	str	r3, [sp, #152]	; 0x98
  402d26:	f8c8 1004 	str.w	r1, [r8, #4]
  402d2a:	f77f a9e1 	ble.w	4020f0 <_svfprintf_r+0x3bc>
  402d2e:	e52c      	b.n	40278a <_svfprintf_r+0xa56>
  402d30:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402d32:	9909      	ldr	r1, [sp, #36]	; 0x24
  402d34:	6813      	ldr	r3, [r2, #0]
  402d36:	17cd      	asrs	r5, r1, #31
  402d38:	4608      	mov	r0, r1
  402d3a:	3204      	adds	r2, #4
  402d3c:	4629      	mov	r1, r5
  402d3e:	920f      	str	r2, [sp, #60]	; 0x3c
  402d40:	e9c3 0100 	strd	r0, r1, [r3]
  402d44:	f7ff b81d 	b.w	401d82 <_svfprintf_r+0x4e>
  402d48:	aa25      	add	r2, sp, #148	; 0x94
  402d4a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402d4c:	980c      	ldr	r0, [sp, #48]	; 0x30
  402d4e:	f002 f945 	bl	404fdc <__ssprint_r>
  402d52:	2800      	cmp	r0, #0
  402d54:	f47f a8c0 	bne.w	401ed8 <_svfprintf_r+0x1a4>
  402d58:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402d5a:	46c8      	mov	r8, r9
  402d5c:	e458      	b.n	402610 <_svfprintf_r+0x8dc>
  402d5e:	bf00      	nop
  402d60:	00406cc0 	.word	0x00406cc0
  402d64:	00406cac 	.word	0x00406cac
  402d68:	2140      	movs	r1, #64	; 0x40
  402d6a:	980c      	ldr	r0, [sp, #48]	; 0x30
  402d6c:	f001 fa0a 	bl	404184 <_malloc_r>
  402d70:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  402d72:	6010      	str	r0, [r2, #0]
  402d74:	6110      	str	r0, [r2, #16]
  402d76:	2800      	cmp	r0, #0
  402d78:	f000 81f2 	beq.w	403160 <_svfprintf_r+0x142c>
  402d7c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  402d7e:	2340      	movs	r3, #64	; 0x40
  402d80:	6153      	str	r3, [r2, #20]
  402d82:	f7fe bfee 	b.w	401d62 <_svfprintf_r+0x2e>
  402d86:	a823      	add	r0, sp, #140	; 0x8c
  402d88:	a920      	add	r1, sp, #128	; 0x80
  402d8a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  402d8c:	9004      	str	r0, [sp, #16]
  402d8e:	9103      	str	r1, [sp, #12]
  402d90:	a81f      	add	r0, sp, #124	; 0x7c
  402d92:	2103      	movs	r1, #3
  402d94:	9002      	str	r0, [sp, #8]
  402d96:	9a08      	ldr	r2, [sp, #32]
  402d98:	9401      	str	r4, [sp, #4]
  402d9a:	463b      	mov	r3, r7
  402d9c:	9100      	str	r1, [sp, #0]
  402d9e:	980c      	ldr	r0, [sp, #48]	; 0x30
  402da0:	f000 fa9a 	bl	4032d8 <_dtoa_r>
  402da4:	4625      	mov	r5, r4
  402da6:	4606      	mov	r6, r0
  402da8:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402daa:	2b46      	cmp	r3, #70	; 0x46
  402dac:	eb06 0405 	add.w	r4, r6, r5
  402db0:	f47f af29 	bne.w	402c06 <_svfprintf_r+0xed2>
  402db4:	7833      	ldrb	r3, [r6, #0]
  402db6:	2b30      	cmp	r3, #48	; 0x30
  402db8:	f000 8178 	beq.w	4030ac <_svfprintf_r+0x1378>
  402dbc:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
  402dbe:	442c      	add	r4, r5
  402dc0:	e721      	b.n	402c06 <_svfprintf_r+0xed2>
  402dc2:	aa25      	add	r2, sp, #148	; 0x94
  402dc4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402dc6:	980c      	ldr	r0, [sp, #48]	; 0x30
  402dc8:	f002 f908 	bl	404fdc <__ssprint_r>
  402dcc:	2800      	cmp	r0, #0
  402dce:	f47f a883 	bne.w	401ed8 <_svfprintf_r+0x1a4>
  402dd2:	991f      	ldr	r1, [sp, #124]	; 0x7c
  402dd4:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402dd6:	46c8      	mov	r8, r9
  402dd8:	e782      	b.n	402ce0 <_svfprintf_r+0xfac>
  402dda:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402ddc:	2b00      	cmp	r3, #0
  402dde:	bf08      	it	eq
  402de0:	2301      	moveq	r3, #1
  402de2:	930a      	str	r3, [sp, #40]	; 0x28
  402de4:	e6db      	b.n	402b9e <_svfprintf_r+0xe6a>
  402de6:	4630      	mov	r0, r6
  402de8:	940a      	str	r4, [sp, #40]	; 0x28
  402dea:	f002 f889 	bl	404f00 <strlen>
  402dee:	950f      	str	r5, [sp, #60]	; 0x3c
  402df0:	900e      	str	r0, [sp, #56]	; 0x38
  402df2:	f8cd b01c 	str.w	fp, [sp, #28]
  402df6:	4603      	mov	r3, r0
  402df8:	f7ff b9f9 	b.w	4021ee <_svfprintf_r+0x4ba>
  402dfc:	272d      	movs	r7, #45	; 0x2d
  402dfe:	2300      	movs	r3, #0
  402e00:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402e04:	930a      	str	r3, [sp, #40]	; 0x28
  402e06:	f7ff b8ae 	b.w	401f66 <_svfprintf_r+0x232>
  402e0a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402e0c:	9312      	str	r3, [sp, #72]	; 0x48
  402e0e:	461a      	mov	r2, r3
  402e10:	3303      	adds	r3, #3
  402e12:	db04      	blt.n	402e1e <_svfprintf_r+0x10ea>
  402e14:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402e16:	4619      	mov	r1, r3
  402e18:	4291      	cmp	r1, r2
  402e1a:	f6bf af17 	bge.w	402c4c <_svfprintf_r+0xf18>
  402e1e:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402e20:	3b02      	subs	r3, #2
  402e22:	9311      	str	r3, [sp, #68]	; 0x44
  402e24:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
  402e28:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
  402e2c:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402e2e:	3b01      	subs	r3, #1
  402e30:	2b00      	cmp	r3, #0
  402e32:	931f      	str	r3, [sp, #124]	; 0x7c
  402e34:	bfbd      	ittte	lt
  402e36:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
  402e38:	f1c3 0301 	rsblt	r3, r3, #1
  402e3c:	222d      	movlt	r2, #45	; 0x2d
  402e3e:	222b      	movge	r2, #43	; 0x2b
  402e40:	2b09      	cmp	r3, #9
  402e42:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
  402e46:	f340 8116 	ble.w	403076 <_svfprintf_r+0x1342>
  402e4a:	f10d 0493 	add.w	r4, sp, #147	; 0x93
  402e4e:	4620      	mov	r0, r4
  402e50:	4dab      	ldr	r5, [pc, #684]	; (403100 <_svfprintf_r+0x13cc>)
  402e52:	e000      	b.n	402e56 <_svfprintf_r+0x1122>
  402e54:	4610      	mov	r0, r2
  402e56:	fb85 1203 	smull	r1, r2, r5, r3
  402e5a:	17d9      	asrs	r1, r3, #31
  402e5c:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
  402e60:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  402e64:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
  402e68:	3230      	adds	r2, #48	; 0x30
  402e6a:	2909      	cmp	r1, #9
  402e6c:	f800 2c01 	strb.w	r2, [r0, #-1]
  402e70:	460b      	mov	r3, r1
  402e72:	f100 32ff 	add.w	r2, r0, #4294967295
  402e76:	dced      	bgt.n	402e54 <_svfprintf_r+0x1120>
  402e78:	3330      	adds	r3, #48	; 0x30
  402e7a:	3802      	subs	r0, #2
  402e7c:	b2d9      	uxtb	r1, r3
  402e7e:	4284      	cmp	r4, r0
  402e80:	f802 1c01 	strb.w	r1, [r2, #-1]
  402e84:	f240 8165 	bls.w	403152 <_svfprintf_r+0x141e>
  402e88:	f10d 0086 	add.w	r0, sp, #134	; 0x86
  402e8c:	4613      	mov	r3, r2
  402e8e:	e001      	b.n	402e94 <_svfprintf_r+0x1160>
  402e90:	f813 1b01 	ldrb.w	r1, [r3], #1
  402e94:	f800 1b01 	strb.w	r1, [r0], #1
  402e98:	42a3      	cmp	r3, r4
  402e9a:	d1f9      	bne.n	402e90 <_svfprintf_r+0x115c>
  402e9c:	3301      	adds	r3, #1
  402e9e:	1a9b      	subs	r3, r3, r2
  402ea0:	f10d 0286 	add.w	r2, sp, #134	; 0x86
  402ea4:	4413      	add	r3, r2
  402ea6:	aa21      	add	r2, sp, #132	; 0x84
  402ea8:	1a9b      	subs	r3, r3, r2
  402eaa:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  402eac:	931b      	str	r3, [sp, #108]	; 0x6c
  402eae:	2a01      	cmp	r2, #1
  402eb0:	4413      	add	r3, r2
  402eb2:	930e      	str	r3, [sp, #56]	; 0x38
  402eb4:	f340 8119 	ble.w	4030ea <_svfprintf_r+0x13b6>
  402eb8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402eba:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402ebc:	4413      	add	r3, r2
  402ebe:	930e      	str	r3, [sp, #56]	; 0x38
  402ec0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402ec4:	9308      	str	r3, [sp, #32]
  402ec6:	2300      	movs	r3, #0
  402ec8:	9312      	str	r3, [sp, #72]	; 0x48
  402eca:	e6cf      	b.n	402c6c <_svfprintf_r+0xf38>
  402ecc:	aa25      	add	r2, sp, #148	; 0x94
  402ece:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402ed0:	980c      	ldr	r0, [sp, #48]	; 0x30
  402ed2:	f002 f883 	bl	404fdc <__ssprint_r>
  402ed6:	2800      	cmp	r0, #0
  402ed8:	f47e affe 	bne.w	401ed8 <_svfprintf_r+0x1a4>
  402edc:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402ede:	46c8      	mov	r8, r9
  402ee0:	e4d7      	b.n	402892 <_svfprintf_r+0xb5e>
  402ee2:	4623      	mov	r3, r4
  402ee4:	e6a2      	b.n	402c2c <_svfprintf_r+0xef8>
  402ee6:	aa25      	add	r2, sp, #148	; 0x94
  402ee8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402eea:	980c      	ldr	r0, [sp, #48]	; 0x30
  402eec:	f002 f876 	bl	404fdc <__ssprint_r>
  402ef0:	2800      	cmp	r0, #0
  402ef2:	f47e aff1 	bne.w	401ed8 <_svfprintf_r+0x1a4>
  402ef6:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  402ef8:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402efa:	46c8      	mov	r8, r9
  402efc:	e5ae      	b.n	402a5c <_svfprintf_r+0xd28>
  402efe:	aa25      	add	r2, sp, #148	; 0x94
  402f00:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402f02:	980c      	ldr	r0, [sp, #48]	; 0x30
  402f04:	f002 f86a 	bl	404fdc <__ssprint_r>
  402f08:	2800      	cmp	r0, #0
  402f0a:	f47e afe5 	bne.w	401ed8 <_svfprintf_r+0x1a4>
  402f0e:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  402f10:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402f12:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402f14:	1a9a      	subs	r2, r3, r2
  402f16:	46c8      	mov	r8, r9
  402f18:	e5b8      	b.n	402a8c <_svfprintf_r+0xd58>
  402f1a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402f1c:	9612      	str	r6, [sp, #72]	; 0x48
  402f1e:	2b06      	cmp	r3, #6
  402f20:	bf28      	it	cs
  402f22:	2306      	movcs	r3, #6
  402f24:	960a      	str	r6, [sp, #40]	; 0x28
  402f26:	4637      	mov	r7, r6
  402f28:	9308      	str	r3, [sp, #32]
  402f2a:	950f      	str	r5, [sp, #60]	; 0x3c
  402f2c:	f8cd b01c 	str.w	fp, [sp, #28]
  402f30:	930e      	str	r3, [sp, #56]	; 0x38
  402f32:	4e74      	ldr	r6, [pc, #464]	; (403104 <_svfprintf_r+0x13d0>)
  402f34:	f7ff b816 	b.w	401f64 <_svfprintf_r+0x230>
  402f38:	a823      	add	r0, sp, #140	; 0x8c
  402f3a:	a920      	add	r1, sp, #128	; 0x80
  402f3c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  402f3e:	9004      	str	r0, [sp, #16]
  402f40:	9103      	str	r1, [sp, #12]
  402f42:	a81f      	add	r0, sp, #124	; 0x7c
  402f44:	2103      	movs	r1, #3
  402f46:	9002      	str	r0, [sp, #8]
  402f48:	9a08      	ldr	r2, [sp, #32]
  402f4a:	9501      	str	r5, [sp, #4]
  402f4c:	463b      	mov	r3, r7
  402f4e:	9100      	str	r1, [sp, #0]
  402f50:	980c      	ldr	r0, [sp, #48]	; 0x30
  402f52:	f000 f9c1 	bl	4032d8 <_dtoa_r>
  402f56:	4606      	mov	r6, r0
  402f58:	1944      	adds	r4, r0, r5
  402f5a:	e72b      	b.n	402db4 <_svfprintf_r+0x1080>
  402f5c:	2306      	movs	r3, #6
  402f5e:	930a      	str	r3, [sp, #40]	; 0x28
  402f60:	e61d      	b.n	402b9e <_svfprintf_r+0xe6a>
  402f62:	272d      	movs	r7, #45	; 0x2d
  402f64:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402f68:	f7ff bacd 	b.w	402506 <_svfprintf_r+0x7d2>
  402f6c:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402f6e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402f70:	4413      	add	r3, r2
  402f72:	9a12      	ldr	r2, [sp, #72]	; 0x48
  402f74:	930e      	str	r3, [sp, #56]	; 0x38
  402f76:	2a00      	cmp	r2, #0
  402f78:	f340 80b0 	ble.w	4030dc <_svfprintf_r+0x13a8>
  402f7c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402f80:	9308      	str	r3, [sp, #32]
  402f82:	2367      	movs	r3, #103	; 0x67
  402f84:	9311      	str	r3, [sp, #68]	; 0x44
  402f86:	e671      	b.n	402c6c <_svfprintf_r+0xf38>
  402f88:	2b00      	cmp	r3, #0
  402f8a:	f340 80c3 	ble.w	403114 <_svfprintf_r+0x13e0>
  402f8e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  402f90:	2a00      	cmp	r2, #0
  402f92:	f040 8099 	bne.w	4030c8 <_svfprintf_r+0x1394>
  402f96:	f01b 0f01 	tst.w	fp, #1
  402f9a:	f040 8095 	bne.w	4030c8 <_svfprintf_r+0x1394>
  402f9e:	9308      	str	r3, [sp, #32]
  402fa0:	930e      	str	r3, [sp, #56]	; 0x38
  402fa2:	e663      	b.n	402c6c <_svfprintf_r+0xf38>
  402fa4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402fa6:	9308      	str	r3, [sp, #32]
  402fa8:	930e      	str	r3, [sp, #56]	; 0x38
  402faa:	900a      	str	r0, [sp, #40]	; 0x28
  402fac:	950f      	str	r5, [sp, #60]	; 0x3c
  402fae:	f8cd b01c 	str.w	fp, [sp, #28]
  402fb2:	9012      	str	r0, [sp, #72]	; 0x48
  402fb4:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402fb8:	f7fe bfd4 	b.w	401f64 <_svfprintf_r+0x230>
  402fbc:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402fbe:	2b47      	cmp	r3, #71	; 0x47
  402fc0:	f47f ae20 	bne.w	402c04 <_svfprintf_r+0xed0>
  402fc4:	f01b 0f01 	tst.w	fp, #1
  402fc8:	f47f aeee 	bne.w	402da8 <_svfprintf_r+0x1074>
  402fcc:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  402fce:	1b9b      	subs	r3, r3, r6
  402fd0:	9313      	str	r3, [sp, #76]	; 0x4c
  402fd2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402fd4:	2b47      	cmp	r3, #71	; 0x47
  402fd6:	f43f af18 	beq.w	402e0a <_svfprintf_r+0x10d6>
  402fda:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402fdc:	9312      	str	r3, [sp, #72]	; 0x48
  402fde:	e721      	b.n	402e24 <_svfprintf_r+0x10f0>
  402fe0:	424f      	negs	r7, r1
  402fe2:	3110      	adds	r1, #16
  402fe4:	4d48      	ldr	r5, [pc, #288]	; (403108 <_svfprintf_r+0x13d4>)
  402fe6:	da2f      	bge.n	403048 <_svfprintf_r+0x1314>
  402fe8:	2410      	movs	r4, #16
  402fea:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  402fee:	e004      	b.n	402ffa <_svfprintf_r+0x12c6>
  402ff0:	f108 0808 	add.w	r8, r8, #8
  402ff4:	3f10      	subs	r7, #16
  402ff6:	2f10      	cmp	r7, #16
  402ff8:	dd26      	ble.n	403048 <_svfprintf_r+0x1314>
  402ffa:	3301      	adds	r3, #1
  402ffc:	3210      	adds	r2, #16
  402ffe:	2b07      	cmp	r3, #7
  403000:	9227      	str	r2, [sp, #156]	; 0x9c
  403002:	9326      	str	r3, [sp, #152]	; 0x98
  403004:	f8c8 5000 	str.w	r5, [r8]
  403008:	f8c8 4004 	str.w	r4, [r8, #4]
  40300c:	ddf0      	ble.n	402ff0 <_svfprintf_r+0x12bc>
  40300e:	aa25      	add	r2, sp, #148	; 0x94
  403010:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403012:	4658      	mov	r0, fp
  403014:	f001 ffe2 	bl	404fdc <__ssprint_r>
  403018:	2800      	cmp	r0, #0
  40301a:	f47e af5d 	bne.w	401ed8 <_svfprintf_r+0x1a4>
  40301e:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  403020:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403022:	46c8      	mov	r8, r9
  403024:	e7e6      	b.n	402ff4 <_svfprintf_r+0x12c0>
  403026:	aa25      	add	r2, sp, #148	; 0x94
  403028:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40302a:	980c      	ldr	r0, [sp, #48]	; 0x30
  40302c:	f001 ffd6 	bl	404fdc <__ssprint_r>
  403030:	2800      	cmp	r0, #0
  403032:	f47e af51 	bne.w	401ed8 <_svfprintf_r+0x1a4>
  403036:	991f      	ldr	r1, [sp, #124]	; 0x7c
  403038:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  40303a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40303c:	46c8      	mov	r8, r9
  40303e:	e667      	b.n	402d10 <_svfprintf_r+0xfdc>
  403040:	2000      	movs	r0, #0
  403042:	900a      	str	r0, [sp, #40]	; 0x28
  403044:	f7fe bed0 	b.w	401de8 <_svfprintf_r+0xb4>
  403048:	3301      	adds	r3, #1
  40304a:	443a      	add	r2, r7
  40304c:	2b07      	cmp	r3, #7
  40304e:	e888 00a0 	stmia.w	r8, {r5, r7}
  403052:	9227      	str	r2, [sp, #156]	; 0x9c
  403054:	9326      	str	r3, [sp, #152]	; 0x98
  403056:	f108 0808 	add.w	r8, r8, #8
  40305a:	f77f ae5c 	ble.w	402d16 <_svfprintf_r+0xfe2>
  40305e:	aa25      	add	r2, sp, #148	; 0x94
  403060:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403062:	980c      	ldr	r0, [sp, #48]	; 0x30
  403064:	f001 ffba 	bl	404fdc <__ssprint_r>
  403068:	2800      	cmp	r0, #0
  40306a:	f47e af35 	bne.w	401ed8 <_svfprintf_r+0x1a4>
  40306e:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  403070:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403072:	46c8      	mov	r8, r9
  403074:	e64f      	b.n	402d16 <_svfprintf_r+0xfe2>
  403076:	3330      	adds	r3, #48	; 0x30
  403078:	2230      	movs	r2, #48	; 0x30
  40307a:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
  40307e:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
  403082:	ab22      	add	r3, sp, #136	; 0x88
  403084:	e70f      	b.n	402ea6 <_svfprintf_r+0x1172>
  403086:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403088:	9a19      	ldr	r2, [sp, #100]	; 0x64
  40308a:	4413      	add	r3, r2
  40308c:	930e      	str	r3, [sp, #56]	; 0x38
  40308e:	e775      	b.n	402f7c <_svfprintf_r+0x1248>
  403090:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  403092:	e5cb      	b.n	402c2c <_svfprintf_r+0xef8>
  403094:	9b14      	ldr	r3, [sp, #80]	; 0x50
  403096:	4e1d      	ldr	r6, [pc, #116]	; (40310c <_svfprintf_r+0x13d8>)
  403098:	2b00      	cmp	r3, #0
  40309a:	bfb6      	itet	lt
  40309c:	272d      	movlt	r7, #45	; 0x2d
  40309e:	f89d 7077 	ldrbge.w	r7, [sp, #119]	; 0x77
  4030a2:	f88d 7077 	strblt.w	r7, [sp, #119]	; 0x77
  4030a6:	4b1a      	ldr	r3, [pc, #104]	; (403110 <_svfprintf_r+0x13dc>)
  4030a8:	f7ff ba2f 	b.w	40250a <_svfprintf_r+0x7d6>
  4030ac:	9a16      	ldr	r2, [sp, #88]	; 0x58
  4030ae:	9808      	ldr	r0, [sp, #32]
  4030b0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  4030b2:	4639      	mov	r1, r7
  4030b4:	f003 f826 	bl	406104 <__aeabi_dcmpeq>
  4030b8:	2800      	cmp	r0, #0
  4030ba:	f47f ae7f 	bne.w	402dbc <_svfprintf_r+0x1088>
  4030be:	f1c5 0501 	rsb	r5, r5, #1
  4030c2:	951f      	str	r5, [sp, #124]	; 0x7c
  4030c4:	442c      	add	r4, r5
  4030c6:	e59e      	b.n	402c06 <_svfprintf_r+0xed2>
  4030c8:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4030ca:	9a19      	ldr	r2, [sp, #100]	; 0x64
  4030cc:	4413      	add	r3, r2
  4030ce:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4030d0:	441a      	add	r2, r3
  4030d2:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  4030d6:	920e      	str	r2, [sp, #56]	; 0x38
  4030d8:	9308      	str	r3, [sp, #32]
  4030da:	e5c7      	b.n	402c6c <_svfprintf_r+0xf38>
  4030dc:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4030de:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  4030e0:	f1c3 0301 	rsb	r3, r3, #1
  4030e4:	441a      	add	r2, r3
  4030e6:	4613      	mov	r3, r2
  4030e8:	e7d0      	b.n	40308c <_svfprintf_r+0x1358>
  4030ea:	f01b 0301 	ands.w	r3, fp, #1
  4030ee:	9312      	str	r3, [sp, #72]	; 0x48
  4030f0:	f47f aee2 	bne.w	402eb8 <_svfprintf_r+0x1184>
  4030f4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4030f6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  4030fa:	9308      	str	r3, [sp, #32]
  4030fc:	e5b6      	b.n	402c6c <_svfprintf_r+0xf38>
  4030fe:	bf00      	nop
  403100:	66666667 	.word	0x66666667
  403104:	00406ca4 	.word	0x00406ca4
  403108:	00406cc0 	.word	0x00406cc0
  40310c:	00406c78 	.word	0x00406c78
  403110:	00406c74 	.word	0x00406c74
  403114:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403116:	b913      	cbnz	r3, 40311e <_svfprintf_r+0x13ea>
  403118:	f01b 0f01 	tst.w	fp, #1
  40311c:	d002      	beq.n	403124 <_svfprintf_r+0x13f0>
  40311e:	9b19      	ldr	r3, [sp, #100]	; 0x64
  403120:	3301      	adds	r3, #1
  403122:	e7d4      	b.n	4030ce <_svfprintf_r+0x139a>
  403124:	2301      	movs	r3, #1
  403126:	e73a      	b.n	402f9e <_svfprintf_r+0x126a>
  403128:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  40312a:	f89a 3001 	ldrb.w	r3, [sl, #1]
  40312e:	6828      	ldr	r0, [r5, #0]
  403130:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
  403134:	900a      	str	r0, [sp, #40]	; 0x28
  403136:	4628      	mov	r0, r5
  403138:	3004      	adds	r0, #4
  40313a:	46a2      	mov	sl, r4
  40313c:	900f      	str	r0, [sp, #60]	; 0x3c
  40313e:	f7fe be51 	b.w	401de4 <_svfprintf_r+0xb0>
  403142:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403146:	f7ff b867 	b.w	402218 <_svfprintf_r+0x4e4>
  40314a:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  40314e:	f7ff ba15 	b.w	40257c <_svfprintf_r+0x848>
  403152:	f10d 0386 	add.w	r3, sp, #134	; 0x86
  403156:	e6a6      	b.n	402ea6 <_svfprintf_r+0x1172>
  403158:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  40315c:	f7ff b8eb 	b.w	402336 <_svfprintf_r+0x602>
  403160:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403162:	230c      	movs	r3, #12
  403164:	6013      	str	r3, [r2, #0]
  403166:	f04f 33ff 	mov.w	r3, #4294967295
  40316a:	9309      	str	r3, [sp, #36]	; 0x24
  40316c:	f7fe bebd 	b.w	401eea <_svfprintf_r+0x1b6>
  403170:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403174:	f7ff b99a 	b.w	4024ac <_svfprintf_r+0x778>
  403178:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  40317c:	f7ff b976 	b.w	40246c <_svfprintf_r+0x738>
  403180:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403184:	f7ff b959 	b.w	40243a <_svfprintf_r+0x706>
  403188:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  40318c:	f7ff b912 	b.w	4023b4 <_svfprintf_r+0x680>

00403190 <register_fini>:
  403190:	4b02      	ldr	r3, [pc, #8]	; (40319c <register_fini+0xc>)
  403192:	b113      	cbz	r3, 40319a <register_fini+0xa>
  403194:	4802      	ldr	r0, [pc, #8]	; (4031a0 <register_fini+0x10>)
  403196:	f000 b805 	b.w	4031a4 <atexit>
  40319a:	4770      	bx	lr
  40319c:	00000000 	.word	0x00000000
  4031a0:	0040412d 	.word	0x0040412d

004031a4 <atexit>:
  4031a4:	2300      	movs	r3, #0
  4031a6:	4601      	mov	r1, r0
  4031a8:	461a      	mov	r2, r3
  4031aa:	4618      	mov	r0, r3
  4031ac:	f001 bf94 	b.w	4050d8 <__register_exitproc>

004031b0 <quorem>:
  4031b0:	6902      	ldr	r2, [r0, #16]
  4031b2:	690b      	ldr	r3, [r1, #16]
  4031b4:	4293      	cmp	r3, r2
  4031b6:	f300 808d 	bgt.w	4032d4 <quorem+0x124>
  4031ba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4031be:	f103 38ff 	add.w	r8, r3, #4294967295
  4031c2:	f101 0714 	add.w	r7, r1, #20
  4031c6:	f100 0b14 	add.w	fp, r0, #20
  4031ca:	f857 2028 	ldr.w	r2, [r7, r8, lsl #2]
  4031ce:	f85b 3028 	ldr.w	r3, [fp, r8, lsl #2]
  4031d2:	ea4f 0488 	mov.w	r4, r8, lsl #2
  4031d6:	b083      	sub	sp, #12
  4031d8:	3201      	adds	r2, #1
  4031da:	fbb3 f9f2 	udiv	r9, r3, r2
  4031de:	eb0b 0304 	add.w	r3, fp, r4
  4031e2:	9400      	str	r4, [sp, #0]
  4031e4:	eb07 0a04 	add.w	sl, r7, r4
  4031e8:	9301      	str	r3, [sp, #4]
  4031ea:	f1b9 0f00 	cmp.w	r9, #0
  4031ee:	d039      	beq.n	403264 <quorem+0xb4>
  4031f0:	2500      	movs	r5, #0
  4031f2:	462e      	mov	r6, r5
  4031f4:	46bc      	mov	ip, r7
  4031f6:	46de      	mov	lr, fp
  4031f8:	f85c 4b04 	ldr.w	r4, [ip], #4
  4031fc:	f8de 3000 	ldr.w	r3, [lr]
  403200:	b2a2      	uxth	r2, r4
  403202:	fb09 5502 	mla	r5, r9, r2, r5
  403206:	0c22      	lsrs	r2, r4, #16
  403208:	0c2c      	lsrs	r4, r5, #16
  40320a:	fb09 4202 	mla	r2, r9, r2, r4
  40320e:	b2ad      	uxth	r5, r5
  403210:	1b75      	subs	r5, r6, r5
  403212:	b296      	uxth	r6, r2
  403214:	ebc6 4613 	rsb	r6, r6, r3, lsr #16
  403218:	fa15 f383 	uxtah	r3, r5, r3
  40321c:	eb06 4623 	add.w	r6, r6, r3, asr #16
  403220:	b29b      	uxth	r3, r3
  403222:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
  403226:	45e2      	cmp	sl, ip
  403228:	ea4f 4512 	mov.w	r5, r2, lsr #16
  40322c:	f84e 3b04 	str.w	r3, [lr], #4
  403230:	ea4f 4626 	mov.w	r6, r6, asr #16
  403234:	d2e0      	bcs.n	4031f8 <quorem+0x48>
  403236:	9b00      	ldr	r3, [sp, #0]
  403238:	f85b 3003 	ldr.w	r3, [fp, r3]
  40323c:	b993      	cbnz	r3, 403264 <quorem+0xb4>
  40323e:	9c01      	ldr	r4, [sp, #4]
  403240:	1f23      	subs	r3, r4, #4
  403242:	459b      	cmp	fp, r3
  403244:	d20c      	bcs.n	403260 <quorem+0xb0>
  403246:	f854 3c04 	ldr.w	r3, [r4, #-4]
  40324a:	b94b      	cbnz	r3, 403260 <quorem+0xb0>
  40324c:	f1a4 0308 	sub.w	r3, r4, #8
  403250:	e002      	b.n	403258 <quorem+0xa8>
  403252:	681a      	ldr	r2, [r3, #0]
  403254:	3b04      	subs	r3, #4
  403256:	b91a      	cbnz	r2, 403260 <quorem+0xb0>
  403258:	459b      	cmp	fp, r3
  40325a:	f108 38ff 	add.w	r8, r8, #4294967295
  40325e:	d3f8      	bcc.n	403252 <quorem+0xa2>
  403260:	f8c0 8010 	str.w	r8, [r0, #16]
  403264:	4604      	mov	r4, r0
  403266:	f001 fd37 	bl	404cd8 <__mcmp>
  40326a:	2800      	cmp	r0, #0
  40326c:	db2e      	blt.n	4032cc <quorem+0x11c>
  40326e:	f109 0901 	add.w	r9, r9, #1
  403272:	465d      	mov	r5, fp
  403274:	2300      	movs	r3, #0
  403276:	f857 1b04 	ldr.w	r1, [r7], #4
  40327a:	6828      	ldr	r0, [r5, #0]
  40327c:	b28a      	uxth	r2, r1
  40327e:	1a9a      	subs	r2, r3, r2
  403280:	0c0b      	lsrs	r3, r1, #16
  403282:	fa12 f280 	uxtah	r2, r2, r0
  403286:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
  40328a:	eb03 4322 	add.w	r3, r3, r2, asr #16
  40328e:	b292      	uxth	r2, r2
  403290:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  403294:	45ba      	cmp	sl, r7
  403296:	f845 2b04 	str.w	r2, [r5], #4
  40329a:	ea4f 4323 	mov.w	r3, r3, asr #16
  40329e:	d2ea      	bcs.n	403276 <quorem+0xc6>
  4032a0:	f85b 2028 	ldr.w	r2, [fp, r8, lsl #2]
  4032a4:	eb0b 0388 	add.w	r3, fp, r8, lsl #2
  4032a8:	b982      	cbnz	r2, 4032cc <quorem+0x11c>
  4032aa:	1f1a      	subs	r2, r3, #4
  4032ac:	4593      	cmp	fp, r2
  4032ae:	d20b      	bcs.n	4032c8 <quorem+0x118>
  4032b0:	f853 2c04 	ldr.w	r2, [r3, #-4]
  4032b4:	b942      	cbnz	r2, 4032c8 <quorem+0x118>
  4032b6:	3b08      	subs	r3, #8
  4032b8:	e002      	b.n	4032c0 <quorem+0x110>
  4032ba:	681a      	ldr	r2, [r3, #0]
  4032bc:	3b04      	subs	r3, #4
  4032be:	b91a      	cbnz	r2, 4032c8 <quorem+0x118>
  4032c0:	459b      	cmp	fp, r3
  4032c2:	f108 38ff 	add.w	r8, r8, #4294967295
  4032c6:	d3f8      	bcc.n	4032ba <quorem+0x10a>
  4032c8:	f8c4 8010 	str.w	r8, [r4, #16]
  4032cc:	4648      	mov	r0, r9
  4032ce:	b003      	add	sp, #12
  4032d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4032d4:	2000      	movs	r0, #0
  4032d6:	4770      	bx	lr

004032d8 <_dtoa_r>:
  4032d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4032dc:	6c01      	ldr	r1, [r0, #64]	; 0x40
  4032de:	b09b      	sub	sp, #108	; 0x6c
  4032e0:	4604      	mov	r4, r0
  4032e2:	9e27      	ldr	r6, [sp, #156]	; 0x9c
  4032e4:	4692      	mov	sl, r2
  4032e6:	469b      	mov	fp, r3
  4032e8:	b141      	cbz	r1, 4032fc <_dtoa_r+0x24>
  4032ea:	6c42      	ldr	r2, [r0, #68]	; 0x44
  4032ec:	604a      	str	r2, [r1, #4]
  4032ee:	2301      	movs	r3, #1
  4032f0:	4093      	lsls	r3, r2
  4032f2:	608b      	str	r3, [r1, #8]
  4032f4:	f001 fb18 	bl	404928 <_Bfree>
  4032f8:	2300      	movs	r3, #0
  4032fa:	6423      	str	r3, [r4, #64]	; 0x40
  4032fc:	f1bb 0f00 	cmp.w	fp, #0
  403300:	465d      	mov	r5, fp
  403302:	db35      	blt.n	403370 <_dtoa_r+0x98>
  403304:	2300      	movs	r3, #0
  403306:	6033      	str	r3, [r6, #0]
  403308:	4b9d      	ldr	r3, [pc, #628]	; (403580 <_dtoa_r+0x2a8>)
  40330a:	43ab      	bics	r3, r5
  40330c:	d015      	beq.n	40333a <_dtoa_r+0x62>
  40330e:	4650      	mov	r0, sl
  403310:	4659      	mov	r1, fp
  403312:	2200      	movs	r2, #0
  403314:	2300      	movs	r3, #0
  403316:	f002 fef5 	bl	406104 <__aeabi_dcmpeq>
  40331a:	4680      	mov	r8, r0
  40331c:	2800      	cmp	r0, #0
  40331e:	d02d      	beq.n	40337c <_dtoa_r+0xa4>
  403320:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403322:	2301      	movs	r3, #1
  403324:	6013      	str	r3, [r2, #0]
  403326:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403328:	2b00      	cmp	r3, #0
  40332a:	f000 80bd 	beq.w	4034a8 <_dtoa_r+0x1d0>
  40332e:	4895      	ldr	r0, [pc, #596]	; (403584 <_dtoa_r+0x2ac>)
  403330:	6018      	str	r0, [r3, #0]
  403332:	3801      	subs	r0, #1
  403334:	b01b      	add	sp, #108	; 0x6c
  403336:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40333a:	9a26      	ldr	r2, [sp, #152]	; 0x98
  40333c:	f242 730f 	movw	r3, #9999	; 0x270f
  403340:	6013      	str	r3, [r2, #0]
  403342:	f1ba 0f00 	cmp.w	sl, #0
  403346:	d10d      	bne.n	403364 <_dtoa_r+0x8c>
  403348:	f3c5 0513 	ubfx	r5, r5, #0, #20
  40334c:	b955      	cbnz	r5, 403364 <_dtoa_r+0x8c>
  40334e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403350:	488d      	ldr	r0, [pc, #564]	; (403588 <_dtoa_r+0x2b0>)
  403352:	2b00      	cmp	r3, #0
  403354:	d0ee      	beq.n	403334 <_dtoa_r+0x5c>
  403356:	f100 0308 	add.w	r3, r0, #8
  40335a:	9a28      	ldr	r2, [sp, #160]	; 0xa0
  40335c:	6013      	str	r3, [r2, #0]
  40335e:	b01b      	add	sp, #108	; 0x6c
  403360:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403364:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403366:	4889      	ldr	r0, [pc, #548]	; (40358c <_dtoa_r+0x2b4>)
  403368:	2b00      	cmp	r3, #0
  40336a:	d0e3      	beq.n	403334 <_dtoa_r+0x5c>
  40336c:	1cc3      	adds	r3, r0, #3
  40336e:	e7f4      	b.n	40335a <_dtoa_r+0x82>
  403370:	2301      	movs	r3, #1
  403372:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
  403376:	6033      	str	r3, [r6, #0]
  403378:	46ab      	mov	fp, r5
  40337a:	e7c5      	b.n	403308 <_dtoa_r+0x30>
  40337c:	aa18      	add	r2, sp, #96	; 0x60
  40337e:	ab19      	add	r3, sp, #100	; 0x64
  403380:	9201      	str	r2, [sp, #4]
  403382:	9300      	str	r3, [sp, #0]
  403384:	4652      	mov	r2, sl
  403386:	465b      	mov	r3, fp
  403388:	4620      	mov	r0, r4
  40338a:	f001 fd45 	bl	404e18 <__d2b>
  40338e:	0d2b      	lsrs	r3, r5, #20
  403390:	4681      	mov	r9, r0
  403392:	d071      	beq.n	403478 <_dtoa_r+0x1a0>
  403394:	f3cb 0213 	ubfx	r2, fp, #0, #20
  403398:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
  40339c:	9f18      	ldr	r7, [sp, #96]	; 0x60
  40339e:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
  4033a2:	4650      	mov	r0, sl
  4033a4:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
  4033a8:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
  4033ac:	2200      	movs	r2, #0
  4033ae:	4b78      	ldr	r3, [pc, #480]	; (403590 <_dtoa_r+0x2b8>)
  4033b0:	f002 fa8c 	bl	4058cc <__aeabi_dsub>
  4033b4:	a36c      	add	r3, pc, #432	; (adr r3, 403568 <_dtoa_r+0x290>)
  4033b6:	e9d3 2300 	ldrd	r2, r3, [r3]
  4033ba:	f002 fc3b 	bl	405c34 <__aeabi_dmul>
  4033be:	a36c      	add	r3, pc, #432	; (adr r3, 403570 <_dtoa_r+0x298>)
  4033c0:	e9d3 2300 	ldrd	r2, r3, [r3]
  4033c4:	f002 fa84 	bl	4058d0 <__adddf3>
  4033c8:	e9cd 0102 	strd	r0, r1, [sp, #8]
  4033cc:	4630      	mov	r0, r6
  4033ce:	f002 fbcb 	bl	405b68 <__aeabi_i2d>
  4033d2:	a369      	add	r3, pc, #420	; (adr r3, 403578 <_dtoa_r+0x2a0>)
  4033d4:	e9d3 2300 	ldrd	r2, r3, [r3]
  4033d8:	f002 fc2c 	bl	405c34 <__aeabi_dmul>
  4033dc:	4602      	mov	r2, r0
  4033de:	460b      	mov	r3, r1
  4033e0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  4033e4:	f002 fa74 	bl	4058d0 <__adddf3>
  4033e8:	e9cd 0104 	strd	r0, r1, [sp, #16]
  4033ec:	f002 fed2 	bl	406194 <__aeabi_d2iz>
  4033f0:	2200      	movs	r2, #0
  4033f2:	9002      	str	r0, [sp, #8]
  4033f4:	2300      	movs	r3, #0
  4033f6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  4033fa:	f002 fe8d 	bl	406118 <__aeabi_dcmplt>
  4033fe:	2800      	cmp	r0, #0
  403400:	f040 8173 	bne.w	4036ea <_dtoa_r+0x412>
  403404:	9d02      	ldr	r5, [sp, #8]
  403406:	2d16      	cmp	r5, #22
  403408:	f200 815d 	bhi.w	4036c6 <_dtoa_r+0x3ee>
  40340c:	4b61      	ldr	r3, [pc, #388]	; (403594 <_dtoa_r+0x2bc>)
  40340e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
  403412:	e9d3 0100 	ldrd	r0, r1, [r3]
  403416:	4652      	mov	r2, sl
  403418:	465b      	mov	r3, fp
  40341a:	f002 fe9b 	bl	406154 <__aeabi_dcmpgt>
  40341e:	2800      	cmp	r0, #0
  403420:	f000 81c5 	beq.w	4037ae <_dtoa_r+0x4d6>
  403424:	1e6b      	subs	r3, r5, #1
  403426:	9302      	str	r3, [sp, #8]
  403428:	2300      	movs	r3, #0
  40342a:	930e      	str	r3, [sp, #56]	; 0x38
  40342c:	1bbf      	subs	r7, r7, r6
  40342e:	1e7b      	subs	r3, r7, #1
  403430:	9306      	str	r3, [sp, #24]
  403432:	f100 8154 	bmi.w	4036de <_dtoa_r+0x406>
  403436:	2300      	movs	r3, #0
  403438:	9308      	str	r3, [sp, #32]
  40343a:	9b02      	ldr	r3, [sp, #8]
  40343c:	2b00      	cmp	r3, #0
  40343e:	f2c0 8145 	blt.w	4036cc <_dtoa_r+0x3f4>
  403442:	9a06      	ldr	r2, [sp, #24]
  403444:	930d      	str	r3, [sp, #52]	; 0x34
  403446:	4611      	mov	r1, r2
  403448:	4419      	add	r1, r3
  40344a:	2300      	movs	r3, #0
  40344c:	9106      	str	r1, [sp, #24]
  40344e:	930c      	str	r3, [sp, #48]	; 0x30
  403450:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403452:	2b09      	cmp	r3, #9
  403454:	d82a      	bhi.n	4034ac <_dtoa_r+0x1d4>
  403456:	2b05      	cmp	r3, #5
  403458:	f340 865b 	ble.w	404112 <_dtoa_r+0xe3a>
  40345c:	3b04      	subs	r3, #4
  40345e:	9324      	str	r3, [sp, #144]	; 0x90
  403460:	2500      	movs	r5, #0
  403462:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403464:	3b02      	subs	r3, #2
  403466:	2b03      	cmp	r3, #3
  403468:	f200 8642 	bhi.w	4040f0 <_dtoa_r+0xe18>
  40346c:	e8df f013 	tbh	[pc, r3, lsl #1]
  403470:	02c903d4 	.word	0x02c903d4
  403474:	046103df 	.word	0x046103df
  403478:	9f18      	ldr	r7, [sp, #96]	; 0x60
  40347a:	9e19      	ldr	r6, [sp, #100]	; 0x64
  40347c:	443e      	add	r6, r7
  40347e:	f206 4332 	addw	r3, r6, #1074	; 0x432
  403482:	2b20      	cmp	r3, #32
  403484:	f340 818e 	ble.w	4037a4 <_dtoa_r+0x4cc>
  403488:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
  40348c:	f206 4012 	addw	r0, r6, #1042	; 0x412
  403490:	409d      	lsls	r5, r3
  403492:	fa2a f000 	lsr.w	r0, sl, r0
  403496:	4328      	orrs	r0, r5
  403498:	f002 fb56 	bl	405b48 <__aeabi_ui2d>
  40349c:	2301      	movs	r3, #1
  40349e:	3e01      	subs	r6, #1
  4034a0:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
  4034a4:	9314      	str	r3, [sp, #80]	; 0x50
  4034a6:	e781      	b.n	4033ac <_dtoa_r+0xd4>
  4034a8:	483b      	ldr	r0, [pc, #236]	; (403598 <_dtoa_r+0x2c0>)
  4034aa:	e743      	b.n	403334 <_dtoa_r+0x5c>
  4034ac:	2100      	movs	r1, #0
  4034ae:	6461      	str	r1, [r4, #68]	; 0x44
  4034b0:	4620      	mov	r0, r4
  4034b2:	9125      	str	r1, [sp, #148]	; 0x94
  4034b4:	f001 fa12 	bl	4048dc <_Balloc>
  4034b8:	f04f 33ff 	mov.w	r3, #4294967295
  4034bc:	930a      	str	r3, [sp, #40]	; 0x28
  4034be:	9a25      	ldr	r2, [sp, #148]	; 0x94
  4034c0:	930f      	str	r3, [sp, #60]	; 0x3c
  4034c2:	2301      	movs	r3, #1
  4034c4:	9004      	str	r0, [sp, #16]
  4034c6:	6420      	str	r0, [r4, #64]	; 0x40
  4034c8:	9224      	str	r2, [sp, #144]	; 0x90
  4034ca:	930b      	str	r3, [sp, #44]	; 0x2c
  4034cc:	9b19      	ldr	r3, [sp, #100]	; 0x64
  4034ce:	2b00      	cmp	r3, #0
  4034d0:	f2c0 80d9 	blt.w	403686 <_dtoa_r+0x3ae>
  4034d4:	9a02      	ldr	r2, [sp, #8]
  4034d6:	2a0e      	cmp	r2, #14
  4034d8:	f300 80d5 	bgt.w	403686 <_dtoa_r+0x3ae>
  4034dc:	4b2d      	ldr	r3, [pc, #180]	; (403594 <_dtoa_r+0x2bc>)
  4034de:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  4034e2:	e9d3 2300 	ldrd	r2, r3, [r3]
  4034e6:	e9cd 2308 	strd	r2, r3, [sp, #32]
  4034ea:	9b25      	ldr	r3, [sp, #148]	; 0x94
  4034ec:	2b00      	cmp	r3, #0
  4034ee:	f2c0 83ba 	blt.w	403c66 <_dtoa_r+0x98e>
  4034f2:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
  4034f6:	4650      	mov	r0, sl
  4034f8:	462a      	mov	r2, r5
  4034fa:	4633      	mov	r3, r6
  4034fc:	4659      	mov	r1, fp
  4034fe:	f002 fcc3 	bl	405e88 <__aeabi_ddiv>
  403502:	f002 fe47 	bl	406194 <__aeabi_d2iz>
  403506:	4680      	mov	r8, r0
  403508:	f002 fb2e 	bl	405b68 <__aeabi_i2d>
  40350c:	462a      	mov	r2, r5
  40350e:	4633      	mov	r3, r6
  403510:	f002 fb90 	bl	405c34 <__aeabi_dmul>
  403514:	460b      	mov	r3, r1
  403516:	4602      	mov	r2, r0
  403518:	4659      	mov	r1, fp
  40351a:	4650      	mov	r0, sl
  40351c:	f002 f9d6 	bl	4058cc <__aeabi_dsub>
  403520:	9d04      	ldr	r5, [sp, #16]
  403522:	f108 0330 	add.w	r3, r8, #48	; 0x30
  403526:	702b      	strb	r3, [r5, #0]
  403528:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40352a:	2b01      	cmp	r3, #1
  40352c:	4606      	mov	r6, r0
  40352e:	460f      	mov	r7, r1
  403530:	f105 0501 	add.w	r5, r5, #1
  403534:	d068      	beq.n	403608 <_dtoa_r+0x330>
  403536:	2200      	movs	r2, #0
  403538:	4b18      	ldr	r3, [pc, #96]	; (40359c <_dtoa_r+0x2c4>)
  40353a:	f002 fb7b 	bl	405c34 <__aeabi_dmul>
  40353e:	2200      	movs	r2, #0
  403540:	2300      	movs	r3, #0
  403542:	4606      	mov	r6, r0
  403544:	460f      	mov	r7, r1
  403546:	f002 fddd 	bl	406104 <__aeabi_dcmpeq>
  40354a:	2800      	cmp	r0, #0
  40354c:	f040 8088 	bne.w	403660 <_dtoa_r+0x388>
  403550:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  403554:	f04f 0a00 	mov.w	sl, #0
  403558:	f8df b040 	ldr.w	fp, [pc, #64]	; 40359c <_dtoa_r+0x2c4>
  40355c:	940c      	str	r4, [sp, #48]	; 0x30
  40355e:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
  403562:	e028      	b.n	4035b6 <_dtoa_r+0x2de>
  403564:	f3af 8000 	nop.w
  403568:	636f4361 	.word	0x636f4361
  40356c:	3fd287a7 	.word	0x3fd287a7
  403570:	8b60c8b3 	.word	0x8b60c8b3
  403574:	3fc68a28 	.word	0x3fc68a28
  403578:	509f79fb 	.word	0x509f79fb
  40357c:	3fd34413 	.word	0x3fd34413
  403580:	7ff00000 	.word	0x7ff00000
  403584:	00406cad 	.word	0x00406cad
  403588:	00406cd0 	.word	0x00406cd0
  40358c:	00406cdc 	.word	0x00406cdc
  403590:	3ff80000 	.word	0x3ff80000
  403594:	00406d08 	.word	0x00406d08
  403598:	00406cac 	.word	0x00406cac
  40359c:	40240000 	.word	0x40240000
  4035a0:	f002 fb48 	bl	405c34 <__aeabi_dmul>
  4035a4:	2200      	movs	r2, #0
  4035a6:	2300      	movs	r3, #0
  4035a8:	4606      	mov	r6, r0
  4035aa:	460f      	mov	r7, r1
  4035ac:	f002 fdaa 	bl	406104 <__aeabi_dcmpeq>
  4035b0:	2800      	cmp	r0, #0
  4035b2:	f040 83c1 	bne.w	403d38 <_dtoa_r+0xa60>
  4035b6:	4642      	mov	r2, r8
  4035b8:	464b      	mov	r3, r9
  4035ba:	4630      	mov	r0, r6
  4035bc:	4639      	mov	r1, r7
  4035be:	f002 fc63 	bl	405e88 <__aeabi_ddiv>
  4035c2:	f002 fde7 	bl	406194 <__aeabi_d2iz>
  4035c6:	4604      	mov	r4, r0
  4035c8:	f002 face 	bl	405b68 <__aeabi_i2d>
  4035cc:	4642      	mov	r2, r8
  4035ce:	464b      	mov	r3, r9
  4035d0:	f002 fb30 	bl	405c34 <__aeabi_dmul>
  4035d4:	4602      	mov	r2, r0
  4035d6:	460b      	mov	r3, r1
  4035d8:	4630      	mov	r0, r6
  4035da:	4639      	mov	r1, r7
  4035dc:	f002 f976 	bl	4058cc <__aeabi_dsub>
  4035e0:	f104 0e30 	add.w	lr, r4, #48	; 0x30
  4035e4:	9e04      	ldr	r6, [sp, #16]
  4035e6:	f805 eb01 	strb.w	lr, [r5], #1
  4035ea:	eba5 0e06 	sub.w	lr, r5, r6
  4035ee:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  4035f0:	45b6      	cmp	lr, r6
  4035f2:	e9cd 0106 	strd	r0, r1, [sp, #24]
  4035f6:	4652      	mov	r2, sl
  4035f8:	465b      	mov	r3, fp
  4035fa:	d1d1      	bne.n	4035a0 <_dtoa_r+0x2c8>
  4035fc:	46a0      	mov	r8, r4
  4035fe:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  403602:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  403604:	4606      	mov	r6, r0
  403606:	460f      	mov	r7, r1
  403608:	4632      	mov	r2, r6
  40360a:	463b      	mov	r3, r7
  40360c:	4630      	mov	r0, r6
  40360e:	4639      	mov	r1, r7
  403610:	f002 f95e 	bl	4058d0 <__adddf3>
  403614:	4606      	mov	r6, r0
  403616:	460f      	mov	r7, r1
  403618:	4602      	mov	r2, r0
  40361a:	460b      	mov	r3, r1
  40361c:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403620:	f002 fd7a 	bl	406118 <__aeabi_dcmplt>
  403624:	b948      	cbnz	r0, 40363a <_dtoa_r+0x362>
  403626:	4632      	mov	r2, r6
  403628:	463b      	mov	r3, r7
  40362a:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  40362e:	f002 fd69 	bl	406104 <__aeabi_dcmpeq>
  403632:	b1a8      	cbz	r0, 403660 <_dtoa_r+0x388>
  403634:	f018 0f01 	tst.w	r8, #1
  403638:	d012      	beq.n	403660 <_dtoa_r+0x388>
  40363a:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  40363e:	9a04      	ldr	r2, [sp, #16]
  403640:	1e6b      	subs	r3, r5, #1
  403642:	e004      	b.n	40364e <_dtoa_r+0x376>
  403644:	429a      	cmp	r2, r3
  403646:	f000 8401 	beq.w	403e4c <_dtoa_r+0xb74>
  40364a:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
  40364e:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
  403652:	f103 0501 	add.w	r5, r3, #1
  403656:	d0f5      	beq.n	403644 <_dtoa_r+0x36c>
  403658:	f108 0801 	add.w	r8, r8, #1
  40365c:	f883 8000 	strb.w	r8, [r3]
  403660:	4649      	mov	r1, r9
  403662:	4620      	mov	r0, r4
  403664:	f001 f960 	bl	404928 <_Bfree>
  403668:	2200      	movs	r2, #0
  40366a:	9b02      	ldr	r3, [sp, #8]
  40366c:	702a      	strb	r2, [r5, #0]
  40366e:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403670:	3301      	adds	r3, #1
  403672:	6013      	str	r3, [r2, #0]
  403674:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403676:	2b00      	cmp	r3, #0
  403678:	f000 839e 	beq.w	403db8 <_dtoa_r+0xae0>
  40367c:	9804      	ldr	r0, [sp, #16]
  40367e:	601d      	str	r5, [r3, #0]
  403680:	b01b      	add	sp, #108	; 0x6c
  403682:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403686:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403688:	2a00      	cmp	r2, #0
  40368a:	d03e      	beq.n	40370a <_dtoa_r+0x432>
  40368c:	9a24      	ldr	r2, [sp, #144]	; 0x90
  40368e:	2a01      	cmp	r2, #1
  403690:	f340 8311 	ble.w	403cb6 <_dtoa_r+0x9de>
  403694:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403696:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403698:	1e5f      	subs	r7, r3, #1
  40369a:	42ba      	cmp	r2, r7
  40369c:	f2c0 838f 	blt.w	403dbe <_dtoa_r+0xae6>
  4036a0:	1bd7      	subs	r7, r2, r7
  4036a2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4036a4:	2b00      	cmp	r3, #0
  4036a6:	f2c0 848b 	blt.w	403fc0 <_dtoa_r+0xce8>
  4036aa:	9d08      	ldr	r5, [sp, #32]
  4036ac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4036ae:	9a08      	ldr	r2, [sp, #32]
  4036b0:	441a      	add	r2, r3
  4036b2:	9208      	str	r2, [sp, #32]
  4036b4:	9a06      	ldr	r2, [sp, #24]
  4036b6:	2101      	movs	r1, #1
  4036b8:	441a      	add	r2, r3
  4036ba:	4620      	mov	r0, r4
  4036bc:	9206      	str	r2, [sp, #24]
  4036be:	f001 f9cd 	bl	404a5c <__i2b>
  4036c2:	4606      	mov	r6, r0
  4036c4:	e024      	b.n	403710 <_dtoa_r+0x438>
  4036c6:	2301      	movs	r3, #1
  4036c8:	930e      	str	r3, [sp, #56]	; 0x38
  4036ca:	e6af      	b.n	40342c <_dtoa_r+0x154>
  4036cc:	9a08      	ldr	r2, [sp, #32]
  4036ce:	9b02      	ldr	r3, [sp, #8]
  4036d0:	1ad2      	subs	r2, r2, r3
  4036d2:	425b      	negs	r3, r3
  4036d4:	930c      	str	r3, [sp, #48]	; 0x30
  4036d6:	2300      	movs	r3, #0
  4036d8:	9208      	str	r2, [sp, #32]
  4036da:	930d      	str	r3, [sp, #52]	; 0x34
  4036dc:	e6b8      	b.n	403450 <_dtoa_r+0x178>
  4036de:	f1c7 0301 	rsb	r3, r7, #1
  4036e2:	9308      	str	r3, [sp, #32]
  4036e4:	2300      	movs	r3, #0
  4036e6:	9306      	str	r3, [sp, #24]
  4036e8:	e6a7      	b.n	40343a <_dtoa_r+0x162>
  4036ea:	9d02      	ldr	r5, [sp, #8]
  4036ec:	4628      	mov	r0, r5
  4036ee:	f002 fa3b 	bl	405b68 <__aeabi_i2d>
  4036f2:	4602      	mov	r2, r0
  4036f4:	460b      	mov	r3, r1
  4036f6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  4036fa:	f002 fd03 	bl	406104 <__aeabi_dcmpeq>
  4036fe:	2800      	cmp	r0, #0
  403700:	f47f ae80 	bne.w	403404 <_dtoa_r+0x12c>
  403704:	1e6b      	subs	r3, r5, #1
  403706:	9302      	str	r3, [sp, #8]
  403708:	e67c      	b.n	403404 <_dtoa_r+0x12c>
  40370a:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  40370c:	9d08      	ldr	r5, [sp, #32]
  40370e:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
  403710:	2d00      	cmp	r5, #0
  403712:	dd0c      	ble.n	40372e <_dtoa_r+0x456>
  403714:	9906      	ldr	r1, [sp, #24]
  403716:	2900      	cmp	r1, #0
  403718:	460b      	mov	r3, r1
  40371a:	dd08      	ble.n	40372e <_dtoa_r+0x456>
  40371c:	42a9      	cmp	r1, r5
  40371e:	9a08      	ldr	r2, [sp, #32]
  403720:	bfa8      	it	ge
  403722:	462b      	movge	r3, r5
  403724:	1ad2      	subs	r2, r2, r3
  403726:	1aed      	subs	r5, r5, r3
  403728:	1acb      	subs	r3, r1, r3
  40372a:	9208      	str	r2, [sp, #32]
  40372c:	9306      	str	r3, [sp, #24]
  40372e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403730:	b1d3      	cbz	r3, 403768 <_dtoa_r+0x490>
  403732:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403734:	2b00      	cmp	r3, #0
  403736:	f000 82b7 	beq.w	403ca8 <_dtoa_r+0x9d0>
  40373a:	2f00      	cmp	r7, #0
  40373c:	dd10      	ble.n	403760 <_dtoa_r+0x488>
  40373e:	4631      	mov	r1, r6
  403740:	463a      	mov	r2, r7
  403742:	4620      	mov	r0, r4
  403744:	f001 fa26 	bl	404b94 <__pow5mult>
  403748:	464a      	mov	r2, r9
  40374a:	4601      	mov	r1, r0
  40374c:	4606      	mov	r6, r0
  40374e:	4620      	mov	r0, r4
  403750:	f001 f98e 	bl	404a70 <__multiply>
  403754:	4649      	mov	r1, r9
  403756:	4680      	mov	r8, r0
  403758:	4620      	mov	r0, r4
  40375a:	f001 f8e5 	bl	404928 <_Bfree>
  40375e:	46c1      	mov	r9, r8
  403760:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403762:	1bda      	subs	r2, r3, r7
  403764:	f040 82a1 	bne.w	403caa <_dtoa_r+0x9d2>
  403768:	2101      	movs	r1, #1
  40376a:	4620      	mov	r0, r4
  40376c:	f001 f976 	bl	404a5c <__i2b>
  403770:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403772:	2b00      	cmp	r3, #0
  403774:	4680      	mov	r8, r0
  403776:	dd1c      	ble.n	4037b2 <_dtoa_r+0x4da>
  403778:	4601      	mov	r1, r0
  40377a:	461a      	mov	r2, r3
  40377c:	4620      	mov	r0, r4
  40377e:	f001 fa09 	bl	404b94 <__pow5mult>
  403782:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403784:	2b01      	cmp	r3, #1
  403786:	4680      	mov	r8, r0
  403788:	f340 8254 	ble.w	403c34 <_dtoa_r+0x95c>
  40378c:	2300      	movs	r3, #0
  40378e:	930c      	str	r3, [sp, #48]	; 0x30
  403790:	f8d8 3010 	ldr.w	r3, [r8, #16]
  403794:	eb08 0383 	add.w	r3, r8, r3, lsl #2
  403798:	6918      	ldr	r0, [r3, #16]
  40379a:	f001 f90f 	bl	4049bc <__hi0bits>
  40379e:	f1c0 0020 	rsb	r0, r0, #32
  4037a2:	e010      	b.n	4037c6 <_dtoa_r+0x4ee>
  4037a4:	f1c3 0520 	rsb	r5, r3, #32
  4037a8:	fa0a f005 	lsl.w	r0, sl, r5
  4037ac:	e674      	b.n	403498 <_dtoa_r+0x1c0>
  4037ae:	900e      	str	r0, [sp, #56]	; 0x38
  4037b0:	e63c      	b.n	40342c <_dtoa_r+0x154>
  4037b2:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4037b4:	2b01      	cmp	r3, #1
  4037b6:	f340 8287 	ble.w	403cc8 <_dtoa_r+0x9f0>
  4037ba:	2300      	movs	r3, #0
  4037bc:	930c      	str	r3, [sp, #48]	; 0x30
  4037be:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4037c0:	2001      	movs	r0, #1
  4037c2:	2b00      	cmp	r3, #0
  4037c4:	d1e4      	bne.n	403790 <_dtoa_r+0x4b8>
  4037c6:	9a06      	ldr	r2, [sp, #24]
  4037c8:	4410      	add	r0, r2
  4037ca:	f010 001f 	ands.w	r0, r0, #31
  4037ce:	f000 80a1 	beq.w	403914 <_dtoa_r+0x63c>
  4037d2:	f1c0 0320 	rsb	r3, r0, #32
  4037d6:	2b04      	cmp	r3, #4
  4037d8:	f340 849e 	ble.w	404118 <_dtoa_r+0xe40>
  4037dc:	9b08      	ldr	r3, [sp, #32]
  4037de:	f1c0 001c 	rsb	r0, r0, #28
  4037e2:	4403      	add	r3, r0
  4037e4:	9308      	str	r3, [sp, #32]
  4037e6:	4613      	mov	r3, r2
  4037e8:	4403      	add	r3, r0
  4037ea:	4405      	add	r5, r0
  4037ec:	9306      	str	r3, [sp, #24]
  4037ee:	9b08      	ldr	r3, [sp, #32]
  4037f0:	2b00      	cmp	r3, #0
  4037f2:	dd05      	ble.n	403800 <_dtoa_r+0x528>
  4037f4:	4649      	mov	r1, r9
  4037f6:	461a      	mov	r2, r3
  4037f8:	4620      	mov	r0, r4
  4037fa:	f001 fa1b 	bl	404c34 <__lshift>
  4037fe:	4681      	mov	r9, r0
  403800:	9b06      	ldr	r3, [sp, #24]
  403802:	2b00      	cmp	r3, #0
  403804:	dd05      	ble.n	403812 <_dtoa_r+0x53a>
  403806:	4641      	mov	r1, r8
  403808:	461a      	mov	r2, r3
  40380a:	4620      	mov	r0, r4
  40380c:	f001 fa12 	bl	404c34 <__lshift>
  403810:	4680      	mov	r8, r0
  403812:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403814:	2b00      	cmp	r3, #0
  403816:	f040 8086 	bne.w	403926 <_dtoa_r+0x64e>
  40381a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40381c:	2b00      	cmp	r3, #0
  40381e:	f340 8266 	ble.w	403cee <_dtoa_r+0xa16>
  403822:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403824:	2b00      	cmp	r3, #0
  403826:	f000 8098 	beq.w	40395a <_dtoa_r+0x682>
  40382a:	2d00      	cmp	r5, #0
  40382c:	dd05      	ble.n	40383a <_dtoa_r+0x562>
  40382e:	4631      	mov	r1, r6
  403830:	462a      	mov	r2, r5
  403832:	4620      	mov	r0, r4
  403834:	f001 f9fe 	bl	404c34 <__lshift>
  403838:	4606      	mov	r6, r0
  40383a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  40383c:	2b00      	cmp	r3, #0
  40383e:	f040 8337 	bne.w	403eb0 <_dtoa_r+0xbd8>
  403842:	9606      	str	r6, [sp, #24]
  403844:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403846:	9a04      	ldr	r2, [sp, #16]
  403848:	f8dd b018 	ldr.w	fp, [sp, #24]
  40384c:	3b01      	subs	r3, #1
  40384e:	18d3      	adds	r3, r2, r3
  403850:	930b      	str	r3, [sp, #44]	; 0x2c
  403852:	f00a 0301 	and.w	r3, sl, #1
  403856:	930c      	str	r3, [sp, #48]	; 0x30
  403858:	4617      	mov	r7, r2
  40385a:	46c2      	mov	sl, r8
  40385c:	4651      	mov	r1, sl
  40385e:	4648      	mov	r0, r9
  403860:	f7ff fca6 	bl	4031b0 <quorem>
  403864:	4631      	mov	r1, r6
  403866:	4605      	mov	r5, r0
  403868:	4648      	mov	r0, r9
  40386a:	f001 fa35 	bl	404cd8 <__mcmp>
  40386e:	465a      	mov	r2, fp
  403870:	900a      	str	r0, [sp, #40]	; 0x28
  403872:	4651      	mov	r1, sl
  403874:	4620      	mov	r0, r4
  403876:	f001 fa4b 	bl	404d10 <__mdiff>
  40387a:	68c2      	ldr	r2, [r0, #12]
  40387c:	4680      	mov	r8, r0
  40387e:	f105 0330 	add.w	r3, r5, #48	; 0x30
  403882:	2a00      	cmp	r2, #0
  403884:	f040 822b 	bne.w	403cde <_dtoa_r+0xa06>
  403888:	4601      	mov	r1, r0
  40388a:	4648      	mov	r0, r9
  40388c:	9308      	str	r3, [sp, #32]
  40388e:	f001 fa23 	bl	404cd8 <__mcmp>
  403892:	4641      	mov	r1, r8
  403894:	9006      	str	r0, [sp, #24]
  403896:	4620      	mov	r0, r4
  403898:	f001 f846 	bl	404928 <_Bfree>
  40389c:	9a06      	ldr	r2, [sp, #24]
  40389e:	9b08      	ldr	r3, [sp, #32]
  4038a0:	b932      	cbnz	r2, 4038b0 <_dtoa_r+0x5d8>
  4038a2:	9924      	ldr	r1, [sp, #144]	; 0x90
  4038a4:	b921      	cbnz	r1, 4038b0 <_dtoa_r+0x5d8>
  4038a6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4038a8:	2a00      	cmp	r2, #0
  4038aa:	f000 83ef 	beq.w	40408c <_dtoa_r+0xdb4>
  4038ae:	9a24      	ldr	r2, [sp, #144]	; 0x90
  4038b0:	990a      	ldr	r1, [sp, #40]	; 0x28
  4038b2:	2900      	cmp	r1, #0
  4038b4:	f2c0 829f 	blt.w	403df6 <_dtoa_r+0xb1e>
  4038b8:	d105      	bne.n	4038c6 <_dtoa_r+0x5ee>
  4038ba:	9924      	ldr	r1, [sp, #144]	; 0x90
  4038bc:	b919      	cbnz	r1, 4038c6 <_dtoa_r+0x5ee>
  4038be:	990c      	ldr	r1, [sp, #48]	; 0x30
  4038c0:	2900      	cmp	r1, #0
  4038c2:	f000 8298 	beq.w	403df6 <_dtoa_r+0xb1e>
  4038c6:	2a00      	cmp	r2, #0
  4038c8:	f300 8306 	bgt.w	403ed8 <_dtoa_r+0xc00>
  4038cc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  4038ce:	703b      	strb	r3, [r7, #0]
  4038d0:	f107 0801 	add.w	r8, r7, #1
  4038d4:	4297      	cmp	r7, r2
  4038d6:	4645      	mov	r5, r8
  4038d8:	f000 830c 	beq.w	403ef4 <_dtoa_r+0xc1c>
  4038dc:	4649      	mov	r1, r9
  4038de:	2300      	movs	r3, #0
  4038e0:	220a      	movs	r2, #10
  4038e2:	4620      	mov	r0, r4
  4038e4:	f001 f82a 	bl	40493c <__multadd>
  4038e8:	455e      	cmp	r6, fp
  4038ea:	4681      	mov	r9, r0
  4038ec:	4631      	mov	r1, r6
  4038ee:	f04f 0300 	mov.w	r3, #0
  4038f2:	f04f 020a 	mov.w	r2, #10
  4038f6:	4620      	mov	r0, r4
  4038f8:	f000 81eb 	beq.w	403cd2 <_dtoa_r+0x9fa>
  4038fc:	f001 f81e 	bl	40493c <__multadd>
  403900:	4659      	mov	r1, fp
  403902:	4606      	mov	r6, r0
  403904:	2300      	movs	r3, #0
  403906:	220a      	movs	r2, #10
  403908:	4620      	mov	r0, r4
  40390a:	f001 f817 	bl	40493c <__multadd>
  40390e:	4647      	mov	r7, r8
  403910:	4683      	mov	fp, r0
  403912:	e7a3      	b.n	40385c <_dtoa_r+0x584>
  403914:	201c      	movs	r0, #28
  403916:	9b08      	ldr	r3, [sp, #32]
  403918:	4403      	add	r3, r0
  40391a:	9308      	str	r3, [sp, #32]
  40391c:	9b06      	ldr	r3, [sp, #24]
  40391e:	4403      	add	r3, r0
  403920:	4405      	add	r5, r0
  403922:	9306      	str	r3, [sp, #24]
  403924:	e763      	b.n	4037ee <_dtoa_r+0x516>
  403926:	4641      	mov	r1, r8
  403928:	4648      	mov	r0, r9
  40392a:	f001 f9d5 	bl	404cd8 <__mcmp>
  40392e:	2800      	cmp	r0, #0
  403930:	f6bf af73 	bge.w	40381a <_dtoa_r+0x542>
  403934:	9f02      	ldr	r7, [sp, #8]
  403936:	4649      	mov	r1, r9
  403938:	2300      	movs	r3, #0
  40393a:	220a      	movs	r2, #10
  40393c:	4620      	mov	r0, r4
  40393e:	3f01      	subs	r7, #1
  403940:	9702      	str	r7, [sp, #8]
  403942:	f000 fffb 	bl	40493c <__multadd>
  403946:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403948:	4681      	mov	r9, r0
  40394a:	2b00      	cmp	r3, #0
  40394c:	f040 83b6 	bne.w	4040bc <_dtoa_r+0xde4>
  403950:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403952:	2b00      	cmp	r3, #0
  403954:	f340 83bf 	ble.w	4040d6 <_dtoa_r+0xdfe>
  403958:	930a      	str	r3, [sp, #40]	; 0x28
  40395a:	f8dd b010 	ldr.w	fp, [sp, #16]
  40395e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  403960:	465d      	mov	r5, fp
  403962:	e002      	b.n	40396a <_dtoa_r+0x692>
  403964:	f000 ffea 	bl	40493c <__multadd>
  403968:	4681      	mov	r9, r0
  40396a:	4641      	mov	r1, r8
  40396c:	4648      	mov	r0, r9
  40396e:	f7ff fc1f 	bl	4031b0 <quorem>
  403972:	f100 0a30 	add.w	sl, r0, #48	; 0x30
  403976:	f805 ab01 	strb.w	sl, [r5], #1
  40397a:	eba5 030b 	sub.w	r3, r5, fp
  40397e:	42bb      	cmp	r3, r7
  403980:	f04f 020a 	mov.w	r2, #10
  403984:	f04f 0300 	mov.w	r3, #0
  403988:	4649      	mov	r1, r9
  40398a:	4620      	mov	r0, r4
  40398c:	dbea      	blt.n	403964 <_dtoa_r+0x68c>
  40398e:	9b04      	ldr	r3, [sp, #16]
  403990:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403992:	2a01      	cmp	r2, #1
  403994:	bfac      	ite	ge
  403996:	189b      	addge	r3, r3, r2
  403998:	3301      	addlt	r3, #1
  40399a:	461d      	mov	r5, r3
  40399c:	f04f 0b00 	mov.w	fp, #0
  4039a0:	4649      	mov	r1, r9
  4039a2:	2201      	movs	r2, #1
  4039a4:	4620      	mov	r0, r4
  4039a6:	f001 f945 	bl	404c34 <__lshift>
  4039aa:	4641      	mov	r1, r8
  4039ac:	4681      	mov	r9, r0
  4039ae:	f001 f993 	bl	404cd8 <__mcmp>
  4039b2:	2800      	cmp	r0, #0
  4039b4:	f340 823d 	ble.w	403e32 <_dtoa_r+0xb5a>
  4039b8:	f815 2c01 	ldrb.w	r2, [r5, #-1]
  4039bc:	9904      	ldr	r1, [sp, #16]
  4039be:	1e6b      	subs	r3, r5, #1
  4039c0:	e004      	b.n	4039cc <_dtoa_r+0x6f4>
  4039c2:	428b      	cmp	r3, r1
  4039c4:	f000 81ae 	beq.w	403d24 <_dtoa_r+0xa4c>
  4039c8:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
  4039cc:	2a39      	cmp	r2, #57	; 0x39
  4039ce:	f103 0501 	add.w	r5, r3, #1
  4039d2:	d0f6      	beq.n	4039c2 <_dtoa_r+0x6ea>
  4039d4:	3201      	adds	r2, #1
  4039d6:	701a      	strb	r2, [r3, #0]
  4039d8:	4641      	mov	r1, r8
  4039da:	4620      	mov	r0, r4
  4039dc:	f000 ffa4 	bl	404928 <_Bfree>
  4039e0:	2e00      	cmp	r6, #0
  4039e2:	f43f ae3d 	beq.w	403660 <_dtoa_r+0x388>
  4039e6:	f1bb 0f00 	cmp.w	fp, #0
  4039ea:	d005      	beq.n	4039f8 <_dtoa_r+0x720>
  4039ec:	45b3      	cmp	fp, r6
  4039ee:	d003      	beq.n	4039f8 <_dtoa_r+0x720>
  4039f0:	4659      	mov	r1, fp
  4039f2:	4620      	mov	r0, r4
  4039f4:	f000 ff98 	bl	404928 <_Bfree>
  4039f8:	4631      	mov	r1, r6
  4039fa:	4620      	mov	r0, r4
  4039fc:	f000 ff94 	bl	404928 <_Bfree>
  403a00:	e62e      	b.n	403660 <_dtoa_r+0x388>
  403a02:	2300      	movs	r3, #0
  403a04:	930b      	str	r3, [sp, #44]	; 0x2c
  403a06:	9b02      	ldr	r3, [sp, #8]
  403a08:	9a25      	ldr	r2, [sp, #148]	; 0x94
  403a0a:	4413      	add	r3, r2
  403a0c:	930f      	str	r3, [sp, #60]	; 0x3c
  403a0e:	3301      	adds	r3, #1
  403a10:	2b01      	cmp	r3, #1
  403a12:	461f      	mov	r7, r3
  403a14:	461e      	mov	r6, r3
  403a16:	930a      	str	r3, [sp, #40]	; 0x28
  403a18:	bfb8      	it	lt
  403a1a:	2701      	movlt	r7, #1
  403a1c:	2100      	movs	r1, #0
  403a1e:	2f17      	cmp	r7, #23
  403a20:	6461      	str	r1, [r4, #68]	; 0x44
  403a22:	d90a      	bls.n	403a3a <_dtoa_r+0x762>
  403a24:	2201      	movs	r2, #1
  403a26:	2304      	movs	r3, #4
  403a28:	005b      	lsls	r3, r3, #1
  403a2a:	f103 0014 	add.w	r0, r3, #20
  403a2e:	4287      	cmp	r7, r0
  403a30:	4611      	mov	r1, r2
  403a32:	f102 0201 	add.w	r2, r2, #1
  403a36:	d2f7      	bcs.n	403a28 <_dtoa_r+0x750>
  403a38:	6461      	str	r1, [r4, #68]	; 0x44
  403a3a:	4620      	mov	r0, r4
  403a3c:	f000 ff4e 	bl	4048dc <_Balloc>
  403a40:	2e0e      	cmp	r6, #14
  403a42:	9004      	str	r0, [sp, #16]
  403a44:	6420      	str	r0, [r4, #64]	; 0x40
  403a46:	f63f ad41 	bhi.w	4034cc <_dtoa_r+0x1f4>
  403a4a:	2d00      	cmp	r5, #0
  403a4c:	f43f ad3e 	beq.w	4034cc <_dtoa_r+0x1f4>
  403a50:	9902      	ldr	r1, [sp, #8]
  403a52:	2900      	cmp	r1, #0
  403a54:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
  403a58:	f340 8202 	ble.w	403e60 <_dtoa_r+0xb88>
  403a5c:	4bb8      	ldr	r3, [pc, #736]	; (403d40 <_dtoa_r+0xa68>)
  403a5e:	f001 020f 	and.w	r2, r1, #15
  403a62:	110d      	asrs	r5, r1, #4
  403a64:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403a68:	06e9      	lsls	r1, r5, #27
  403a6a:	e9d3 6700 	ldrd	r6, r7, [r3]
  403a6e:	f140 81ae 	bpl.w	403dce <_dtoa_r+0xaf6>
  403a72:	4bb4      	ldr	r3, [pc, #720]	; (403d44 <_dtoa_r+0xa6c>)
  403a74:	4650      	mov	r0, sl
  403a76:	4659      	mov	r1, fp
  403a78:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  403a7c:	f002 fa04 	bl	405e88 <__aeabi_ddiv>
  403a80:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
  403a84:	f005 050f 	and.w	r5, r5, #15
  403a88:	f04f 0a03 	mov.w	sl, #3
  403a8c:	b18d      	cbz	r5, 403ab2 <_dtoa_r+0x7da>
  403a8e:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 403d44 <_dtoa_r+0xa6c>
  403a92:	07ea      	lsls	r2, r5, #31
  403a94:	d509      	bpl.n	403aaa <_dtoa_r+0x7d2>
  403a96:	4630      	mov	r0, r6
  403a98:	4639      	mov	r1, r7
  403a9a:	e9d8 2300 	ldrd	r2, r3, [r8]
  403a9e:	f002 f8c9 	bl	405c34 <__aeabi_dmul>
  403aa2:	f10a 0a01 	add.w	sl, sl, #1
  403aa6:	4606      	mov	r6, r0
  403aa8:	460f      	mov	r7, r1
  403aaa:	106d      	asrs	r5, r5, #1
  403aac:	f108 0808 	add.w	r8, r8, #8
  403ab0:	d1ef      	bne.n	403a92 <_dtoa_r+0x7ba>
  403ab2:	463b      	mov	r3, r7
  403ab4:	4632      	mov	r2, r6
  403ab6:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  403aba:	f002 f9e5 	bl	405e88 <__aeabi_ddiv>
  403abe:	4607      	mov	r7, r0
  403ac0:	4688      	mov	r8, r1
  403ac2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403ac4:	b143      	cbz	r3, 403ad8 <_dtoa_r+0x800>
  403ac6:	2200      	movs	r2, #0
  403ac8:	4b9f      	ldr	r3, [pc, #636]	; (403d48 <_dtoa_r+0xa70>)
  403aca:	4638      	mov	r0, r7
  403acc:	4641      	mov	r1, r8
  403ace:	f002 fb23 	bl	406118 <__aeabi_dcmplt>
  403ad2:	2800      	cmp	r0, #0
  403ad4:	f040 8286 	bne.w	403fe4 <_dtoa_r+0xd0c>
  403ad8:	4650      	mov	r0, sl
  403ada:	f002 f845 	bl	405b68 <__aeabi_i2d>
  403ade:	463a      	mov	r2, r7
  403ae0:	4643      	mov	r3, r8
  403ae2:	f002 f8a7 	bl	405c34 <__aeabi_dmul>
  403ae6:	4b99      	ldr	r3, [pc, #612]	; (403d4c <_dtoa_r+0xa74>)
  403ae8:	2200      	movs	r2, #0
  403aea:	f001 fef1 	bl	4058d0 <__adddf3>
  403aee:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403af0:	4605      	mov	r5, r0
  403af2:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  403af6:	2b00      	cmp	r3, #0
  403af8:	f000 813e 	beq.w	403d78 <_dtoa_r+0xaa0>
  403afc:	9b02      	ldr	r3, [sp, #8]
  403afe:	9315      	str	r3, [sp, #84]	; 0x54
  403b00:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403b02:	9312      	str	r3, [sp, #72]	; 0x48
  403b04:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403b06:	2b00      	cmp	r3, #0
  403b08:	f000 81fa 	beq.w	403f00 <_dtoa_r+0xc28>
  403b0c:	9a12      	ldr	r2, [sp, #72]	; 0x48
  403b0e:	4b8c      	ldr	r3, [pc, #560]	; (403d40 <_dtoa_r+0xa68>)
  403b10:	498f      	ldr	r1, [pc, #572]	; (403d50 <_dtoa_r+0xa78>)
  403b12:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403b16:	e953 2302 	ldrd	r2, r3, [r3, #-8]
  403b1a:	2000      	movs	r0, #0
  403b1c:	f002 f9b4 	bl	405e88 <__aeabi_ddiv>
  403b20:	462a      	mov	r2, r5
  403b22:	4633      	mov	r3, r6
  403b24:	f001 fed2 	bl	4058cc <__aeabi_dsub>
  403b28:	4682      	mov	sl, r0
  403b2a:	468b      	mov	fp, r1
  403b2c:	4638      	mov	r0, r7
  403b2e:	4641      	mov	r1, r8
  403b30:	f002 fb30 	bl	406194 <__aeabi_d2iz>
  403b34:	4605      	mov	r5, r0
  403b36:	f002 f817 	bl	405b68 <__aeabi_i2d>
  403b3a:	4602      	mov	r2, r0
  403b3c:	460b      	mov	r3, r1
  403b3e:	4638      	mov	r0, r7
  403b40:	4641      	mov	r1, r8
  403b42:	f001 fec3 	bl	4058cc <__aeabi_dsub>
  403b46:	3530      	adds	r5, #48	; 0x30
  403b48:	fa5f f885 	uxtb.w	r8, r5
  403b4c:	9d04      	ldr	r5, [sp, #16]
  403b4e:	4606      	mov	r6, r0
  403b50:	460f      	mov	r7, r1
  403b52:	f885 8000 	strb.w	r8, [r5]
  403b56:	4602      	mov	r2, r0
  403b58:	460b      	mov	r3, r1
  403b5a:	4650      	mov	r0, sl
  403b5c:	4659      	mov	r1, fp
  403b5e:	3501      	adds	r5, #1
  403b60:	f002 faf8 	bl	406154 <__aeabi_dcmpgt>
  403b64:	2800      	cmp	r0, #0
  403b66:	d154      	bne.n	403c12 <_dtoa_r+0x93a>
  403b68:	4632      	mov	r2, r6
  403b6a:	463b      	mov	r3, r7
  403b6c:	2000      	movs	r0, #0
  403b6e:	4976      	ldr	r1, [pc, #472]	; (403d48 <_dtoa_r+0xa70>)
  403b70:	f001 feac 	bl	4058cc <__aeabi_dsub>
  403b74:	4602      	mov	r2, r0
  403b76:	460b      	mov	r3, r1
  403b78:	4650      	mov	r0, sl
  403b7a:	4659      	mov	r1, fp
  403b7c:	f002 faea 	bl	406154 <__aeabi_dcmpgt>
  403b80:	2800      	cmp	r0, #0
  403b82:	f040 8270 	bne.w	404066 <_dtoa_r+0xd8e>
  403b86:	9a12      	ldr	r2, [sp, #72]	; 0x48
  403b88:	2a01      	cmp	r2, #1
  403b8a:	f000 8111 	beq.w	403db0 <_dtoa_r+0xad8>
  403b8e:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403b90:	9a04      	ldr	r2, [sp, #16]
  403b92:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  403b96:	4413      	add	r3, r2
  403b98:	4699      	mov	r9, r3
  403b9a:	e00d      	b.n	403bb8 <_dtoa_r+0x8e0>
  403b9c:	2000      	movs	r0, #0
  403b9e:	496a      	ldr	r1, [pc, #424]	; (403d48 <_dtoa_r+0xa70>)
  403ba0:	f001 fe94 	bl	4058cc <__aeabi_dsub>
  403ba4:	4652      	mov	r2, sl
  403ba6:	465b      	mov	r3, fp
  403ba8:	f002 fab6 	bl	406118 <__aeabi_dcmplt>
  403bac:	2800      	cmp	r0, #0
  403bae:	f040 8258 	bne.w	404062 <_dtoa_r+0xd8a>
  403bb2:	454d      	cmp	r5, r9
  403bb4:	f000 80fa 	beq.w	403dac <_dtoa_r+0xad4>
  403bb8:	4650      	mov	r0, sl
  403bba:	4659      	mov	r1, fp
  403bbc:	2200      	movs	r2, #0
  403bbe:	4b65      	ldr	r3, [pc, #404]	; (403d54 <_dtoa_r+0xa7c>)
  403bc0:	f002 f838 	bl	405c34 <__aeabi_dmul>
  403bc4:	2200      	movs	r2, #0
  403bc6:	4b63      	ldr	r3, [pc, #396]	; (403d54 <_dtoa_r+0xa7c>)
  403bc8:	4682      	mov	sl, r0
  403bca:	468b      	mov	fp, r1
  403bcc:	4630      	mov	r0, r6
  403bce:	4639      	mov	r1, r7
  403bd0:	f002 f830 	bl	405c34 <__aeabi_dmul>
  403bd4:	460f      	mov	r7, r1
  403bd6:	4606      	mov	r6, r0
  403bd8:	f002 fadc 	bl	406194 <__aeabi_d2iz>
  403bdc:	4680      	mov	r8, r0
  403bde:	f001 ffc3 	bl	405b68 <__aeabi_i2d>
  403be2:	4602      	mov	r2, r0
  403be4:	460b      	mov	r3, r1
  403be6:	4630      	mov	r0, r6
  403be8:	4639      	mov	r1, r7
  403bea:	f001 fe6f 	bl	4058cc <__aeabi_dsub>
  403bee:	f108 0830 	add.w	r8, r8, #48	; 0x30
  403bf2:	fa5f f888 	uxtb.w	r8, r8
  403bf6:	4652      	mov	r2, sl
  403bf8:	465b      	mov	r3, fp
  403bfa:	f805 8b01 	strb.w	r8, [r5], #1
  403bfe:	4606      	mov	r6, r0
  403c00:	460f      	mov	r7, r1
  403c02:	f002 fa89 	bl	406118 <__aeabi_dcmplt>
  403c06:	4632      	mov	r2, r6
  403c08:	463b      	mov	r3, r7
  403c0a:	2800      	cmp	r0, #0
  403c0c:	d0c6      	beq.n	403b9c <_dtoa_r+0x8c4>
  403c0e:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  403c12:	9b15      	ldr	r3, [sp, #84]	; 0x54
  403c14:	9302      	str	r3, [sp, #8]
  403c16:	e523      	b.n	403660 <_dtoa_r+0x388>
  403c18:	2300      	movs	r3, #0
  403c1a:	930b      	str	r3, [sp, #44]	; 0x2c
  403c1c:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403c1e:	2b00      	cmp	r3, #0
  403c20:	f340 80dc 	ble.w	403ddc <_dtoa_r+0xb04>
  403c24:	461f      	mov	r7, r3
  403c26:	461e      	mov	r6, r3
  403c28:	930f      	str	r3, [sp, #60]	; 0x3c
  403c2a:	930a      	str	r3, [sp, #40]	; 0x28
  403c2c:	e6f6      	b.n	403a1c <_dtoa_r+0x744>
  403c2e:	2301      	movs	r3, #1
  403c30:	930b      	str	r3, [sp, #44]	; 0x2c
  403c32:	e7f3      	b.n	403c1c <_dtoa_r+0x944>
  403c34:	f1ba 0f00 	cmp.w	sl, #0
  403c38:	f47f ada8 	bne.w	40378c <_dtoa_r+0x4b4>
  403c3c:	f3cb 0313 	ubfx	r3, fp, #0, #20
  403c40:	2b00      	cmp	r3, #0
  403c42:	f47f adba 	bne.w	4037ba <_dtoa_r+0x4e2>
  403c46:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
  403c4a:	0d3f      	lsrs	r7, r7, #20
  403c4c:	053f      	lsls	r7, r7, #20
  403c4e:	2f00      	cmp	r7, #0
  403c50:	f000 820d 	beq.w	40406e <_dtoa_r+0xd96>
  403c54:	9b08      	ldr	r3, [sp, #32]
  403c56:	3301      	adds	r3, #1
  403c58:	9308      	str	r3, [sp, #32]
  403c5a:	9b06      	ldr	r3, [sp, #24]
  403c5c:	3301      	adds	r3, #1
  403c5e:	9306      	str	r3, [sp, #24]
  403c60:	2301      	movs	r3, #1
  403c62:	930c      	str	r3, [sp, #48]	; 0x30
  403c64:	e5ab      	b.n	4037be <_dtoa_r+0x4e6>
  403c66:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403c68:	2b00      	cmp	r3, #0
  403c6a:	f73f ac42 	bgt.w	4034f2 <_dtoa_r+0x21a>
  403c6e:	f040 8221 	bne.w	4040b4 <_dtoa_r+0xddc>
  403c72:	2200      	movs	r2, #0
  403c74:	4b38      	ldr	r3, [pc, #224]	; (403d58 <_dtoa_r+0xa80>)
  403c76:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403c7a:	f001 ffdb 	bl	405c34 <__aeabi_dmul>
  403c7e:	4652      	mov	r2, sl
  403c80:	465b      	mov	r3, fp
  403c82:	f002 fa5d 	bl	406140 <__aeabi_dcmpge>
  403c86:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  403c8a:	4646      	mov	r6, r8
  403c8c:	2800      	cmp	r0, #0
  403c8e:	d041      	beq.n	403d14 <_dtoa_r+0xa3c>
  403c90:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403c92:	9d04      	ldr	r5, [sp, #16]
  403c94:	43db      	mvns	r3, r3
  403c96:	9302      	str	r3, [sp, #8]
  403c98:	4641      	mov	r1, r8
  403c9a:	4620      	mov	r0, r4
  403c9c:	f000 fe44 	bl	404928 <_Bfree>
  403ca0:	2e00      	cmp	r6, #0
  403ca2:	f43f acdd 	beq.w	403660 <_dtoa_r+0x388>
  403ca6:	e6a7      	b.n	4039f8 <_dtoa_r+0x720>
  403ca8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403caa:	4649      	mov	r1, r9
  403cac:	4620      	mov	r0, r4
  403cae:	f000 ff71 	bl	404b94 <__pow5mult>
  403cb2:	4681      	mov	r9, r0
  403cb4:	e558      	b.n	403768 <_dtoa_r+0x490>
  403cb6:	9a14      	ldr	r2, [sp, #80]	; 0x50
  403cb8:	2a00      	cmp	r2, #0
  403cba:	f000 8187 	beq.w	403fcc <_dtoa_r+0xcf4>
  403cbe:	f203 4333 	addw	r3, r3, #1075	; 0x433
  403cc2:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  403cc4:	9d08      	ldr	r5, [sp, #32]
  403cc6:	e4f2      	b.n	4036ae <_dtoa_r+0x3d6>
  403cc8:	f1ba 0f00 	cmp.w	sl, #0
  403ccc:	f47f ad75 	bne.w	4037ba <_dtoa_r+0x4e2>
  403cd0:	e7b4      	b.n	403c3c <_dtoa_r+0x964>
  403cd2:	f000 fe33 	bl	40493c <__multadd>
  403cd6:	4647      	mov	r7, r8
  403cd8:	4606      	mov	r6, r0
  403cda:	4683      	mov	fp, r0
  403cdc:	e5be      	b.n	40385c <_dtoa_r+0x584>
  403cde:	4601      	mov	r1, r0
  403ce0:	4620      	mov	r0, r4
  403ce2:	9306      	str	r3, [sp, #24]
  403ce4:	f000 fe20 	bl	404928 <_Bfree>
  403ce8:	2201      	movs	r2, #1
  403cea:	9b06      	ldr	r3, [sp, #24]
  403cec:	e5e0      	b.n	4038b0 <_dtoa_r+0x5d8>
  403cee:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403cf0:	2b02      	cmp	r3, #2
  403cf2:	f77f ad96 	ble.w	403822 <_dtoa_r+0x54a>
  403cf6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403cf8:	2b00      	cmp	r3, #0
  403cfa:	d1c9      	bne.n	403c90 <_dtoa_r+0x9b8>
  403cfc:	4641      	mov	r1, r8
  403cfe:	2205      	movs	r2, #5
  403d00:	4620      	mov	r0, r4
  403d02:	f000 fe1b 	bl	40493c <__multadd>
  403d06:	4601      	mov	r1, r0
  403d08:	4680      	mov	r8, r0
  403d0a:	4648      	mov	r0, r9
  403d0c:	f000 ffe4 	bl	404cd8 <__mcmp>
  403d10:	2800      	cmp	r0, #0
  403d12:	ddbd      	ble.n	403c90 <_dtoa_r+0x9b8>
  403d14:	9a02      	ldr	r2, [sp, #8]
  403d16:	9904      	ldr	r1, [sp, #16]
  403d18:	2331      	movs	r3, #49	; 0x31
  403d1a:	3201      	adds	r2, #1
  403d1c:	9202      	str	r2, [sp, #8]
  403d1e:	700b      	strb	r3, [r1, #0]
  403d20:	1c4d      	adds	r5, r1, #1
  403d22:	e7b9      	b.n	403c98 <_dtoa_r+0x9c0>
  403d24:	9a02      	ldr	r2, [sp, #8]
  403d26:	3201      	adds	r2, #1
  403d28:	9202      	str	r2, [sp, #8]
  403d2a:	9a04      	ldr	r2, [sp, #16]
  403d2c:	2331      	movs	r3, #49	; 0x31
  403d2e:	7013      	strb	r3, [r2, #0]
  403d30:	e652      	b.n	4039d8 <_dtoa_r+0x700>
  403d32:	2301      	movs	r3, #1
  403d34:	930b      	str	r3, [sp, #44]	; 0x2c
  403d36:	e666      	b.n	403a06 <_dtoa_r+0x72e>
  403d38:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  403d3c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  403d3e:	e48f      	b.n	403660 <_dtoa_r+0x388>
  403d40:	00406d08 	.word	0x00406d08
  403d44:	00406ce0 	.word	0x00406ce0
  403d48:	3ff00000 	.word	0x3ff00000
  403d4c:	401c0000 	.word	0x401c0000
  403d50:	3fe00000 	.word	0x3fe00000
  403d54:	40240000 	.word	0x40240000
  403d58:	40140000 	.word	0x40140000
  403d5c:	4650      	mov	r0, sl
  403d5e:	f001 ff03 	bl	405b68 <__aeabi_i2d>
  403d62:	463a      	mov	r2, r7
  403d64:	4643      	mov	r3, r8
  403d66:	f001 ff65 	bl	405c34 <__aeabi_dmul>
  403d6a:	2200      	movs	r2, #0
  403d6c:	4bc1      	ldr	r3, [pc, #772]	; (404074 <_dtoa_r+0xd9c>)
  403d6e:	f001 fdaf 	bl	4058d0 <__adddf3>
  403d72:	4605      	mov	r5, r0
  403d74:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  403d78:	4641      	mov	r1, r8
  403d7a:	2200      	movs	r2, #0
  403d7c:	4bbe      	ldr	r3, [pc, #760]	; (404078 <_dtoa_r+0xda0>)
  403d7e:	4638      	mov	r0, r7
  403d80:	f001 fda4 	bl	4058cc <__aeabi_dsub>
  403d84:	462a      	mov	r2, r5
  403d86:	4633      	mov	r3, r6
  403d88:	4682      	mov	sl, r0
  403d8a:	468b      	mov	fp, r1
  403d8c:	f002 f9e2 	bl	406154 <__aeabi_dcmpgt>
  403d90:	4680      	mov	r8, r0
  403d92:	2800      	cmp	r0, #0
  403d94:	f040 8110 	bne.w	403fb8 <_dtoa_r+0xce0>
  403d98:	462a      	mov	r2, r5
  403d9a:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
  403d9e:	4650      	mov	r0, sl
  403da0:	4659      	mov	r1, fp
  403da2:	f002 f9b9 	bl	406118 <__aeabi_dcmplt>
  403da6:	b118      	cbz	r0, 403db0 <_dtoa_r+0xad8>
  403da8:	4646      	mov	r6, r8
  403daa:	e771      	b.n	403c90 <_dtoa_r+0x9b8>
  403dac:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  403db0:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
  403db4:	f7ff bb8a 	b.w	4034cc <_dtoa_r+0x1f4>
  403db8:	9804      	ldr	r0, [sp, #16]
  403dba:	f7ff babb 	b.w	403334 <_dtoa_r+0x5c>
  403dbe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403dc0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  403dc2:	970c      	str	r7, [sp, #48]	; 0x30
  403dc4:	1afb      	subs	r3, r7, r3
  403dc6:	441a      	add	r2, r3
  403dc8:	920d      	str	r2, [sp, #52]	; 0x34
  403dca:	2700      	movs	r7, #0
  403dcc:	e469      	b.n	4036a2 <_dtoa_r+0x3ca>
  403dce:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
  403dd2:	f04f 0a02 	mov.w	sl, #2
  403dd6:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  403dda:	e657      	b.n	403a8c <_dtoa_r+0x7b4>
  403ddc:	2100      	movs	r1, #0
  403dde:	2301      	movs	r3, #1
  403de0:	6461      	str	r1, [r4, #68]	; 0x44
  403de2:	4620      	mov	r0, r4
  403de4:	9325      	str	r3, [sp, #148]	; 0x94
  403de6:	f000 fd79 	bl	4048dc <_Balloc>
  403dea:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403dec:	9004      	str	r0, [sp, #16]
  403dee:	6420      	str	r0, [r4, #64]	; 0x40
  403df0:	930a      	str	r3, [sp, #40]	; 0x28
  403df2:	930f      	str	r3, [sp, #60]	; 0x3c
  403df4:	e629      	b.n	403a4a <_dtoa_r+0x772>
  403df6:	2a00      	cmp	r2, #0
  403df8:	46d0      	mov	r8, sl
  403dfa:	f8cd b018 	str.w	fp, [sp, #24]
  403dfe:	469a      	mov	sl, r3
  403e00:	dd11      	ble.n	403e26 <_dtoa_r+0xb4e>
  403e02:	4649      	mov	r1, r9
  403e04:	2201      	movs	r2, #1
  403e06:	4620      	mov	r0, r4
  403e08:	f000 ff14 	bl	404c34 <__lshift>
  403e0c:	4641      	mov	r1, r8
  403e0e:	4681      	mov	r9, r0
  403e10:	f000 ff62 	bl	404cd8 <__mcmp>
  403e14:	2800      	cmp	r0, #0
  403e16:	f340 8146 	ble.w	4040a6 <_dtoa_r+0xdce>
  403e1a:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
  403e1e:	f000 8106 	beq.w	40402e <_dtoa_r+0xd56>
  403e22:	f105 0a31 	add.w	sl, r5, #49	; 0x31
  403e26:	46b3      	mov	fp, r6
  403e28:	f887 a000 	strb.w	sl, [r7]
  403e2c:	1c7d      	adds	r5, r7, #1
  403e2e:	9e06      	ldr	r6, [sp, #24]
  403e30:	e5d2      	b.n	4039d8 <_dtoa_r+0x700>
  403e32:	d104      	bne.n	403e3e <_dtoa_r+0xb66>
  403e34:	f01a 0f01 	tst.w	sl, #1
  403e38:	d001      	beq.n	403e3e <_dtoa_r+0xb66>
  403e3a:	e5bd      	b.n	4039b8 <_dtoa_r+0x6e0>
  403e3c:	4615      	mov	r5, r2
  403e3e:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  403e42:	2b30      	cmp	r3, #48	; 0x30
  403e44:	f105 32ff 	add.w	r2, r5, #4294967295
  403e48:	d0f8      	beq.n	403e3c <_dtoa_r+0xb64>
  403e4a:	e5c5      	b.n	4039d8 <_dtoa_r+0x700>
  403e4c:	9904      	ldr	r1, [sp, #16]
  403e4e:	2230      	movs	r2, #48	; 0x30
  403e50:	700a      	strb	r2, [r1, #0]
  403e52:	9a02      	ldr	r2, [sp, #8]
  403e54:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  403e58:	3201      	adds	r2, #1
  403e5a:	9202      	str	r2, [sp, #8]
  403e5c:	f7ff bbfc 	b.w	403658 <_dtoa_r+0x380>
  403e60:	f000 80bb 	beq.w	403fda <_dtoa_r+0xd02>
  403e64:	9b02      	ldr	r3, [sp, #8]
  403e66:	425d      	negs	r5, r3
  403e68:	4b84      	ldr	r3, [pc, #528]	; (40407c <_dtoa_r+0xda4>)
  403e6a:	f005 020f 	and.w	r2, r5, #15
  403e6e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403e72:	e9d3 2300 	ldrd	r2, r3, [r3]
  403e76:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  403e7a:	f001 fedb 	bl	405c34 <__aeabi_dmul>
  403e7e:	112d      	asrs	r5, r5, #4
  403e80:	4607      	mov	r7, r0
  403e82:	4688      	mov	r8, r1
  403e84:	f000 812c 	beq.w	4040e0 <_dtoa_r+0xe08>
  403e88:	4e7d      	ldr	r6, [pc, #500]	; (404080 <_dtoa_r+0xda8>)
  403e8a:	f04f 0a02 	mov.w	sl, #2
  403e8e:	07eb      	lsls	r3, r5, #31
  403e90:	d509      	bpl.n	403ea6 <_dtoa_r+0xbce>
  403e92:	4638      	mov	r0, r7
  403e94:	4641      	mov	r1, r8
  403e96:	e9d6 2300 	ldrd	r2, r3, [r6]
  403e9a:	f001 fecb 	bl	405c34 <__aeabi_dmul>
  403e9e:	f10a 0a01 	add.w	sl, sl, #1
  403ea2:	4607      	mov	r7, r0
  403ea4:	4688      	mov	r8, r1
  403ea6:	106d      	asrs	r5, r5, #1
  403ea8:	f106 0608 	add.w	r6, r6, #8
  403eac:	d1ef      	bne.n	403e8e <_dtoa_r+0xbb6>
  403eae:	e608      	b.n	403ac2 <_dtoa_r+0x7ea>
  403eb0:	6871      	ldr	r1, [r6, #4]
  403eb2:	4620      	mov	r0, r4
  403eb4:	f000 fd12 	bl	4048dc <_Balloc>
  403eb8:	6933      	ldr	r3, [r6, #16]
  403eba:	3302      	adds	r3, #2
  403ebc:	009a      	lsls	r2, r3, #2
  403ebe:	4605      	mov	r5, r0
  403ec0:	f106 010c 	add.w	r1, r6, #12
  403ec4:	300c      	adds	r0, #12
  403ec6:	f000 fc63 	bl	404790 <memcpy>
  403eca:	4629      	mov	r1, r5
  403ecc:	2201      	movs	r2, #1
  403ece:	4620      	mov	r0, r4
  403ed0:	f000 feb0 	bl	404c34 <__lshift>
  403ed4:	9006      	str	r0, [sp, #24]
  403ed6:	e4b5      	b.n	403844 <_dtoa_r+0x56c>
  403ed8:	2b39      	cmp	r3, #57	; 0x39
  403eda:	f8cd b018 	str.w	fp, [sp, #24]
  403ede:	46d0      	mov	r8, sl
  403ee0:	f000 80a5 	beq.w	40402e <_dtoa_r+0xd56>
  403ee4:	f103 0a01 	add.w	sl, r3, #1
  403ee8:	46b3      	mov	fp, r6
  403eea:	f887 a000 	strb.w	sl, [r7]
  403eee:	1c7d      	adds	r5, r7, #1
  403ef0:	9e06      	ldr	r6, [sp, #24]
  403ef2:	e571      	b.n	4039d8 <_dtoa_r+0x700>
  403ef4:	465a      	mov	r2, fp
  403ef6:	46d0      	mov	r8, sl
  403ef8:	46b3      	mov	fp, r6
  403efa:	469a      	mov	sl, r3
  403efc:	4616      	mov	r6, r2
  403efe:	e54f      	b.n	4039a0 <_dtoa_r+0x6c8>
  403f00:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403f02:	495e      	ldr	r1, [pc, #376]	; (40407c <_dtoa_r+0xda4>)
  403f04:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
  403f08:	462a      	mov	r2, r5
  403f0a:	4633      	mov	r3, r6
  403f0c:	e951 0102 	ldrd	r0, r1, [r1, #-8]
  403f10:	f001 fe90 	bl	405c34 <__aeabi_dmul>
  403f14:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
  403f18:	4638      	mov	r0, r7
  403f1a:	4641      	mov	r1, r8
  403f1c:	f002 f93a 	bl	406194 <__aeabi_d2iz>
  403f20:	4605      	mov	r5, r0
  403f22:	f001 fe21 	bl	405b68 <__aeabi_i2d>
  403f26:	460b      	mov	r3, r1
  403f28:	4602      	mov	r2, r0
  403f2a:	4641      	mov	r1, r8
  403f2c:	4638      	mov	r0, r7
  403f2e:	f001 fccd 	bl	4058cc <__aeabi_dsub>
  403f32:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403f34:	460f      	mov	r7, r1
  403f36:	9904      	ldr	r1, [sp, #16]
  403f38:	3530      	adds	r5, #48	; 0x30
  403f3a:	2b01      	cmp	r3, #1
  403f3c:	700d      	strb	r5, [r1, #0]
  403f3e:	4606      	mov	r6, r0
  403f40:	f101 0501 	add.w	r5, r1, #1
  403f44:	d026      	beq.n	403f94 <_dtoa_r+0xcbc>
  403f46:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403f48:	9a04      	ldr	r2, [sp, #16]
  403f4a:	f8df b13c 	ldr.w	fp, [pc, #316]	; 404088 <_dtoa_r+0xdb0>
  403f4e:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  403f52:	4413      	add	r3, r2
  403f54:	f04f 0a00 	mov.w	sl, #0
  403f58:	4699      	mov	r9, r3
  403f5a:	4652      	mov	r2, sl
  403f5c:	465b      	mov	r3, fp
  403f5e:	4630      	mov	r0, r6
  403f60:	4639      	mov	r1, r7
  403f62:	f001 fe67 	bl	405c34 <__aeabi_dmul>
  403f66:	460f      	mov	r7, r1
  403f68:	4606      	mov	r6, r0
  403f6a:	f002 f913 	bl	406194 <__aeabi_d2iz>
  403f6e:	4680      	mov	r8, r0
  403f70:	f001 fdfa 	bl	405b68 <__aeabi_i2d>
  403f74:	f108 0830 	add.w	r8, r8, #48	; 0x30
  403f78:	4602      	mov	r2, r0
  403f7a:	460b      	mov	r3, r1
  403f7c:	4630      	mov	r0, r6
  403f7e:	4639      	mov	r1, r7
  403f80:	f001 fca4 	bl	4058cc <__aeabi_dsub>
  403f84:	f805 8b01 	strb.w	r8, [r5], #1
  403f88:	454d      	cmp	r5, r9
  403f8a:	4606      	mov	r6, r0
  403f8c:	460f      	mov	r7, r1
  403f8e:	d1e4      	bne.n	403f5a <_dtoa_r+0xc82>
  403f90:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  403f94:	4b3b      	ldr	r3, [pc, #236]	; (404084 <_dtoa_r+0xdac>)
  403f96:	2200      	movs	r2, #0
  403f98:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
  403f9c:	f001 fc98 	bl	4058d0 <__adddf3>
  403fa0:	4632      	mov	r2, r6
  403fa2:	463b      	mov	r3, r7
  403fa4:	f002 f8b8 	bl	406118 <__aeabi_dcmplt>
  403fa8:	2800      	cmp	r0, #0
  403faa:	d046      	beq.n	40403a <_dtoa_r+0xd62>
  403fac:	9b15      	ldr	r3, [sp, #84]	; 0x54
  403fae:	9302      	str	r3, [sp, #8]
  403fb0:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  403fb4:	f7ff bb43 	b.w	40363e <_dtoa_r+0x366>
  403fb8:	f04f 0800 	mov.w	r8, #0
  403fbc:	4646      	mov	r6, r8
  403fbe:	e6a9      	b.n	403d14 <_dtoa_r+0xa3c>
  403fc0:	9b08      	ldr	r3, [sp, #32]
  403fc2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403fc4:	1a9d      	subs	r5, r3, r2
  403fc6:	2300      	movs	r3, #0
  403fc8:	f7ff bb71 	b.w	4036ae <_dtoa_r+0x3d6>
  403fcc:	9b18      	ldr	r3, [sp, #96]	; 0x60
  403fce:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  403fd0:	9d08      	ldr	r5, [sp, #32]
  403fd2:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  403fd6:	f7ff bb6a 	b.w	4036ae <_dtoa_r+0x3d6>
  403fda:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
  403fde:	f04f 0a02 	mov.w	sl, #2
  403fe2:	e56e      	b.n	403ac2 <_dtoa_r+0x7ea>
  403fe4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403fe6:	2b00      	cmp	r3, #0
  403fe8:	f43f aeb8 	beq.w	403d5c <_dtoa_r+0xa84>
  403fec:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403fee:	2b00      	cmp	r3, #0
  403ff0:	f77f aede 	ble.w	403db0 <_dtoa_r+0xad8>
  403ff4:	2200      	movs	r2, #0
  403ff6:	4b24      	ldr	r3, [pc, #144]	; (404088 <_dtoa_r+0xdb0>)
  403ff8:	4638      	mov	r0, r7
  403ffa:	4641      	mov	r1, r8
  403ffc:	f001 fe1a 	bl	405c34 <__aeabi_dmul>
  404000:	4607      	mov	r7, r0
  404002:	4688      	mov	r8, r1
  404004:	f10a 0001 	add.w	r0, sl, #1
  404008:	f001 fdae 	bl	405b68 <__aeabi_i2d>
  40400c:	463a      	mov	r2, r7
  40400e:	4643      	mov	r3, r8
  404010:	f001 fe10 	bl	405c34 <__aeabi_dmul>
  404014:	2200      	movs	r2, #0
  404016:	4b17      	ldr	r3, [pc, #92]	; (404074 <_dtoa_r+0xd9c>)
  404018:	f001 fc5a 	bl	4058d0 <__adddf3>
  40401c:	9a02      	ldr	r2, [sp, #8]
  40401e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404020:	9312      	str	r3, [sp, #72]	; 0x48
  404022:	3a01      	subs	r2, #1
  404024:	4605      	mov	r5, r0
  404026:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  40402a:	9215      	str	r2, [sp, #84]	; 0x54
  40402c:	e56a      	b.n	403b04 <_dtoa_r+0x82c>
  40402e:	2239      	movs	r2, #57	; 0x39
  404030:	46b3      	mov	fp, r6
  404032:	703a      	strb	r2, [r7, #0]
  404034:	9e06      	ldr	r6, [sp, #24]
  404036:	1c7d      	adds	r5, r7, #1
  404038:	e4c0      	b.n	4039bc <_dtoa_r+0x6e4>
  40403a:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
  40403e:	2000      	movs	r0, #0
  404040:	4910      	ldr	r1, [pc, #64]	; (404084 <_dtoa_r+0xdac>)
  404042:	f001 fc43 	bl	4058cc <__aeabi_dsub>
  404046:	4632      	mov	r2, r6
  404048:	463b      	mov	r3, r7
  40404a:	f002 f883 	bl	406154 <__aeabi_dcmpgt>
  40404e:	b908      	cbnz	r0, 404054 <_dtoa_r+0xd7c>
  404050:	e6ae      	b.n	403db0 <_dtoa_r+0xad8>
  404052:	4615      	mov	r5, r2
  404054:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  404058:	2b30      	cmp	r3, #48	; 0x30
  40405a:	f105 32ff 	add.w	r2, r5, #4294967295
  40405e:	d0f8      	beq.n	404052 <_dtoa_r+0xd7a>
  404060:	e5d7      	b.n	403c12 <_dtoa_r+0x93a>
  404062:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  404066:	9b15      	ldr	r3, [sp, #84]	; 0x54
  404068:	9302      	str	r3, [sp, #8]
  40406a:	f7ff bae8 	b.w	40363e <_dtoa_r+0x366>
  40406e:	970c      	str	r7, [sp, #48]	; 0x30
  404070:	f7ff bba5 	b.w	4037be <_dtoa_r+0x4e6>
  404074:	401c0000 	.word	0x401c0000
  404078:	40140000 	.word	0x40140000
  40407c:	00406d08 	.word	0x00406d08
  404080:	00406ce0 	.word	0x00406ce0
  404084:	3fe00000 	.word	0x3fe00000
  404088:	40240000 	.word	0x40240000
  40408c:	2b39      	cmp	r3, #57	; 0x39
  40408e:	f8cd b018 	str.w	fp, [sp, #24]
  404092:	46d0      	mov	r8, sl
  404094:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  404098:	469a      	mov	sl, r3
  40409a:	d0c8      	beq.n	40402e <_dtoa_r+0xd56>
  40409c:	f1bb 0f00 	cmp.w	fp, #0
  4040a0:	f73f aebf 	bgt.w	403e22 <_dtoa_r+0xb4a>
  4040a4:	e6bf      	b.n	403e26 <_dtoa_r+0xb4e>
  4040a6:	f47f aebe 	bne.w	403e26 <_dtoa_r+0xb4e>
  4040aa:	f01a 0f01 	tst.w	sl, #1
  4040ae:	f43f aeba 	beq.w	403e26 <_dtoa_r+0xb4e>
  4040b2:	e6b2      	b.n	403e1a <_dtoa_r+0xb42>
  4040b4:	f04f 0800 	mov.w	r8, #0
  4040b8:	4646      	mov	r6, r8
  4040ba:	e5e9      	b.n	403c90 <_dtoa_r+0x9b8>
  4040bc:	4631      	mov	r1, r6
  4040be:	2300      	movs	r3, #0
  4040c0:	220a      	movs	r2, #10
  4040c2:	4620      	mov	r0, r4
  4040c4:	f000 fc3a 	bl	40493c <__multadd>
  4040c8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4040ca:	2b00      	cmp	r3, #0
  4040cc:	4606      	mov	r6, r0
  4040ce:	dd0a      	ble.n	4040e6 <_dtoa_r+0xe0e>
  4040d0:	930a      	str	r3, [sp, #40]	; 0x28
  4040d2:	f7ff bbaa 	b.w	40382a <_dtoa_r+0x552>
  4040d6:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4040d8:	2b02      	cmp	r3, #2
  4040da:	dc23      	bgt.n	404124 <_dtoa_r+0xe4c>
  4040dc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4040de:	e43b      	b.n	403958 <_dtoa_r+0x680>
  4040e0:	f04f 0a02 	mov.w	sl, #2
  4040e4:	e4ed      	b.n	403ac2 <_dtoa_r+0x7ea>
  4040e6:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4040e8:	2b02      	cmp	r3, #2
  4040ea:	dc1b      	bgt.n	404124 <_dtoa_r+0xe4c>
  4040ec:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4040ee:	e7ef      	b.n	4040d0 <_dtoa_r+0xdf8>
  4040f0:	2500      	movs	r5, #0
  4040f2:	6465      	str	r5, [r4, #68]	; 0x44
  4040f4:	4629      	mov	r1, r5
  4040f6:	4620      	mov	r0, r4
  4040f8:	f000 fbf0 	bl	4048dc <_Balloc>
  4040fc:	f04f 33ff 	mov.w	r3, #4294967295
  404100:	930a      	str	r3, [sp, #40]	; 0x28
  404102:	930f      	str	r3, [sp, #60]	; 0x3c
  404104:	2301      	movs	r3, #1
  404106:	9004      	str	r0, [sp, #16]
  404108:	9525      	str	r5, [sp, #148]	; 0x94
  40410a:	6420      	str	r0, [r4, #64]	; 0x40
  40410c:	930b      	str	r3, [sp, #44]	; 0x2c
  40410e:	f7ff b9dd 	b.w	4034cc <_dtoa_r+0x1f4>
  404112:	2501      	movs	r5, #1
  404114:	f7ff b9a5 	b.w	403462 <_dtoa_r+0x18a>
  404118:	f43f ab69 	beq.w	4037ee <_dtoa_r+0x516>
  40411c:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
  404120:	f7ff bbf9 	b.w	403916 <_dtoa_r+0x63e>
  404124:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404126:	930a      	str	r3, [sp, #40]	; 0x28
  404128:	e5e5      	b.n	403cf6 <_dtoa_r+0xa1e>
  40412a:	bf00      	nop

0040412c <__libc_fini_array>:
  40412c:	b538      	push	{r3, r4, r5, lr}
  40412e:	4c0a      	ldr	r4, [pc, #40]	; (404158 <__libc_fini_array+0x2c>)
  404130:	4d0a      	ldr	r5, [pc, #40]	; (40415c <__libc_fini_array+0x30>)
  404132:	1b64      	subs	r4, r4, r5
  404134:	10a4      	asrs	r4, r4, #2
  404136:	d00a      	beq.n	40414e <__libc_fini_array+0x22>
  404138:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  40413c:	3b01      	subs	r3, #1
  40413e:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  404142:	3c01      	subs	r4, #1
  404144:	f855 3904 	ldr.w	r3, [r5], #-4
  404148:	4798      	blx	r3
  40414a:	2c00      	cmp	r4, #0
  40414c:	d1f9      	bne.n	404142 <__libc_fini_array+0x16>
  40414e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  404152:	f002 bed7 	b.w	406f04 <_fini>
  404156:	bf00      	nop
  404158:	00406f14 	.word	0x00406f14
  40415c:	00406f10 	.word	0x00406f10

00404160 <_localeconv_r>:
  404160:	4a04      	ldr	r2, [pc, #16]	; (404174 <_localeconv_r+0x14>)
  404162:	4b05      	ldr	r3, [pc, #20]	; (404178 <_localeconv_r+0x18>)
  404164:	6812      	ldr	r2, [r2, #0]
  404166:	6b50      	ldr	r0, [r2, #52]	; 0x34
  404168:	2800      	cmp	r0, #0
  40416a:	bf08      	it	eq
  40416c:	4618      	moveq	r0, r3
  40416e:	30f0      	adds	r0, #240	; 0xf0
  404170:	4770      	bx	lr
  404172:	bf00      	nop
  404174:	20400020 	.word	0x20400020
  404178:	20400864 	.word	0x20400864

0040417c <__retarget_lock_acquire_recursive>:
  40417c:	4770      	bx	lr
  40417e:	bf00      	nop

00404180 <__retarget_lock_release_recursive>:
  404180:	4770      	bx	lr
  404182:	bf00      	nop

00404184 <_malloc_r>:
  404184:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404188:	f101 060b 	add.w	r6, r1, #11
  40418c:	2e16      	cmp	r6, #22
  40418e:	b083      	sub	sp, #12
  404190:	4605      	mov	r5, r0
  404192:	f240 809e 	bls.w	4042d2 <_malloc_r+0x14e>
  404196:	f036 0607 	bics.w	r6, r6, #7
  40419a:	f100 80bd 	bmi.w	404318 <_malloc_r+0x194>
  40419e:	42b1      	cmp	r1, r6
  4041a0:	f200 80ba 	bhi.w	404318 <_malloc_r+0x194>
  4041a4:	f000 fb8e 	bl	4048c4 <__malloc_lock>
  4041a8:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  4041ac:	f0c0 8293 	bcc.w	4046d6 <_malloc_r+0x552>
  4041b0:	0a73      	lsrs	r3, r6, #9
  4041b2:	f000 80b8 	beq.w	404326 <_malloc_r+0x1a2>
  4041b6:	2b04      	cmp	r3, #4
  4041b8:	f200 8179 	bhi.w	4044ae <_malloc_r+0x32a>
  4041bc:	09b3      	lsrs	r3, r6, #6
  4041be:	f103 0039 	add.w	r0, r3, #57	; 0x39
  4041c2:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  4041c6:	00c3      	lsls	r3, r0, #3
  4041c8:	4fbf      	ldr	r7, [pc, #764]	; (4044c8 <_malloc_r+0x344>)
  4041ca:	443b      	add	r3, r7
  4041cc:	f1a3 0108 	sub.w	r1, r3, #8
  4041d0:	685c      	ldr	r4, [r3, #4]
  4041d2:	42a1      	cmp	r1, r4
  4041d4:	d106      	bne.n	4041e4 <_malloc_r+0x60>
  4041d6:	e00c      	b.n	4041f2 <_malloc_r+0x6e>
  4041d8:	2a00      	cmp	r2, #0
  4041da:	f280 80aa 	bge.w	404332 <_malloc_r+0x1ae>
  4041de:	68e4      	ldr	r4, [r4, #12]
  4041e0:	42a1      	cmp	r1, r4
  4041e2:	d006      	beq.n	4041f2 <_malloc_r+0x6e>
  4041e4:	6863      	ldr	r3, [r4, #4]
  4041e6:	f023 0303 	bic.w	r3, r3, #3
  4041ea:	1b9a      	subs	r2, r3, r6
  4041ec:	2a0f      	cmp	r2, #15
  4041ee:	ddf3      	ble.n	4041d8 <_malloc_r+0x54>
  4041f0:	4670      	mov	r0, lr
  4041f2:	693c      	ldr	r4, [r7, #16]
  4041f4:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 4044dc <_malloc_r+0x358>
  4041f8:	4574      	cmp	r4, lr
  4041fa:	f000 81ab 	beq.w	404554 <_malloc_r+0x3d0>
  4041fe:	6863      	ldr	r3, [r4, #4]
  404200:	f023 0303 	bic.w	r3, r3, #3
  404204:	1b9a      	subs	r2, r3, r6
  404206:	2a0f      	cmp	r2, #15
  404208:	f300 8190 	bgt.w	40452c <_malloc_r+0x3a8>
  40420c:	2a00      	cmp	r2, #0
  40420e:	f8c7 e014 	str.w	lr, [r7, #20]
  404212:	f8c7 e010 	str.w	lr, [r7, #16]
  404216:	f280 809d 	bge.w	404354 <_malloc_r+0x1d0>
  40421a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  40421e:	f080 8161 	bcs.w	4044e4 <_malloc_r+0x360>
  404222:	08db      	lsrs	r3, r3, #3
  404224:	f103 0c01 	add.w	ip, r3, #1
  404228:	1099      	asrs	r1, r3, #2
  40422a:	687a      	ldr	r2, [r7, #4]
  40422c:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  404230:	f8c4 8008 	str.w	r8, [r4, #8]
  404234:	2301      	movs	r3, #1
  404236:	408b      	lsls	r3, r1
  404238:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  40423c:	4313      	orrs	r3, r2
  40423e:	3908      	subs	r1, #8
  404240:	60e1      	str	r1, [r4, #12]
  404242:	607b      	str	r3, [r7, #4]
  404244:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  404248:	f8c8 400c 	str.w	r4, [r8, #12]
  40424c:	1082      	asrs	r2, r0, #2
  40424e:	2401      	movs	r4, #1
  404250:	4094      	lsls	r4, r2
  404252:	429c      	cmp	r4, r3
  404254:	f200 808b 	bhi.w	40436e <_malloc_r+0x1ea>
  404258:	421c      	tst	r4, r3
  40425a:	d106      	bne.n	40426a <_malloc_r+0xe6>
  40425c:	f020 0003 	bic.w	r0, r0, #3
  404260:	0064      	lsls	r4, r4, #1
  404262:	421c      	tst	r4, r3
  404264:	f100 0004 	add.w	r0, r0, #4
  404268:	d0fa      	beq.n	404260 <_malloc_r+0xdc>
  40426a:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  40426e:	46cc      	mov	ip, r9
  404270:	4680      	mov	r8, r0
  404272:	f8dc 300c 	ldr.w	r3, [ip, #12]
  404276:	459c      	cmp	ip, r3
  404278:	d107      	bne.n	40428a <_malloc_r+0x106>
  40427a:	e16d      	b.n	404558 <_malloc_r+0x3d4>
  40427c:	2a00      	cmp	r2, #0
  40427e:	f280 817b 	bge.w	404578 <_malloc_r+0x3f4>
  404282:	68db      	ldr	r3, [r3, #12]
  404284:	459c      	cmp	ip, r3
  404286:	f000 8167 	beq.w	404558 <_malloc_r+0x3d4>
  40428a:	6859      	ldr	r1, [r3, #4]
  40428c:	f021 0103 	bic.w	r1, r1, #3
  404290:	1b8a      	subs	r2, r1, r6
  404292:	2a0f      	cmp	r2, #15
  404294:	ddf2      	ble.n	40427c <_malloc_r+0xf8>
  404296:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  40429a:	f8d3 8008 	ldr.w	r8, [r3, #8]
  40429e:	9300      	str	r3, [sp, #0]
  4042a0:	199c      	adds	r4, r3, r6
  4042a2:	4628      	mov	r0, r5
  4042a4:	f046 0601 	orr.w	r6, r6, #1
  4042a8:	f042 0501 	orr.w	r5, r2, #1
  4042ac:	605e      	str	r6, [r3, #4]
  4042ae:	f8c8 c00c 	str.w	ip, [r8, #12]
  4042b2:	f8cc 8008 	str.w	r8, [ip, #8]
  4042b6:	617c      	str	r4, [r7, #20]
  4042b8:	613c      	str	r4, [r7, #16]
  4042ba:	f8c4 e00c 	str.w	lr, [r4, #12]
  4042be:	f8c4 e008 	str.w	lr, [r4, #8]
  4042c2:	6065      	str	r5, [r4, #4]
  4042c4:	505a      	str	r2, [r3, r1]
  4042c6:	f000 fb03 	bl	4048d0 <__malloc_unlock>
  4042ca:	9b00      	ldr	r3, [sp, #0]
  4042cc:	f103 0408 	add.w	r4, r3, #8
  4042d0:	e01e      	b.n	404310 <_malloc_r+0x18c>
  4042d2:	2910      	cmp	r1, #16
  4042d4:	d820      	bhi.n	404318 <_malloc_r+0x194>
  4042d6:	f000 faf5 	bl	4048c4 <__malloc_lock>
  4042da:	2610      	movs	r6, #16
  4042dc:	2318      	movs	r3, #24
  4042de:	2002      	movs	r0, #2
  4042e0:	4f79      	ldr	r7, [pc, #484]	; (4044c8 <_malloc_r+0x344>)
  4042e2:	443b      	add	r3, r7
  4042e4:	f1a3 0208 	sub.w	r2, r3, #8
  4042e8:	685c      	ldr	r4, [r3, #4]
  4042ea:	4294      	cmp	r4, r2
  4042ec:	f000 813d 	beq.w	40456a <_malloc_r+0x3e6>
  4042f0:	6863      	ldr	r3, [r4, #4]
  4042f2:	68e1      	ldr	r1, [r4, #12]
  4042f4:	68a6      	ldr	r6, [r4, #8]
  4042f6:	f023 0303 	bic.w	r3, r3, #3
  4042fa:	4423      	add	r3, r4
  4042fc:	4628      	mov	r0, r5
  4042fe:	685a      	ldr	r2, [r3, #4]
  404300:	60f1      	str	r1, [r6, #12]
  404302:	f042 0201 	orr.w	r2, r2, #1
  404306:	608e      	str	r6, [r1, #8]
  404308:	605a      	str	r2, [r3, #4]
  40430a:	f000 fae1 	bl	4048d0 <__malloc_unlock>
  40430e:	3408      	adds	r4, #8
  404310:	4620      	mov	r0, r4
  404312:	b003      	add	sp, #12
  404314:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404318:	2400      	movs	r4, #0
  40431a:	230c      	movs	r3, #12
  40431c:	4620      	mov	r0, r4
  40431e:	602b      	str	r3, [r5, #0]
  404320:	b003      	add	sp, #12
  404322:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404326:	2040      	movs	r0, #64	; 0x40
  404328:	f44f 7300 	mov.w	r3, #512	; 0x200
  40432c:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  404330:	e74a      	b.n	4041c8 <_malloc_r+0x44>
  404332:	4423      	add	r3, r4
  404334:	68e1      	ldr	r1, [r4, #12]
  404336:	685a      	ldr	r2, [r3, #4]
  404338:	68a6      	ldr	r6, [r4, #8]
  40433a:	f042 0201 	orr.w	r2, r2, #1
  40433e:	60f1      	str	r1, [r6, #12]
  404340:	4628      	mov	r0, r5
  404342:	608e      	str	r6, [r1, #8]
  404344:	605a      	str	r2, [r3, #4]
  404346:	f000 fac3 	bl	4048d0 <__malloc_unlock>
  40434a:	3408      	adds	r4, #8
  40434c:	4620      	mov	r0, r4
  40434e:	b003      	add	sp, #12
  404350:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404354:	4423      	add	r3, r4
  404356:	4628      	mov	r0, r5
  404358:	685a      	ldr	r2, [r3, #4]
  40435a:	f042 0201 	orr.w	r2, r2, #1
  40435e:	605a      	str	r2, [r3, #4]
  404360:	f000 fab6 	bl	4048d0 <__malloc_unlock>
  404364:	3408      	adds	r4, #8
  404366:	4620      	mov	r0, r4
  404368:	b003      	add	sp, #12
  40436a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40436e:	68bc      	ldr	r4, [r7, #8]
  404370:	6863      	ldr	r3, [r4, #4]
  404372:	f023 0803 	bic.w	r8, r3, #3
  404376:	45b0      	cmp	r8, r6
  404378:	d304      	bcc.n	404384 <_malloc_r+0x200>
  40437a:	eba8 0306 	sub.w	r3, r8, r6
  40437e:	2b0f      	cmp	r3, #15
  404380:	f300 8085 	bgt.w	40448e <_malloc_r+0x30a>
  404384:	f8df 9158 	ldr.w	r9, [pc, #344]	; 4044e0 <_malloc_r+0x35c>
  404388:	4b50      	ldr	r3, [pc, #320]	; (4044cc <_malloc_r+0x348>)
  40438a:	f8d9 2000 	ldr.w	r2, [r9]
  40438e:	681b      	ldr	r3, [r3, #0]
  404390:	3201      	adds	r2, #1
  404392:	4433      	add	r3, r6
  404394:	eb04 0a08 	add.w	sl, r4, r8
  404398:	f000 8155 	beq.w	404646 <_malloc_r+0x4c2>
  40439c:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  4043a0:	330f      	adds	r3, #15
  4043a2:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  4043a6:	f02b 0b0f 	bic.w	fp, fp, #15
  4043aa:	4659      	mov	r1, fp
  4043ac:	4628      	mov	r0, r5
  4043ae:	f000 fd8f 	bl	404ed0 <_sbrk_r>
  4043b2:	1c41      	adds	r1, r0, #1
  4043b4:	4602      	mov	r2, r0
  4043b6:	f000 80fc 	beq.w	4045b2 <_malloc_r+0x42e>
  4043ba:	4582      	cmp	sl, r0
  4043bc:	f200 80f7 	bhi.w	4045ae <_malloc_r+0x42a>
  4043c0:	4b43      	ldr	r3, [pc, #268]	; (4044d0 <_malloc_r+0x34c>)
  4043c2:	6819      	ldr	r1, [r3, #0]
  4043c4:	4459      	add	r1, fp
  4043c6:	6019      	str	r1, [r3, #0]
  4043c8:	f000 814d 	beq.w	404666 <_malloc_r+0x4e2>
  4043cc:	f8d9 0000 	ldr.w	r0, [r9]
  4043d0:	3001      	adds	r0, #1
  4043d2:	bf1b      	ittet	ne
  4043d4:	eba2 0a0a 	subne.w	sl, r2, sl
  4043d8:	4451      	addne	r1, sl
  4043da:	f8c9 2000 	streq.w	r2, [r9]
  4043de:	6019      	strne	r1, [r3, #0]
  4043e0:	f012 0107 	ands.w	r1, r2, #7
  4043e4:	f000 8115 	beq.w	404612 <_malloc_r+0x48e>
  4043e8:	f1c1 0008 	rsb	r0, r1, #8
  4043ec:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  4043f0:	4402      	add	r2, r0
  4043f2:	3108      	adds	r1, #8
  4043f4:	eb02 090b 	add.w	r9, r2, fp
  4043f8:	f3c9 090b 	ubfx	r9, r9, #0, #12
  4043fc:	eba1 0909 	sub.w	r9, r1, r9
  404400:	4649      	mov	r1, r9
  404402:	4628      	mov	r0, r5
  404404:	9301      	str	r3, [sp, #4]
  404406:	9200      	str	r2, [sp, #0]
  404408:	f000 fd62 	bl	404ed0 <_sbrk_r>
  40440c:	1c43      	adds	r3, r0, #1
  40440e:	e89d 000c 	ldmia.w	sp, {r2, r3}
  404412:	f000 8143 	beq.w	40469c <_malloc_r+0x518>
  404416:	1a80      	subs	r0, r0, r2
  404418:	4448      	add	r0, r9
  40441a:	f040 0001 	orr.w	r0, r0, #1
  40441e:	6819      	ldr	r1, [r3, #0]
  404420:	60ba      	str	r2, [r7, #8]
  404422:	4449      	add	r1, r9
  404424:	42bc      	cmp	r4, r7
  404426:	6050      	str	r0, [r2, #4]
  404428:	6019      	str	r1, [r3, #0]
  40442a:	d017      	beq.n	40445c <_malloc_r+0x2d8>
  40442c:	f1b8 0f0f 	cmp.w	r8, #15
  404430:	f240 80fb 	bls.w	40462a <_malloc_r+0x4a6>
  404434:	6860      	ldr	r0, [r4, #4]
  404436:	f1a8 020c 	sub.w	r2, r8, #12
  40443a:	f022 0207 	bic.w	r2, r2, #7
  40443e:	eb04 0e02 	add.w	lr, r4, r2
  404442:	f000 0001 	and.w	r0, r0, #1
  404446:	f04f 0c05 	mov.w	ip, #5
  40444a:	4310      	orrs	r0, r2
  40444c:	2a0f      	cmp	r2, #15
  40444e:	6060      	str	r0, [r4, #4]
  404450:	f8ce c004 	str.w	ip, [lr, #4]
  404454:	f8ce c008 	str.w	ip, [lr, #8]
  404458:	f200 8117 	bhi.w	40468a <_malloc_r+0x506>
  40445c:	4b1d      	ldr	r3, [pc, #116]	; (4044d4 <_malloc_r+0x350>)
  40445e:	68bc      	ldr	r4, [r7, #8]
  404460:	681a      	ldr	r2, [r3, #0]
  404462:	4291      	cmp	r1, r2
  404464:	bf88      	it	hi
  404466:	6019      	strhi	r1, [r3, #0]
  404468:	4b1b      	ldr	r3, [pc, #108]	; (4044d8 <_malloc_r+0x354>)
  40446a:	681a      	ldr	r2, [r3, #0]
  40446c:	4291      	cmp	r1, r2
  40446e:	6862      	ldr	r2, [r4, #4]
  404470:	bf88      	it	hi
  404472:	6019      	strhi	r1, [r3, #0]
  404474:	f022 0203 	bic.w	r2, r2, #3
  404478:	4296      	cmp	r6, r2
  40447a:	eba2 0306 	sub.w	r3, r2, r6
  40447e:	d801      	bhi.n	404484 <_malloc_r+0x300>
  404480:	2b0f      	cmp	r3, #15
  404482:	dc04      	bgt.n	40448e <_malloc_r+0x30a>
  404484:	4628      	mov	r0, r5
  404486:	f000 fa23 	bl	4048d0 <__malloc_unlock>
  40448a:	2400      	movs	r4, #0
  40448c:	e740      	b.n	404310 <_malloc_r+0x18c>
  40448e:	19a2      	adds	r2, r4, r6
  404490:	f043 0301 	orr.w	r3, r3, #1
  404494:	f046 0601 	orr.w	r6, r6, #1
  404498:	6066      	str	r6, [r4, #4]
  40449a:	4628      	mov	r0, r5
  40449c:	60ba      	str	r2, [r7, #8]
  40449e:	6053      	str	r3, [r2, #4]
  4044a0:	f000 fa16 	bl	4048d0 <__malloc_unlock>
  4044a4:	3408      	adds	r4, #8
  4044a6:	4620      	mov	r0, r4
  4044a8:	b003      	add	sp, #12
  4044aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4044ae:	2b14      	cmp	r3, #20
  4044b0:	d971      	bls.n	404596 <_malloc_r+0x412>
  4044b2:	2b54      	cmp	r3, #84	; 0x54
  4044b4:	f200 80a3 	bhi.w	4045fe <_malloc_r+0x47a>
  4044b8:	0b33      	lsrs	r3, r6, #12
  4044ba:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  4044be:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  4044c2:	00c3      	lsls	r3, r0, #3
  4044c4:	e680      	b.n	4041c8 <_malloc_r+0x44>
  4044c6:	bf00      	nop
  4044c8:	20400454 	.word	0x20400454
  4044cc:	20400ca8 	.word	0x20400ca8
  4044d0:	20400c78 	.word	0x20400c78
  4044d4:	20400ca0 	.word	0x20400ca0
  4044d8:	20400ca4 	.word	0x20400ca4
  4044dc:	2040045c 	.word	0x2040045c
  4044e0:	2040085c 	.word	0x2040085c
  4044e4:	0a5a      	lsrs	r2, r3, #9
  4044e6:	2a04      	cmp	r2, #4
  4044e8:	d95b      	bls.n	4045a2 <_malloc_r+0x41e>
  4044ea:	2a14      	cmp	r2, #20
  4044ec:	f200 80ae 	bhi.w	40464c <_malloc_r+0x4c8>
  4044f0:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  4044f4:	00c9      	lsls	r1, r1, #3
  4044f6:	325b      	adds	r2, #91	; 0x5b
  4044f8:	eb07 0c01 	add.w	ip, r7, r1
  4044fc:	5879      	ldr	r1, [r7, r1]
  4044fe:	f1ac 0c08 	sub.w	ip, ip, #8
  404502:	458c      	cmp	ip, r1
  404504:	f000 8088 	beq.w	404618 <_malloc_r+0x494>
  404508:	684a      	ldr	r2, [r1, #4]
  40450a:	f022 0203 	bic.w	r2, r2, #3
  40450e:	4293      	cmp	r3, r2
  404510:	d273      	bcs.n	4045fa <_malloc_r+0x476>
  404512:	6889      	ldr	r1, [r1, #8]
  404514:	458c      	cmp	ip, r1
  404516:	d1f7      	bne.n	404508 <_malloc_r+0x384>
  404518:	f8dc 200c 	ldr.w	r2, [ip, #12]
  40451c:	687b      	ldr	r3, [r7, #4]
  40451e:	60e2      	str	r2, [r4, #12]
  404520:	f8c4 c008 	str.w	ip, [r4, #8]
  404524:	6094      	str	r4, [r2, #8]
  404526:	f8cc 400c 	str.w	r4, [ip, #12]
  40452a:	e68f      	b.n	40424c <_malloc_r+0xc8>
  40452c:	19a1      	adds	r1, r4, r6
  40452e:	f046 0c01 	orr.w	ip, r6, #1
  404532:	f042 0601 	orr.w	r6, r2, #1
  404536:	f8c4 c004 	str.w	ip, [r4, #4]
  40453a:	4628      	mov	r0, r5
  40453c:	6179      	str	r1, [r7, #20]
  40453e:	6139      	str	r1, [r7, #16]
  404540:	f8c1 e00c 	str.w	lr, [r1, #12]
  404544:	f8c1 e008 	str.w	lr, [r1, #8]
  404548:	604e      	str	r6, [r1, #4]
  40454a:	50e2      	str	r2, [r4, r3]
  40454c:	f000 f9c0 	bl	4048d0 <__malloc_unlock>
  404550:	3408      	adds	r4, #8
  404552:	e6dd      	b.n	404310 <_malloc_r+0x18c>
  404554:	687b      	ldr	r3, [r7, #4]
  404556:	e679      	b.n	40424c <_malloc_r+0xc8>
  404558:	f108 0801 	add.w	r8, r8, #1
  40455c:	f018 0f03 	tst.w	r8, #3
  404560:	f10c 0c08 	add.w	ip, ip, #8
  404564:	f47f ae85 	bne.w	404272 <_malloc_r+0xee>
  404568:	e02d      	b.n	4045c6 <_malloc_r+0x442>
  40456a:	68dc      	ldr	r4, [r3, #12]
  40456c:	42a3      	cmp	r3, r4
  40456e:	bf08      	it	eq
  404570:	3002      	addeq	r0, #2
  404572:	f43f ae3e 	beq.w	4041f2 <_malloc_r+0x6e>
  404576:	e6bb      	b.n	4042f0 <_malloc_r+0x16c>
  404578:	4419      	add	r1, r3
  40457a:	461c      	mov	r4, r3
  40457c:	684a      	ldr	r2, [r1, #4]
  40457e:	68db      	ldr	r3, [r3, #12]
  404580:	f854 6f08 	ldr.w	r6, [r4, #8]!
  404584:	f042 0201 	orr.w	r2, r2, #1
  404588:	604a      	str	r2, [r1, #4]
  40458a:	4628      	mov	r0, r5
  40458c:	60f3      	str	r3, [r6, #12]
  40458e:	609e      	str	r6, [r3, #8]
  404590:	f000 f99e 	bl	4048d0 <__malloc_unlock>
  404594:	e6bc      	b.n	404310 <_malloc_r+0x18c>
  404596:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  40459a:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  40459e:	00c3      	lsls	r3, r0, #3
  4045a0:	e612      	b.n	4041c8 <_malloc_r+0x44>
  4045a2:	099a      	lsrs	r2, r3, #6
  4045a4:	f102 0139 	add.w	r1, r2, #57	; 0x39
  4045a8:	00c9      	lsls	r1, r1, #3
  4045aa:	3238      	adds	r2, #56	; 0x38
  4045ac:	e7a4      	b.n	4044f8 <_malloc_r+0x374>
  4045ae:	42bc      	cmp	r4, r7
  4045b0:	d054      	beq.n	40465c <_malloc_r+0x4d8>
  4045b2:	68bc      	ldr	r4, [r7, #8]
  4045b4:	6862      	ldr	r2, [r4, #4]
  4045b6:	f022 0203 	bic.w	r2, r2, #3
  4045ba:	e75d      	b.n	404478 <_malloc_r+0x2f4>
  4045bc:	f859 3908 	ldr.w	r3, [r9], #-8
  4045c0:	4599      	cmp	r9, r3
  4045c2:	f040 8086 	bne.w	4046d2 <_malloc_r+0x54e>
  4045c6:	f010 0f03 	tst.w	r0, #3
  4045ca:	f100 30ff 	add.w	r0, r0, #4294967295
  4045ce:	d1f5      	bne.n	4045bc <_malloc_r+0x438>
  4045d0:	687b      	ldr	r3, [r7, #4]
  4045d2:	ea23 0304 	bic.w	r3, r3, r4
  4045d6:	607b      	str	r3, [r7, #4]
  4045d8:	0064      	lsls	r4, r4, #1
  4045da:	429c      	cmp	r4, r3
  4045dc:	f63f aec7 	bhi.w	40436e <_malloc_r+0x1ea>
  4045e0:	2c00      	cmp	r4, #0
  4045e2:	f43f aec4 	beq.w	40436e <_malloc_r+0x1ea>
  4045e6:	421c      	tst	r4, r3
  4045e8:	4640      	mov	r0, r8
  4045ea:	f47f ae3e 	bne.w	40426a <_malloc_r+0xe6>
  4045ee:	0064      	lsls	r4, r4, #1
  4045f0:	421c      	tst	r4, r3
  4045f2:	f100 0004 	add.w	r0, r0, #4
  4045f6:	d0fa      	beq.n	4045ee <_malloc_r+0x46a>
  4045f8:	e637      	b.n	40426a <_malloc_r+0xe6>
  4045fa:	468c      	mov	ip, r1
  4045fc:	e78c      	b.n	404518 <_malloc_r+0x394>
  4045fe:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  404602:	d815      	bhi.n	404630 <_malloc_r+0x4ac>
  404604:	0bf3      	lsrs	r3, r6, #15
  404606:	f103 0078 	add.w	r0, r3, #120	; 0x78
  40460a:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  40460e:	00c3      	lsls	r3, r0, #3
  404610:	e5da      	b.n	4041c8 <_malloc_r+0x44>
  404612:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  404616:	e6ed      	b.n	4043f4 <_malloc_r+0x270>
  404618:	687b      	ldr	r3, [r7, #4]
  40461a:	1092      	asrs	r2, r2, #2
  40461c:	2101      	movs	r1, #1
  40461e:	fa01 f202 	lsl.w	r2, r1, r2
  404622:	4313      	orrs	r3, r2
  404624:	607b      	str	r3, [r7, #4]
  404626:	4662      	mov	r2, ip
  404628:	e779      	b.n	40451e <_malloc_r+0x39a>
  40462a:	2301      	movs	r3, #1
  40462c:	6053      	str	r3, [r2, #4]
  40462e:	e729      	b.n	404484 <_malloc_r+0x300>
  404630:	f240 5254 	movw	r2, #1364	; 0x554
  404634:	4293      	cmp	r3, r2
  404636:	d822      	bhi.n	40467e <_malloc_r+0x4fa>
  404638:	0cb3      	lsrs	r3, r6, #18
  40463a:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  40463e:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  404642:	00c3      	lsls	r3, r0, #3
  404644:	e5c0      	b.n	4041c8 <_malloc_r+0x44>
  404646:	f103 0b10 	add.w	fp, r3, #16
  40464a:	e6ae      	b.n	4043aa <_malloc_r+0x226>
  40464c:	2a54      	cmp	r2, #84	; 0x54
  40464e:	d829      	bhi.n	4046a4 <_malloc_r+0x520>
  404650:	0b1a      	lsrs	r2, r3, #12
  404652:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  404656:	00c9      	lsls	r1, r1, #3
  404658:	326e      	adds	r2, #110	; 0x6e
  40465a:	e74d      	b.n	4044f8 <_malloc_r+0x374>
  40465c:	4b20      	ldr	r3, [pc, #128]	; (4046e0 <_malloc_r+0x55c>)
  40465e:	6819      	ldr	r1, [r3, #0]
  404660:	4459      	add	r1, fp
  404662:	6019      	str	r1, [r3, #0]
  404664:	e6b2      	b.n	4043cc <_malloc_r+0x248>
  404666:	f3ca 000b 	ubfx	r0, sl, #0, #12
  40466a:	2800      	cmp	r0, #0
  40466c:	f47f aeae 	bne.w	4043cc <_malloc_r+0x248>
  404670:	eb08 030b 	add.w	r3, r8, fp
  404674:	68ba      	ldr	r2, [r7, #8]
  404676:	f043 0301 	orr.w	r3, r3, #1
  40467a:	6053      	str	r3, [r2, #4]
  40467c:	e6ee      	b.n	40445c <_malloc_r+0x2d8>
  40467e:	207f      	movs	r0, #127	; 0x7f
  404680:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  404684:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  404688:	e59e      	b.n	4041c8 <_malloc_r+0x44>
  40468a:	f104 0108 	add.w	r1, r4, #8
  40468e:	4628      	mov	r0, r5
  404690:	9300      	str	r3, [sp, #0]
  404692:	f000 fe03 	bl	40529c <_free_r>
  404696:	9b00      	ldr	r3, [sp, #0]
  404698:	6819      	ldr	r1, [r3, #0]
  40469a:	e6df      	b.n	40445c <_malloc_r+0x2d8>
  40469c:	2001      	movs	r0, #1
  40469e:	f04f 0900 	mov.w	r9, #0
  4046a2:	e6bc      	b.n	40441e <_malloc_r+0x29a>
  4046a4:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  4046a8:	d805      	bhi.n	4046b6 <_malloc_r+0x532>
  4046aa:	0bda      	lsrs	r2, r3, #15
  4046ac:	f102 0178 	add.w	r1, r2, #120	; 0x78
  4046b0:	00c9      	lsls	r1, r1, #3
  4046b2:	3277      	adds	r2, #119	; 0x77
  4046b4:	e720      	b.n	4044f8 <_malloc_r+0x374>
  4046b6:	f240 5154 	movw	r1, #1364	; 0x554
  4046ba:	428a      	cmp	r2, r1
  4046bc:	d805      	bhi.n	4046ca <_malloc_r+0x546>
  4046be:	0c9a      	lsrs	r2, r3, #18
  4046c0:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  4046c4:	00c9      	lsls	r1, r1, #3
  4046c6:	327c      	adds	r2, #124	; 0x7c
  4046c8:	e716      	b.n	4044f8 <_malloc_r+0x374>
  4046ca:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  4046ce:	227e      	movs	r2, #126	; 0x7e
  4046d0:	e712      	b.n	4044f8 <_malloc_r+0x374>
  4046d2:	687b      	ldr	r3, [r7, #4]
  4046d4:	e780      	b.n	4045d8 <_malloc_r+0x454>
  4046d6:	08f0      	lsrs	r0, r6, #3
  4046d8:	f106 0308 	add.w	r3, r6, #8
  4046dc:	e600      	b.n	4042e0 <_malloc_r+0x15c>
  4046de:	bf00      	nop
  4046e0:	20400c78 	.word	0x20400c78
	...

004046f0 <memchr>:
  4046f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  4046f4:	2a10      	cmp	r2, #16
  4046f6:	db2b      	blt.n	404750 <memchr+0x60>
  4046f8:	f010 0f07 	tst.w	r0, #7
  4046fc:	d008      	beq.n	404710 <memchr+0x20>
  4046fe:	f810 3b01 	ldrb.w	r3, [r0], #1
  404702:	3a01      	subs	r2, #1
  404704:	428b      	cmp	r3, r1
  404706:	d02d      	beq.n	404764 <memchr+0x74>
  404708:	f010 0f07 	tst.w	r0, #7
  40470c:	b342      	cbz	r2, 404760 <memchr+0x70>
  40470e:	d1f6      	bne.n	4046fe <memchr+0xe>
  404710:	b4f0      	push	{r4, r5, r6, r7}
  404712:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  404716:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  40471a:	f022 0407 	bic.w	r4, r2, #7
  40471e:	f07f 0700 	mvns.w	r7, #0
  404722:	2300      	movs	r3, #0
  404724:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  404728:	3c08      	subs	r4, #8
  40472a:	ea85 0501 	eor.w	r5, r5, r1
  40472e:	ea86 0601 	eor.w	r6, r6, r1
  404732:	fa85 f547 	uadd8	r5, r5, r7
  404736:	faa3 f587 	sel	r5, r3, r7
  40473a:	fa86 f647 	uadd8	r6, r6, r7
  40473e:	faa5 f687 	sel	r6, r5, r7
  404742:	b98e      	cbnz	r6, 404768 <memchr+0x78>
  404744:	d1ee      	bne.n	404724 <memchr+0x34>
  404746:	bcf0      	pop	{r4, r5, r6, r7}
  404748:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  40474c:	f002 0207 	and.w	r2, r2, #7
  404750:	b132      	cbz	r2, 404760 <memchr+0x70>
  404752:	f810 3b01 	ldrb.w	r3, [r0], #1
  404756:	3a01      	subs	r2, #1
  404758:	ea83 0301 	eor.w	r3, r3, r1
  40475c:	b113      	cbz	r3, 404764 <memchr+0x74>
  40475e:	d1f8      	bne.n	404752 <memchr+0x62>
  404760:	2000      	movs	r0, #0
  404762:	4770      	bx	lr
  404764:	3801      	subs	r0, #1
  404766:	4770      	bx	lr
  404768:	2d00      	cmp	r5, #0
  40476a:	bf06      	itte	eq
  40476c:	4635      	moveq	r5, r6
  40476e:	3803      	subeq	r0, #3
  404770:	3807      	subne	r0, #7
  404772:	f015 0f01 	tst.w	r5, #1
  404776:	d107      	bne.n	404788 <memchr+0x98>
  404778:	3001      	adds	r0, #1
  40477a:	f415 7f80 	tst.w	r5, #256	; 0x100
  40477e:	bf02      	ittt	eq
  404780:	3001      	addeq	r0, #1
  404782:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  404786:	3001      	addeq	r0, #1
  404788:	bcf0      	pop	{r4, r5, r6, r7}
  40478a:	3801      	subs	r0, #1
  40478c:	4770      	bx	lr
  40478e:	bf00      	nop

00404790 <memcpy>:
  404790:	4684      	mov	ip, r0
  404792:	ea41 0300 	orr.w	r3, r1, r0
  404796:	f013 0303 	ands.w	r3, r3, #3
  40479a:	d16d      	bne.n	404878 <memcpy+0xe8>
  40479c:	3a40      	subs	r2, #64	; 0x40
  40479e:	d341      	bcc.n	404824 <memcpy+0x94>
  4047a0:	f851 3b04 	ldr.w	r3, [r1], #4
  4047a4:	f840 3b04 	str.w	r3, [r0], #4
  4047a8:	f851 3b04 	ldr.w	r3, [r1], #4
  4047ac:	f840 3b04 	str.w	r3, [r0], #4
  4047b0:	f851 3b04 	ldr.w	r3, [r1], #4
  4047b4:	f840 3b04 	str.w	r3, [r0], #4
  4047b8:	f851 3b04 	ldr.w	r3, [r1], #4
  4047bc:	f840 3b04 	str.w	r3, [r0], #4
  4047c0:	f851 3b04 	ldr.w	r3, [r1], #4
  4047c4:	f840 3b04 	str.w	r3, [r0], #4
  4047c8:	f851 3b04 	ldr.w	r3, [r1], #4
  4047cc:	f840 3b04 	str.w	r3, [r0], #4
  4047d0:	f851 3b04 	ldr.w	r3, [r1], #4
  4047d4:	f840 3b04 	str.w	r3, [r0], #4
  4047d8:	f851 3b04 	ldr.w	r3, [r1], #4
  4047dc:	f840 3b04 	str.w	r3, [r0], #4
  4047e0:	f851 3b04 	ldr.w	r3, [r1], #4
  4047e4:	f840 3b04 	str.w	r3, [r0], #4
  4047e8:	f851 3b04 	ldr.w	r3, [r1], #4
  4047ec:	f840 3b04 	str.w	r3, [r0], #4
  4047f0:	f851 3b04 	ldr.w	r3, [r1], #4
  4047f4:	f840 3b04 	str.w	r3, [r0], #4
  4047f8:	f851 3b04 	ldr.w	r3, [r1], #4
  4047fc:	f840 3b04 	str.w	r3, [r0], #4
  404800:	f851 3b04 	ldr.w	r3, [r1], #4
  404804:	f840 3b04 	str.w	r3, [r0], #4
  404808:	f851 3b04 	ldr.w	r3, [r1], #4
  40480c:	f840 3b04 	str.w	r3, [r0], #4
  404810:	f851 3b04 	ldr.w	r3, [r1], #4
  404814:	f840 3b04 	str.w	r3, [r0], #4
  404818:	f851 3b04 	ldr.w	r3, [r1], #4
  40481c:	f840 3b04 	str.w	r3, [r0], #4
  404820:	3a40      	subs	r2, #64	; 0x40
  404822:	d2bd      	bcs.n	4047a0 <memcpy+0x10>
  404824:	3230      	adds	r2, #48	; 0x30
  404826:	d311      	bcc.n	40484c <memcpy+0xbc>
  404828:	f851 3b04 	ldr.w	r3, [r1], #4
  40482c:	f840 3b04 	str.w	r3, [r0], #4
  404830:	f851 3b04 	ldr.w	r3, [r1], #4
  404834:	f840 3b04 	str.w	r3, [r0], #4
  404838:	f851 3b04 	ldr.w	r3, [r1], #4
  40483c:	f840 3b04 	str.w	r3, [r0], #4
  404840:	f851 3b04 	ldr.w	r3, [r1], #4
  404844:	f840 3b04 	str.w	r3, [r0], #4
  404848:	3a10      	subs	r2, #16
  40484a:	d2ed      	bcs.n	404828 <memcpy+0x98>
  40484c:	320c      	adds	r2, #12
  40484e:	d305      	bcc.n	40485c <memcpy+0xcc>
  404850:	f851 3b04 	ldr.w	r3, [r1], #4
  404854:	f840 3b04 	str.w	r3, [r0], #4
  404858:	3a04      	subs	r2, #4
  40485a:	d2f9      	bcs.n	404850 <memcpy+0xc0>
  40485c:	3204      	adds	r2, #4
  40485e:	d008      	beq.n	404872 <memcpy+0xe2>
  404860:	07d2      	lsls	r2, r2, #31
  404862:	bf1c      	itt	ne
  404864:	f811 3b01 	ldrbne.w	r3, [r1], #1
  404868:	f800 3b01 	strbne.w	r3, [r0], #1
  40486c:	d301      	bcc.n	404872 <memcpy+0xe2>
  40486e:	880b      	ldrh	r3, [r1, #0]
  404870:	8003      	strh	r3, [r0, #0]
  404872:	4660      	mov	r0, ip
  404874:	4770      	bx	lr
  404876:	bf00      	nop
  404878:	2a08      	cmp	r2, #8
  40487a:	d313      	bcc.n	4048a4 <memcpy+0x114>
  40487c:	078b      	lsls	r3, r1, #30
  40487e:	d08d      	beq.n	40479c <memcpy+0xc>
  404880:	f010 0303 	ands.w	r3, r0, #3
  404884:	d08a      	beq.n	40479c <memcpy+0xc>
  404886:	f1c3 0304 	rsb	r3, r3, #4
  40488a:	1ad2      	subs	r2, r2, r3
  40488c:	07db      	lsls	r3, r3, #31
  40488e:	bf1c      	itt	ne
  404890:	f811 3b01 	ldrbne.w	r3, [r1], #1
  404894:	f800 3b01 	strbne.w	r3, [r0], #1
  404898:	d380      	bcc.n	40479c <memcpy+0xc>
  40489a:	f831 3b02 	ldrh.w	r3, [r1], #2
  40489e:	f820 3b02 	strh.w	r3, [r0], #2
  4048a2:	e77b      	b.n	40479c <memcpy+0xc>
  4048a4:	3a04      	subs	r2, #4
  4048a6:	d3d9      	bcc.n	40485c <memcpy+0xcc>
  4048a8:	3a01      	subs	r2, #1
  4048aa:	f811 3b01 	ldrb.w	r3, [r1], #1
  4048ae:	f800 3b01 	strb.w	r3, [r0], #1
  4048b2:	d2f9      	bcs.n	4048a8 <memcpy+0x118>
  4048b4:	780b      	ldrb	r3, [r1, #0]
  4048b6:	7003      	strb	r3, [r0, #0]
  4048b8:	784b      	ldrb	r3, [r1, #1]
  4048ba:	7043      	strb	r3, [r0, #1]
  4048bc:	788b      	ldrb	r3, [r1, #2]
  4048be:	7083      	strb	r3, [r0, #2]
  4048c0:	4660      	mov	r0, ip
  4048c2:	4770      	bx	lr

004048c4 <__malloc_lock>:
  4048c4:	4801      	ldr	r0, [pc, #4]	; (4048cc <__malloc_lock+0x8>)
  4048c6:	f7ff bc59 	b.w	40417c <__retarget_lock_acquire_recursive>
  4048ca:	bf00      	nop
  4048cc:	20400cbc 	.word	0x20400cbc

004048d0 <__malloc_unlock>:
  4048d0:	4801      	ldr	r0, [pc, #4]	; (4048d8 <__malloc_unlock+0x8>)
  4048d2:	f7ff bc55 	b.w	404180 <__retarget_lock_release_recursive>
  4048d6:	bf00      	nop
  4048d8:	20400cbc 	.word	0x20400cbc

004048dc <_Balloc>:
  4048dc:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  4048de:	b570      	push	{r4, r5, r6, lr}
  4048e0:	4605      	mov	r5, r0
  4048e2:	460c      	mov	r4, r1
  4048e4:	b14b      	cbz	r3, 4048fa <_Balloc+0x1e>
  4048e6:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
  4048ea:	b180      	cbz	r0, 40490e <_Balloc+0x32>
  4048ec:	6802      	ldr	r2, [r0, #0]
  4048ee:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  4048f2:	2300      	movs	r3, #0
  4048f4:	6103      	str	r3, [r0, #16]
  4048f6:	60c3      	str	r3, [r0, #12]
  4048f8:	bd70      	pop	{r4, r5, r6, pc}
  4048fa:	2221      	movs	r2, #33	; 0x21
  4048fc:	2104      	movs	r1, #4
  4048fe:	f000 fc4d 	bl	40519c <_calloc_r>
  404902:	64e8      	str	r0, [r5, #76]	; 0x4c
  404904:	4603      	mov	r3, r0
  404906:	2800      	cmp	r0, #0
  404908:	d1ed      	bne.n	4048e6 <_Balloc+0xa>
  40490a:	2000      	movs	r0, #0
  40490c:	bd70      	pop	{r4, r5, r6, pc}
  40490e:	2101      	movs	r1, #1
  404910:	fa01 f604 	lsl.w	r6, r1, r4
  404914:	1d72      	adds	r2, r6, #5
  404916:	4628      	mov	r0, r5
  404918:	0092      	lsls	r2, r2, #2
  40491a:	f000 fc3f 	bl	40519c <_calloc_r>
  40491e:	2800      	cmp	r0, #0
  404920:	d0f3      	beq.n	40490a <_Balloc+0x2e>
  404922:	6044      	str	r4, [r0, #4]
  404924:	6086      	str	r6, [r0, #8]
  404926:	e7e4      	b.n	4048f2 <_Balloc+0x16>

00404928 <_Bfree>:
  404928:	b131      	cbz	r1, 404938 <_Bfree+0x10>
  40492a:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  40492c:	684a      	ldr	r2, [r1, #4]
  40492e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
  404932:	6008      	str	r0, [r1, #0]
  404934:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  404938:	4770      	bx	lr
  40493a:	bf00      	nop

0040493c <__multadd>:
  40493c:	b5f0      	push	{r4, r5, r6, r7, lr}
  40493e:	690c      	ldr	r4, [r1, #16]
  404940:	b083      	sub	sp, #12
  404942:	460d      	mov	r5, r1
  404944:	4606      	mov	r6, r0
  404946:	f101 0e14 	add.w	lr, r1, #20
  40494a:	2700      	movs	r7, #0
  40494c:	f8de 0000 	ldr.w	r0, [lr]
  404950:	b281      	uxth	r1, r0
  404952:	fb02 3301 	mla	r3, r2, r1, r3
  404956:	0c01      	lsrs	r1, r0, #16
  404958:	0c18      	lsrs	r0, r3, #16
  40495a:	fb02 0101 	mla	r1, r2, r1, r0
  40495e:	b29b      	uxth	r3, r3
  404960:	3701      	adds	r7, #1
  404962:	eb03 4301 	add.w	r3, r3, r1, lsl #16
  404966:	42bc      	cmp	r4, r7
  404968:	f84e 3b04 	str.w	r3, [lr], #4
  40496c:	ea4f 4311 	mov.w	r3, r1, lsr #16
  404970:	dcec      	bgt.n	40494c <__multadd+0x10>
  404972:	b13b      	cbz	r3, 404984 <__multadd+0x48>
  404974:	68aa      	ldr	r2, [r5, #8]
  404976:	4294      	cmp	r4, r2
  404978:	da07      	bge.n	40498a <__multadd+0x4e>
  40497a:	eb05 0284 	add.w	r2, r5, r4, lsl #2
  40497e:	3401      	adds	r4, #1
  404980:	6153      	str	r3, [r2, #20]
  404982:	612c      	str	r4, [r5, #16]
  404984:	4628      	mov	r0, r5
  404986:	b003      	add	sp, #12
  404988:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40498a:	6869      	ldr	r1, [r5, #4]
  40498c:	9301      	str	r3, [sp, #4]
  40498e:	3101      	adds	r1, #1
  404990:	4630      	mov	r0, r6
  404992:	f7ff ffa3 	bl	4048dc <_Balloc>
  404996:	692a      	ldr	r2, [r5, #16]
  404998:	3202      	adds	r2, #2
  40499a:	f105 010c 	add.w	r1, r5, #12
  40499e:	4607      	mov	r7, r0
  4049a0:	0092      	lsls	r2, r2, #2
  4049a2:	300c      	adds	r0, #12
  4049a4:	f7ff fef4 	bl	404790 <memcpy>
  4049a8:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
  4049aa:	6869      	ldr	r1, [r5, #4]
  4049ac:	9b01      	ldr	r3, [sp, #4]
  4049ae:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
  4049b2:	6028      	str	r0, [r5, #0]
  4049b4:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
  4049b8:	463d      	mov	r5, r7
  4049ba:	e7de      	b.n	40497a <__multadd+0x3e>

004049bc <__hi0bits>:
  4049bc:	0c02      	lsrs	r2, r0, #16
  4049be:	0412      	lsls	r2, r2, #16
  4049c0:	4603      	mov	r3, r0
  4049c2:	b9b2      	cbnz	r2, 4049f2 <__hi0bits+0x36>
  4049c4:	0403      	lsls	r3, r0, #16
  4049c6:	2010      	movs	r0, #16
  4049c8:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
  4049cc:	bf04      	itt	eq
  4049ce:	021b      	lsleq	r3, r3, #8
  4049d0:	3008      	addeq	r0, #8
  4049d2:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
  4049d6:	bf04      	itt	eq
  4049d8:	011b      	lsleq	r3, r3, #4
  4049da:	3004      	addeq	r0, #4
  4049dc:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
  4049e0:	bf04      	itt	eq
  4049e2:	009b      	lsleq	r3, r3, #2
  4049e4:	3002      	addeq	r0, #2
  4049e6:	2b00      	cmp	r3, #0
  4049e8:	db02      	blt.n	4049f0 <__hi0bits+0x34>
  4049ea:	005b      	lsls	r3, r3, #1
  4049ec:	d403      	bmi.n	4049f6 <__hi0bits+0x3a>
  4049ee:	2020      	movs	r0, #32
  4049f0:	4770      	bx	lr
  4049f2:	2000      	movs	r0, #0
  4049f4:	e7e8      	b.n	4049c8 <__hi0bits+0xc>
  4049f6:	3001      	adds	r0, #1
  4049f8:	4770      	bx	lr
  4049fa:	bf00      	nop

004049fc <__lo0bits>:
  4049fc:	6803      	ldr	r3, [r0, #0]
  4049fe:	f013 0207 	ands.w	r2, r3, #7
  404a02:	4601      	mov	r1, r0
  404a04:	d007      	beq.n	404a16 <__lo0bits+0x1a>
  404a06:	07da      	lsls	r2, r3, #31
  404a08:	d421      	bmi.n	404a4e <__lo0bits+0x52>
  404a0a:	0798      	lsls	r0, r3, #30
  404a0c:	d421      	bmi.n	404a52 <__lo0bits+0x56>
  404a0e:	089b      	lsrs	r3, r3, #2
  404a10:	600b      	str	r3, [r1, #0]
  404a12:	2002      	movs	r0, #2
  404a14:	4770      	bx	lr
  404a16:	b298      	uxth	r0, r3
  404a18:	b198      	cbz	r0, 404a42 <__lo0bits+0x46>
  404a1a:	4610      	mov	r0, r2
  404a1c:	f013 0fff 	tst.w	r3, #255	; 0xff
  404a20:	bf04      	itt	eq
  404a22:	0a1b      	lsreq	r3, r3, #8
  404a24:	3008      	addeq	r0, #8
  404a26:	071a      	lsls	r2, r3, #28
  404a28:	bf04      	itt	eq
  404a2a:	091b      	lsreq	r3, r3, #4
  404a2c:	3004      	addeq	r0, #4
  404a2e:	079a      	lsls	r2, r3, #30
  404a30:	bf04      	itt	eq
  404a32:	089b      	lsreq	r3, r3, #2
  404a34:	3002      	addeq	r0, #2
  404a36:	07da      	lsls	r2, r3, #31
  404a38:	d407      	bmi.n	404a4a <__lo0bits+0x4e>
  404a3a:	085b      	lsrs	r3, r3, #1
  404a3c:	d104      	bne.n	404a48 <__lo0bits+0x4c>
  404a3e:	2020      	movs	r0, #32
  404a40:	4770      	bx	lr
  404a42:	0c1b      	lsrs	r3, r3, #16
  404a44:	2010      	movs	r0, #16
  404a46:	e7e9      	b.n	404a1c <__lo0bits+0x20>
  404a48:	3001      	adds	r0, #1
  404a4a:	600b      	str	r3, [r1, #0]
  404a4c:	4770      	bx	lr
  404a4e:	2000      	movs	r0, #0
  404a50:	4770      	bx	lr
  404a52:	085b      	lsrs	r3, r3, #1
  404a54:	600b      	str	r3, [r1, #0]
  404a56:	2001      	movs	r0, #1
  404a58:	4770      	bx	lr
  404a5a:	bf00      	nop

00404a5c <__i2b>:
  404a5c:	b510      	push	{r4, lr}
  404a5e:	460c      	mov	r4, r1
  404a60:	2101      	movs	r1, #1
  404a62:	f7ff ff3b 	bl	4048dc <_Balloc>
  404a66:	2201      	movs	r2, #1
  404a68:	6144      	str	r4, [r0, #20]
  404a6a:	6102      	str	r2, [r0, #16]
  404a6c:	bd10      	pop	{r4, pc}
  404a6e:	bf00      	nop

00404a70 <__multiply>:
  404a70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404a74:	690c      	ldr	r4, [r1, #16]
  404a76:	6915      	ldr	r5, [r2, #16]
  404a78:	42ac      	cmp	r4, r5
  404a7a:	b083      	sub	sp, #12
  404a7c:	468b      	mov	fp, r1
  404a7e:	4616      	mov	r6, r2
  404a80:	da04      	bge.n	404a8c <__multiply+0x1c>
  404a82:	4622      	mov	r2, r4
  404a84:	46b3      	mov	fp, r6
  404a86:	462c      	mov	r4, r5
  404a88:	460e      	mov	r6, r1
  404a8a:	4615      	mov	r5, r2
  404a8c:	f8db 3008 	ldr.w	r3, [fp, #8]
  404a90:	f8db 1004 	ldr.w	r1, [fp, #4]
  404a94:	eb04 0805 	add.w	r8, r4, r5
  404a98:	4598      	cmp	r8, r3
  404a9a:	bfc8      	it	gt
  404a9c:	3101      	addgt	r1, #1
  404a9e:	f7ff ff1d 	bl	4048dc <_Balloc>
  404aa2:	f100 0914 	add.w	r9, r0, #20
  404aa6:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
  404aaa:	45d1      	cmp	r9, sl
  404aac:	9000      	str	r0, [sp, #0]
  404aae:	d205      	bcs.n	404abc <__multiply+0x4c>
  404ab0:	464b      	mov	r3, r9
  404ab2:	2100      	movs	r1, #0
  404ab4:	f843 1b04 	str.w	r1, [r3], #4
  404ab8:	459a      	cmp	sl, r3
  404aba:	d8fb      	bhi.n	404ab4 <__multiply+0x44>
  404abc:	f106 0c14 	add.w	ip, r6, #20
  404ac0:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
  404ac4:	f10b 0b14 	add.w	fp, fp, #20
  404ac8:	459c      	cmp	ip, r3
  404aca:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
  404ace:	d24c      	bcs.n	404b6a <__multiply+0xfa>
  404ad0:	f8cd a004 	str.w	sl, [sp, #4]
  404ad4:	469a      	mov	sl, r3
  404ad6:	f8dc 5000 	ldr.w	r5, [ip]
  404ada:	b2af      	uxth	r7, r5
  404adc:	b1ef      	cbz	r7, 404b1a <__multiply+0xaa>
  404ade:	2100      	movs	r1, #0
  404ae0:	464d      	mov	r5, r9
  404ae2:	465e      	mov	r6, fp
  404ae4:	460c      	mov	r4, r1
  404ae6:	f856 2b04 	ldr.w	r2, [r6], #4
  404aea:	6828      	ldr	r0, [r5, #0]
  404aec:	b293      	uxth	r3, r2
  404aee:	b281      	uxth	r1, r0
  404af0:	fb07 1303 	mla	r3, r7, r3, r1
  404af4:	0c12      	lsrs	r2, r2, #16
  404af6:	0c01      	lsrs	r1, r0, #16
  404af8:	4423      	add	r3, r4
  404afa:	fb07 1102 	mla	r1, r7, r2, r1
  404afe:	eb01 4113 	add.w	r1, r1, r3, lsr #16
  404b02:	b29b      	uxth	r3, r3
  404b04:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  404b08:	45b6      	cmp	lr, r6
  404b0a:	f845 3b04 	str.w	r3, [r5], #4
  404b0e:	ea4f 4411 	mov.w	r4, r1, lsr #16
  404b12:	d8e8      	bhi.n	404ae6 <__multiply+0x76>
  404b14:	602c      	str	r4, [r5, #0]
  404b16:	f8dc 5000 	ldr.w	r5, [ip]
  404b1a:	0c2d      	lsrs	r5, r5, #16
  404b1c:	d01d      	beq.n	404b5a <__multiply+0xea>
  404b1e:	f8d9 3000 	ldr.w	r3, [r9]
  404b22:	4648      	mov	r0, r9
  404b24:	461c      	mov	r4, r3
  404b26:	4659      	mov	r1, fp
  404b28:	2200      	movs	r2, #0
  404b2a:	880e      	ldrh	r6, [r1, #0]
  404b2c:	0c24      	lsrs	r4, r4, #16
  404b2e:	fb05 4406 	mla	r4, r5, r6, r4
  404b32:	4422      	add	r2, r4
  404b34:	b29b      	uxth	r3, r3
  404b36:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  404b3a:	f840 3b04 	str.w	r3, [r0], #4
  404b3e:	f851 3b04 	ldr.w	r3, [r1], #4
  404b42:	6804      	ldr	r4, [r0, #0]
  404b44:	0c1b      	lsrs	r3, r3, #16
  404b46:	b2a6      	uxth	r6, r4
  404b48:	fb05 6303 	mla	r3, r5, r3, r6
  404b4c:	eb03 4312 	add.w	r3, r3, r2, lsr #16
  404b50:	458e      	cmp	lr, r1
  404b52:	ea4f 4213 	mov.w	r2, r3, lsr #16
  404b56:	d8e8      	bhi.n	404b2a <__multiply+0xba>
  404b58:	6003      	str	r3, [r0, #0]
  404b5a:	f10c 0c04 	add.w	ip, ip, #4
  404b5e:	45e2      	cmp	sl, ip
  404b60:	f109 0904 	add.w	r9, r9, #4
  404b64:	d8b7      	bhi.n	404ad6 <__multiply+0x66>
  404b66:	f8dd a004 	ldr.w	sl, [sp, #4]
  404b6a:	f1b8 0f00 	cmp.w	r8, #0
  404b6e:	dd0b      	ble.n	404b88 <__multiply+0x118>
  404b70:	f85a 3c04 	ldr.w	r3, [sl, #-4]
  404b74:	f1aa 0a04 	sub.w	sl, sl, #4
  404b78:	b11b      	cbz	r3, 404b82 <__multiply+0x112>
  404b7a:	e005      	b.n	404b88 <__multiply+0x118>
  404b7c:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
  404b80:	b913      	cbnz	r3, 404b88 <__multiply+0x118>
  404b82:	f1b8 0801 	subs.w	r8, r8, #1
  404b86:	d1f9      	bne.n	404b7c <__multiply+0x10c>
  404b88:	9800      	ldr	r0, [sp, #0]
  404b8a:	f8c0 8010 	str.w	r8, [r0, #16]
  404b8e:	b003      	add	sp, #12
  404b90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00404b94 <__pow5mult>:
  404b94:	f012 0303 	ands.w	r3, r2, #3
  404b98:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404b9c:	4614      	mov	r4, r2
  404b9e:	4607      	mov	r7, r0
  404ba0:	d12e      	bne.n	404c00 <__pow5mult+0x6c>
  404ba2:	460d      	mov	r5, r1
  404ba4:	10a4      	asrs	r4, r4, #2
  404ba6:	d01c      	beq.n	404be2 <__pow5mult+0x4e>
  404ba8:	6cbe      	ldr	r6, [r7, #72]	; 0x48
  404baa:	b396      	cbz	r6, 404c12 <__pow5mult+0x7e>
  404bac:	07e3      	lsls	r3, r4, #31
  404bae:	f04f 0800 	mov.w	r8, #0
  404bb2:	d406      	bmi.n	404bc2 <__pow5mult+0x2e>
  404bb4:	1064      	asrs	r4, r4, #1
  404bb6:	d014      	beq.n	404be2 <__pow5mult+0x4e>
  404bb8:	6830      	ldr	r0, [r6, #0]
  404bba:	b1a8      	cbz	r0, 404be8 <__pow5mult+0x54>
  404bbc:	4606      	mov	r6, r0
  404bbe:	07e3      	lsls	r3, r4, #31
  404bc0:	d5f8      	bpl.n	404bb4 <__pow5mult+0x20>
  404bc2:	4632      	mov	r2, r6
  404bc4:	4629      	mov	r1, r5
  404bc6:	4638      	mov	r0, r7
  404bc8:	f7ff ff52 	bl	404a70 <__multiply>
  404bcc:	b1b5      	cbz	r5, 404bfc <__pow5mult+0x68>
  404bce:	686a      	ldr	r2, [r5, #4]
  404bd0:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  404bd2:	1064      	asrs	r4, r4, #1
  404bd4:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  404bd8:	6029      	str	r1, [r5, #0]
  404bda:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
  404bde:	4605      	mov	r5, r0
  404be0:	d1ea      	bne.n	404bb8 <__pow5mult+0x24>
  404be2:	4628      	mov	r0, r5
  404be4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404be8:	4632      	mov	r2, r6
  404bea:	4631      	mov	r1, r6
  404bec:	4638      	mov	r0, r7
  404bee:	f7ff ff3f 	bl	404a70 <__multiply>
  404bf2:	6030      	str	r0, [r6, #0]
  404bf4:	f8c0 8000 	str.w	r8, [r0]
  404bf8:	4606      	mov	r6, r0
  404bfa:	e7e0      	b.n	404bbe <__pow5mult+0x2a>
  404bfc:	4605      	mov	r5, r0
  404bfe:	e7d9      	b.n	404bb4 <__pow5mult+0x20>
  404c00:	1e5a      	subs	r2, r3, #1
  404c02:	4d0b      	ldr	r5, [pc, #44]	; (404c30 <__pow5mult+0x9c>)
  404c04:	2300      	movs	r3, #0
  404c06:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
  404c0a:	f7ff fe97 	bl	40493c <__multadd>
  404c0e:	4605      	mov	r5, r0
  404c10:	e7c8      	b.n	404ba4 <__pow5mult+0x10>
  404c12:	2101      	movs	r1, #1
  404c14:	4638      	mov	r0, r7
  404c16:	f7ff fe61 	bl	4048dc <_Balloc>
  404c1a:	f240 2171 	movw	r1, #625	; 0x271
  404c1e:	2201      	movs	r2, #1
  404c20:	2300      	movs	r3, #0
  404c22:	6141      	str	r1, [r0, #20]
  404c24:	6102      	str	r2, [r0, #16]
  404c26:	4606      	mov	r6, r0
  404c28:	64b8      	str	r0, [r7, #72]	; 0x48
  404c2a:	6003      	str	r3, [r0, #0]
  404c2c:	e7be      	b.n	404bac <__pow5mult+0x18>
  404c2e:	bf00      	nop
  404c30:	00406dd0 	.word	0x00406dd0

00404c34 <__lshift>:
  404c34:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  404c38:	4691      	mov	r9, r2
  404c3a:	690a      	ldr	r2, [r1, #16]
  404c3c:	688b      	ldr	r3, [r1, #8]
  404c3e:	ea4f 1469 	mov.w	r4, r9, asr #5
  404c42:	eb04 0802 	add.w	r8, r4, r2
  404c46:	f108 0501 	add.w	r5, r8, #1
  404c4a:	429d      	cmp	r5, r3
  404c4c:	460e      	mov	r6, r1
  404c4e:	4607      	mov	r7, r0
  404c50:	6849      	ldr	r1, [r1, #4]
  404c52:	dd04      	ble.n	404c5e <__lshift+0x2a>
  404c54:	005b      	lsls	r3, r3, #1
  404c56:	429d      	cmp	r5, r3
  404c58:	f101 0101 	add.w	r1, r1, #1
  404c5c:	dcfa      	bgt.n	404c54 <__lshift+0x20>
  404c5e:	4638      	mov	r0, r7
  404c60:	f7ff fe3c 	bl	4048dc <_Balloc>
  404c64:	2c00      	cmp	r4, #0
  404c66:	f100 0314 	add.w	r3, r0, #20
  404c6a:	dd06      	ble.n	404c7a <__lshift+0x46>
  404c6c:	eb03 0284 	add.w	r2, r3, r4, lsl #2
  404c70:	2100      	movs	r1, #0
  404c72:	f843 1b04 	str.w	r1, [r3], #4
  404c76:	429a      	cmp	r2, r3
  404c78:	d1fb      	bne.n	404c72 <__lshift+0x3e>
  404c7a:	6934      	ldr	r4, [r6, #16]
  404c7c:	f106 0114 	add.w	r1, r6, #20
  404c80:	f019 091f 	ands.w	r9, r9, #31
  404c84:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
  404c88:	d01d      	beq.n	404cc6 <__lshift+0x92>
  404c8a:	f1c9 0c20 	rsb	ip, r9, #32
  404c8e:	2200      	movs	r2, #0
  404c90:	680c      	ldr	r4, [r1, #0]
  404c92:	fa04 f409 	lsl.w	r4, r4, r9
  404c96:	4314      	orrs	r4, r2
  404c98:	f843 4b04 	str.w	r4, [r3], #4
  404c9c:	f851 2b04 	ldr.w	r2, [r1], #4
  404ca0:	458e      	cmp	lr, r1
  404ca2:	fa22 f20c 	lsr.w	r2, r2, ip
  404ca6:	d8f3      	bhi.n	404c90 <__lshift+0x5c>
  404ca8:	601a      	str	r2, [r3, #0]
  404caa:	b10a      	cbz	r2, 404cb0 <__lshift+0x7c>
  404cac:	f108 0502 	add.w	r5, r8, #2
  404cb0:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  404cb2:	6872      	ldr	r2, [r6, #4]
  404cb4:	3d01      	subs	r5, #1
  404cb6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  404cba:	6105      	str	r5, [r0, #16]
  404cbc:	6031      	str	r1, [r6, #0]
  404cbe:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  404cc2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  404cc6:	3b04      	subs	r3, #4
  404cc8:	f851 2b04 	ldr.w	r2, [r1], #4
  404ccc:	f843 2f04 	str.w	r2, [r3, #4]!
  404cd0:	458e      	cmp	lr, r1
  404cd2:	d8f9      	bhi.n	404cc8 <__lshift+0x94>
  404cd4:	e7ec      	b.n	404cb0 <__lshift+0x7c>
  404cd6:	bf00      	nop

00404cd8 <__mcmp>:
  404cd8:	b430      	push	{r4, r5}
  404cda:	690b      	ldr	r3, [r1, #16]
  404cdc:	4605      	mov	r5, r0
  404cde:	6900      	ldr	r0, [r0, #16]
  404ce0:	1ac0      	subs	r0, r0, r3
  404ce2:	d10f      	bne.n	404d04 <__mcmp+0x2c>
  404ce4:	009b      	lsls	r3, r3, #2
  404ce6:	3514      	adds	r5, #20
  404ce8:	3114      	adds	r1, #20
  404cea:	4419      	add	r1, r3
  404cec:	442b      	add	r3, r5
  404cee:	e001      	b.n	404cf4 <__mcmp+0x1c>
  404cf0:	429d      	cmp	r5, r3
  404cf2:	d207      	bcs.n	404d04 <__mcmp+0x2c>
  404cf4:	f853 4d04 	ldr.w	r4, [r3, #-4]!
  404cf8:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  404cfc:	4294      	cmp	r4, r2
  404cfe:	d0f7      	beq.n	404cf0 <__mcmp+0x18>
  404d00:	d302      	bcc.n	404d08 <__mcmp+0x30>
  404d02:	2001      	movs	r0, #1
  404d04:	bc30      	pop	{r4, r5}
  404d06:	4770      	bx	lr
  404d08:	f04f 30ff 	mov.w	r0, #4294967295
  404d0c:	e7fa      	b.n	404d04 <__mcmp+0x2c>
  404d0e:	bf00      	nop

00404d10 <__mdiff>:
  404d10:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404d14:	690f      	ldr	r7, [r1, #16]
  404d16:	460e      	mov	r6, r1
  404d18:	6911      	ldr	r1, [r2, #16]
  404d1a:	1a7f      	subs	r7, r7, r1
  404d1c:	2f00      	cmp	r7, #0
  404d1e:	4690      	mov	r8, r2
  404d20:	d117      	bne.n	404d52 <__mdiff+0x42>
  404d22:	0089      	lsls	r1, r1, #2
  404d24:	f106 0514 	add.w	r5, r6, #20
  404d28:	f102 0e14 	add.w	lr, r2, #20
  404d2c:	186b      	adds	r3, r5, r1
  404d2e:	4471      	add	r1, lr
  404d30:	e001      	b.n	404d36 <__mdiff+0x26>
  404d32:	429d      	cmp	r5, r3
  404d34:	d25c      	bcs.n	404df0 <__mdiff+0xe0>
  404d36:	f853 2d04 	ldr.w	r2, [r3, #-4]!
  404d3a:	f851 4d04 	ldr.w	r4, [r1, #-4]!
  404d3e:	42a2      	cmp	r2, r4
  404d40:	d0f7      	beq.n	404d32 <__mdiff+0x22>
  404d42:	d25e      	bcs.n	404e02 <__mdiff+0xf2>
  404d44:	4633      	mov	r3, r6
  404d46:	462c      	mov	r4, r5
  404d48:	4646      	mov	r6, r8
  404d4a:	4675      	mov	r5, lr
  404d4c:	4698      	mov	r8, r3
  404d4e:	2701      	movs	r7, #1
  404d50:	e005      	b.n	404d5e <__mdiff+0x4e>
  404d52:	db58      	blt.n	404e06 <__mdiff+0xf6>
  404d54:	f106 0514 	add.w	r5, r6, #20
  404d58:	f108 0414 	add.w	r4, r8, #20
  404d5c:	2700      	movs	r7, #0
  404d5e:	6871      	ldr	r1, [r6, #4]
  404d60:	f7ff fdbc 	bl	4048dc <_Balloc>
  404d64:	f8d8 3010 	ldr.w	r3, [r8, #16]
  404d68:	6936      	ldr	r6, [r6, #16]
  404d6a:	60c7      	str	r7, [r0, #12]
  404d6c:	eb04 0c83 	add.w	ip, r4, r3, lsl #2
  404d70:	46a6      	mov	lr, r4
  404d72:	eb05 0786 	add.w	r7, r5, r6, lsl #2
  404d76:	f100 0414 	add.w	r4, r0, #20
  404d7a:	2300      	movs	r3, #0
  404d7c:	f85e 1b04 	ldr.w	r1, [lr], #4
  404d80:	f855 8b04 	ldr.w	r8, [r5], #4
  404d84:	b28a      	uxth	r2, r1
  404d86:	fa13 f388 	uxtah	r3, r3, r8
  404d8a:	0c09      	lsrs	r1, r1, #16
  404d8c:	1a9a      	subs	r2, r3, r2
  404d8e:	ebc1 4318 	rsb	r3, r1, r8, lsr #16
  404d92:	eb03 4322 	add.w	r3, r3, r2, asr #16
  404d96:	b292      	uxth	r2, r2
  404d98:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  404d9c:	45f4      	cmp	ip, lr
  404d9e:	f844 2b04 	str.w	r2, [r4], #4
  404da2:	ea4f 4323 	mov.w	r3, r3, asr #16
  404da6:	d8e9      	bhi.n	404d7c <__mdiff+0x6c>
  404da8:	42af      	cmp	r7, r5
  404daa:	d917      	bls.n	404ddc <__mdiff+0xcc>
  404dac:	46a4      	mov	ip, r4
  404dae:	46ae      	mov	lr, r5
  404db0:	f85e 2b04 	ldr.w	r2, [lr], #4
  404db4:	fa13 f382 	uxtah	r3, r3, r2
  404db8:	1419      	asrs	r1, r3, #16
  404dba:	eb01 4112 	add.w	r1, r1, r2, lsr #16
  404dbe:	b29b      	uxth	r3, r3
  404dc0:	ea43 4201 	orr.w	r2, r3, r1, lsl #16
  404dc4:	4577      	cmp	r7, lr
  404dc6:	f84c 2b04 	str.w	r2, [ip], #4
  404dca:	ea4f 4321 	mov.w	r3, r1, asr #16
  404dce:	d8ef      	bhi.n	404db0 <__mdiff+0xa0>
  404dd0:	43ed      	mvns	r5, r5
  404dd2:	442f      	add	r7, r5
  404dd4:	f027 0703 	bic.w	r7, r7, #3
  404dd8:	3704      	adds	r7, #4
  404dda:	443c      	add	r4, r7
  404ddc:	3c04      	subs	r4, #4
  404dde:	b922      	cbnz	r2, 404dea <__mdiff+0xda>
  404de0:	f854 3d04 	ldr.w	r3, [r4, #-4]!
  404de4:	3e01      	subs	r6, #1
  404de6:	2b00      	cmp	r3, #0
  404de8:	d0fa      	beq.n	404de0 <__mdiff+0xd0>
  404dea:	6106      	str	r6, [r0, #16]
  404dec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404df0:	2100      	movs	r1, #0
  404df2:	f7ff fd73 	bl	4048dc <_Balloc>
  404df6:	2201      	movs	r2, #1
  404df8:	2300      	movs	r3, #0
  404dfa:	6102      	str	r2, [r0, #16]
  404dfc:	6143      	str	r3, [r0, #20]
  404dfe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404e02:	4674      	mov	r4, lr
  404e04:	e7ab      	b.n	404d5e <__mdiff+0x4e>
  404e06:	4633      	mov	r3, r6
  404e08:	f106 0414 	add.w	r4, r6, #20
  404e0c:	f102 0514 	add.w	r5, r2, #20
  404e10:	4616      	mov	r6, r2
  404e12:	2701      	movs	r7, #1
  404e14:	4698      	mov	r8, r3
  404e16:	e7a2      	b.n	404d5e <__mdiff+0x4e>

00404e18 <__d2b>:
  404e18:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404e1c:	b082      	sub	sp, #8
  404e1e:	2101      	movs	r1, #1
  404e20:	461c      	mov	r4, r3
  404e22:	f3c3 570a 	ubfx	r7, r3, #20, #11
  404e26:	4615      	mov	r5, r2
  404e28:	9e08      	ldr	r6, [sp, #32]
  404e2a:	f7ff fd57 	bl	4048dc <_Balloc>
  404e2e:	f3c4 0413 	ubfx	r4, r4, #0, #20
  404e32:	4680      	mov	r8, r0
  404e34:	b10f      	cbz	r7, 404e3a <__d2b+0x22>
  404e36:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
  404e3a:	9401      	str	r4, [sp, #4]
  404e3c:	b31d      	cbz	r5, 404e86 <__d2b+0x6e>
  404e3e:	a802      	add	r0, sp, #8
  404e40:	f840 5d08 	str.w	r5, [r0, #-8]!
  404e44:	f7ff fdda 	bl	4049fc <__lo0bits>
  404e48:	2800      	cmp	r0, #0
  404e4a:	d134      	bne.n	404eb6 <__d2b+0x9e>
  404e4c:	e89d 000c 	ldmia.w	sp, {r2, r3}
  404e50:	f8c8 2014 	str.w	r2, [r8, #20]
  404e54:	2b00      	cmp	r3, #0
  404e56:	bf0c      	ite	eq
  404e58:	2101      	moveq	r1, #1
  404e5a:	2102      	movne	r1, #2
  404e5c:	f8c8 3018 	str.w	r3, [r8, #24]
  404e60:	f8c8 1010 	str.w	r1, [r8, #16]
  404e64:	b9df      	cbnz	r7, 404e9e <__d2b+0x86>
  404e66:	eb08 0381 	add.w	r3, r8, r1, lsl #2
  404e6a:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  404e6e:	6030      	str	r0, [r6, #0]
  404e70:	6918      	ldr	r0, [r3, #16]
  404e72:	f7ff fda3 	bl	4049bc <__hi0bits>
  404e76:	9b09      	ldr	r3, [sp, #36]	; 0x24
  404e78:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  404e7c:	6018      	str	r0, [r3, #0]
  404e7e:	4640      	mov	r0, r8
  404e80:	b002      	add	sp, #8
  404e82:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404e86:	a801      	add	r0, sp, #4
  404e88:	f7ff fdb8 	bl	4049fc <__lo0bits>
  404e8c:	9b01      	ldr	r3, [sp, #4]
  404e8e:	f8c8 3014 	str.w	r3, [r8, #20]
  404e92:	2101      	movs	r1, #1
  404e94:	3020      	adds	r0, #32
  404e96:	f8c8 1010 	str.w	r1, [r8, #16]
  404e9a:	2f00      	cmp	r7, #0
  404e9c:	d0e3      	beq.n	404e66 <__d2b+0x4e>
  404e9e:	9b09      	ldr	r3, [sp, #36]	; 0x24
  404ea0:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
  404ea4:	4407      	add	r7, r0
  404ea6:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  404eaa:	6037      	str	r7, [r6, #0]
  404eac:	6018      	str	r0, [r3, #0]
  404eae:	4640      	mov	r0, r8
  404eb0:	b002      	add	sp, #8
  404eb2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404eb6:	e89d 000a 	ldmia.w	sp, {r1, r3}
  404eba:	f1c0 0220 	rsb	r2, r0, #32
  404ebe:	fa03 f202 	lsl.w	r2, r3, r2
  404ec2:	430a      	orrs	r2, r1
  404ec4:	40c3      	lsrs	r3, r0
  404ec6:	9301      	str	r3, [sp, #4]
  404ec8:	f8c8 2014 	str.w	r2, [r8, #20]
  404ecc:	e7c2      	b.n	404e54 <__d2b+0x3c>
  404ece:	bf00      	nop

00404ed0 <_sbrk_r>:
  404ed0:	b538      	push	{r3, r4, r5, lr}
  404ed2:	4c07      	ldr	r4, [pc, #28]	; (404ef0 <_sbrk_r+0x20>)
  404ed4:	2300      	movs	r3, #0
  404ed6:	4605      	mov	r5, r0
  404ed8:	4608      	mov	r0, r1
  404eda:	6023      	str	r3, [r4, #0]
  404edc:	f7fc fa6e 	bl	4013bc <_sbrk>
  404ee0:	1c43      	adds	r3, r0, #1
  404ee2:	d000      	beq.n	404ee6 <_sbrk_r+0x16>
  404ee4:	bd38      	pop	{r3, r4, r5, pc}
  404ee6:	6823      	ldr	r3, [r4, #0]
  404ee8:	2b00      	cmp	r3, #0
  404eea:	d0fb      	beq.n	404ee4 <_sbrk_r+0x14>
  404eec:	602b      	str	r3, [r5, #0]
  404eee:	bd38      	pop	{r3, r4, r5, pc}
  404ef0:	20400cd0 	.word	0x20400cd0
	...

00404f00 <strlen>:
  404f00:	f890 f000 	pld	[r0]
  404f04:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  404f08:	f020 0107 	bic.w	r1, r0, #7
  404f0c:	f06f 0c00 	mvn.w	ip, #0
  404f10:	f010 0407 	ands.w	r4, r0, #7
  404f14:	f891 f020 	pld	[r1, #32]
  404f18:	f040 8049 	bne.w	404fae <strlen+0xae>
  404f1c:	f04f 0400 	mov.w	r4, #0
  404f20:	f06f 0007 	mvn.w	r0, #7
  404f24:	e9d1 2300 	ldrd	r2, r3, [r1]
  404f28:	f891 f040 	pld	[r1, #64]	; 0x40
  404f2c:	f100 0008 	add.w	r0, r0, #8
  404f30:	fa82 f24c 	uadd8	r2, r2, ip
  404f34:	faa4 f28c 	sel	r2, r4, ip
  404f38:	fa83 f34c 	uadd8	r3, r3, ip
  404f3c:	faa2 f38c 	sel	r3, r2, ip
  404f40:	bb4b      	cbnz	r3, 404f96 <strlen+0x96>
  404f42:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  404f46:	fa82 f24c 	uadd8	r2, r2, ip
  404f4a:	f100 0008 	add.w	r0, r0, #8
  404f4e:	faa4 f28c 	sel	r2, r4, ip
  404f52:	fa83 f34c 	uadd8	r3, r3, ip
  404f56:	faa2 f38c 	sel	r3, r2, ip
  404f5a:	b9e3      	cbnz	r3, 404f96 <strlen+0x96>
  404f5c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  404f60:	fa82 f24c 	uadd8	r2, r2, ip
  404f64:	f100 0008 	add.w	r0, r0, #8
  404f68:	faa4 f28c 	sel	r2, r4, ip
  404f6c:	fa83 f34c 	uadd8	r3, r3, ip
  404f70:	faa2 f38c 	sel	r3, r2, ip
  404f74:	b97b      	cbnz	r3, 404f96 <strlen+0x96>
  404f76:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  404f7a:	f101 0120 	add.w	r1, r1, #32
  404f7e:	fa82 f24c 	uadd8	r2, r2, ip
  404f82:	f100 0008 	add.w	r0, r0, #8
  404f86:	faa4 f28c 	sel	r2, r4, ip
  404f8a:	fa83 f34c 	uadd8	r3, r3, ip
  404f8e:	faa2 f38c 	sel	r3, r2, ip
  404f92:	2b00      	cmp	r3, #0
  404f94:	d0c6      	beq.n	404f24 <strlen+0x24>
  404f96:	2a00      	cmp	r2, #0
  404f98:	bf04      	itt	eq
  404f9a:	3004      	addeq	r0, #4
  404f9c:	461a      	moveq	r2, r3
  404f9e:	ba12      	rev	r2, r2
  404fa0:	fab2 f282 	clz	r2, r2
  404fa4:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  404fa8:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  404fac:	4770      	bx	lr
  404fae:	e9d1 2300 	ldrd	r2, r3, [r1]
  404fb2:	f004 0503 	and.w	r5, r4, #3
  404fb6:	f1c4 0000 	rsb	r0, r4, #0
  404fba:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  404fbe:	f014 0f04 	tst.w	r4, #4
  404fc2:	f891 f040 	pld	[r1, #64]	; 0x40
  404fc6:	fa0c f505 	lsl.w	r5, ip, r5
  404fca:	ea62 0205 	orn	r2, r2, r5
  404fce:	bf1c      	itt	ne
  404fd0:	ea63 0305 	ornne	r3, r3, r5
  404fd4:	4662      	movne	r2, ip
  404fd6:	f04f 0400 	mov.w	r4, #0
  404fda:	e7a9      	b.n	404f30 <strlen+0x30>

00404fdc <__ssprint_r>:
  404fdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404fe0:	6893      	ldr	r3, [r2, #8]
  404fe2:	b083      	sub	sp, #12
  404fe4:	4690      	mov	r8, r2
  404fe6:	2b00      	cmp	r3, #0
  404fe8:	d070      	beq.n	4050cc <__ssprint_r+0xf0>
  404fea:	4682      	mov	sl, r0
  404fec:	460c      	mov	r4, r1
  404fee:	6817      	ldr	r7, [r2, #0]
  404ff0:	688d      	ldr	r5, [r1, #8]
  404ff2:	6808      	ldr	r0, [r1, #0]
  404ff4:	e042      	b.n	40507c <__ssprint_r+0xa0>
  404ff6:	89a3      	ldrh	r3, [r4, #12]
  404ff8:	f413 6f90 	tst.w	r3, #1152	; 0x480
  404ffc:	d02e      	beq.n	40505c <__ssprint_r+0x80>
  404ffe:	6965      	ldr	r5, [r4, #20]
  405000:	6921      	ldr	r1, [r4, #16]
  405002:	eb05 0545 	add.w	r5, r5, r5, lsl #1
  405006:	eba0 0b01 	sub.w	fp, r0, r1
  40500a:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
  40500e:	f10b 0001 	add.w	r0, fp, #1
  405012:	106d      	asrs	r5, r5, #1
  405014:	4430      	add	r0, r6
  405016:	42a8      	cmp	r0, r5
  405018:	462a      	mov	r2, r5
  40501a:	bf84      	itt	hi
  40501c:	4605      	movhi	r5, r0
  40501e:	462a      	movhi	r2, r5
  405020:	055b      	lsls	r3, r3, #21
  405022:	d538      	bpl.n	405096 <__ssprint_r+0xba>
  405024:	4611      	mov	r1, r2
  405026:	4650      	mov	r0, sl
  405028:	f7ff f8ac 	bl	404184 <_malloc_r>
  40502c:	2800      	cmp	r0, #0
  40502e:	d03c      	beq.n	4050aa <__ssprint_r+0xce>
  405030:	465a      	mov	r2, fp
  405032:	6921      	ldr	r1, [r4, #16]
  405034:	9001      	str	r0, [sp, #4]
  405036:	f7ff fbab 	bl	404790 <memcpy>
  40503a:	89a2      	ldrh	r2, [r4, #12]
  40503c:	9b01      	ldr	r3, [sp, #4]
  40503e:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  405042:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  405046:	81a2      	strh	r2, [r4, #12]
  405048:	eba5 020b 	sub.w	r2, r5, fp
  40504c:	eb03 000b 	add.w	r0, r3, fp
  405050:	6165      	str	r5, [r4, #20]
  405052:	6123      	str	r3, [r4, #16]
  405054:	6020      	str	r0, [r4, #0]
  405056:	60a2      	str	r2, [r4, #8]
  405058:	4635      	mov	r5, r6
  40505a:	46b3      	mov	fp, r6
  40505c:	465a      	mov	r2, fp
  40505e:	4649      	mov	r1, r9
  405060:	f000 fa18 	bl	405494 <memmove>
  405064:	f8d8 3008 	ldr.w	r3, [r8, #8]
  405068:	68a2      	ldr	r2, [r4, #8]
  40506a:	6820      	ldr	r0, [r4, #0]
  40506c:	1b55      	subs	r5, r2, r5
  40506e:	4458      	add	r0, fp
  405070:	1b9e      	subs	r6, r3, r6
  405072:	60a5      	str	r5, [r4, #8]
  405074:	6020      	str	r0, [r4, #0]
  405076:	f8c8 6008 	str.w	r6, [r8, #8]
  40507a:	b33e      	cbz	r6, 4050cc <__ssprint_r+0xf0>
  40507c:	687e      	ldr	r6, [r7, #4]
  40507e:	463b      	mov	r3, r7
  405080:	3708      	adds	r7, #8
  405082:	2e00      	cmp	r6, #0
  405084:	d0fa      	beq.n	40507c <__ssprint_r+0xa0>
  405086:	42ae      	cmp	r6, r5
  405088:	f8d3 9000 	ldr.w	r9, [r3]
  40508c:	46ab      	mov	fp, r5
  40508e:	d2b2      	bcs.n	404ff6 <__ssprint_r+0x1a>
  405090:	4635      	mov	r5, r6
  405092:	46b3      	mov	fp, r6
  405094:	e7e2      	b.n	40505c <__ssprint_r+0x80>
  405096:	4650      	mov	r0, sl
  405098:	f000 fa60 	bl	40555c <_realloc_r>
  40509c:	4603      	mov	r3, r0
  40509e:	2800      	cmp	r0, #0
  4050a0:	d1d2      	bne.n	405048 <__ssprint_r+0x6c>
  4050a2:	6921      	ldr	r1, [r4, #16]
  4050a4:	4650      	mov	r0, sl
  4050a6:	f000 f8f9 	bl	40529c <_free_r>
  4050aa:	230c      	movs	r3, #12
  4050ac:	f8ca 3000 	str.w	r3, [sl]
  4050b0:	89a3      	ldrh	r3, [r4, #12]
  4050b2:	2200      	movs	r2, #0
  4050b4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4050b8:	f04f 30ff 	mov.w	r0, #4294967295
  4050bc:	81a3      	strh	r3, [r4, #12]
  4050be:	f8c8 2008 	str.w	r2, [r8, #8]
  4050c2:	f8c8 2004 	str.w	r2, [r8, #4]
  4050c6:	b003      	add	sp, #12
  4050c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4050cc:	2000      	movs	r0, #0
  4050ce:	f8c8 0004 	str.w	r0, [r8, #4]
  4050d2:	b003      	add	sp, #12
  4050d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

004050d8 <__register_exitproc>:
  4050d8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4050dc:	4d2c      	ldr	r5, [pc, #176]	; (405190 <__register_exitproc+0xb8>)
  4050de:	4606      	mov	r6, r0
  4050e0:	6828      	ldr	r0, [r5, #0]
  4050e2:	4698      	mov	r8, r3
  4050e4:	460f      	mov	r7, r1
  4050e6:	4691      	mov	r9, r2
  4050e8:	f7ff f848 	bl	40417c <__retarget_lock_acquire_recursive>
  4050ec:	4b29      	ldr	r3, [pc, #164]	; (405194 <__register_exitproc+0xbc>)
  4050ee:	681c      	ldr	r4, [r3, #0]
  4050f0:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  4050f4:	2b00      	cmp	r3, #0
  4050f6:	d03e      	beq.n	405176 <__register_exitproc+0x9e>
  4050f8:	685a      	ldr	r2, [r3, #4]
  4050fa:	2a1f      	cmp	r2, #31
  4050fc:	dc1c      	bgt.n	405138 <__register_exitproc+0x60>
  4050fe:	f102 0e01 	add.w	lr, r2, #1
  405102:	b176      	cbz	r6, 405122 <__register_exitproc+0x4a>
  405104:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  405108:	2401      	movs	r4, #1
  40510a:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  40510e:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  405112:	4094      	lsls	r4, r2
  405114:	4320      	orrs	r0, r4
  405116:	2e02      	cmp	r6, #2
  405118:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  40511c:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  405120:	d023      	beq.n	40516a <__register_exitproc+0x92>
  405122:	3202      	adds	r2, #2
  405124:	f8c3 e004 	str.w	lr, [r3, #4]
  405128:	6828      	ldr	r0, [r5, #0]
  40512a:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  40512e:	f7ff f827 	bl	404180 <__retarget_lock_release_recursive>
  405132:	2000      	movs	r0, #0
  405134:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  405138:	4b17      	ldr	r3, [pc, #92]	; (405198 <__register_exitproc+0xc0>)
  40513a:	b30b      	cbz	r3, 405180 <__register_exitproc+0xa8>
  40513c:	f44f 70c8 	mov.w	r0, #400	; 0x190
  405140:	f3af 8000 	nop.w
  405144:	4603      	mov	r3, r0
  405146:	b1d8      	cbz	r0, 405180 <__register_exitproc+0xa8>
  405148:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  40514c:	6002      	str	r2, [r0, #0]
  40514e:	2100      	movs	r1, #0
  405150:	6041      	str	r1, [r0, #4]
  405152:	460a      	mov	r2, r1
  405154:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  405158:	f04f 0e01 	mov.w	lr, #1
  40515c:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  405160:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  405164:	2e00      	cmp	r6, #0
  405166:	d0dc      	beq.n	405122 <__register_exitproc+0x4a>
  405168:	e7cc      	b.n	405104 <__register_exitproc+0x2c>
  40516a:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  40516e:	430c      	orrs	r4, r1
  405170:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  405174:	e7d5      	b.n	405122 <__register_exitproc+0x4a>
  405176:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  40517a:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  40517e:	e7bb      	b.n	4050f8 <__register_exitproc+0x20>
  405180:	6828      	ldr	r0, [r5, #0]
  405182:	f7fe fffd 	bl	404180 <__retarget_lock_release_recursive>
  405186:	f04f 30ff 	mov.w	r0, #4294967295
  40518a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40518e:	bf00      	nop
  405190:	20400450 	.word	0x20400450
  405194:	00406c68 	.word	0x00406c68
  405198:	00000000 	.word	0x00000000

0040519c <_calloc_r>:
  40519c:	b510      	push	{r4, lr}
  40519e:	fb02 f101 	mul.w	r1, r2, r1
  4051a2:	f7fe ffef 	bl	404184 <_malloc_r>
  4051a6:	4604      	mov	r4, r0
  4051a8:	b1d8      	cbz	r0, 4051e2 <_calloc_r+0x46>
  4051aa:	f850 2c04 	ldr.w	r2, [r0, #-4]
  4051ae:	f022 0203 	bic.w	r2, r2, #3
  4051b2:	3a04      	subs	r2, #4
  4051b4:	2a24      	cmp	r2, #36	; 0x24
  4051b6:	d818      	bhi.n	4051ea <_calloc_r+0x4e>
  4051b8:	2a13      	cmp	r2, #19
  4051ba:	d914      	bls.n	4051e6 <_calloc_r+0x4a>
  4051bc:	2300      	movs	r3, #0
  4051be:	2a1b      	cmp	r2, #27
  4051c0:	6003      	str	r3, [r0, #0]
  4051c2:	6043      	str	r3, [r0, #4]
  4051c4:	d916      	bls.n	4051f4 <_calloc_r+0x58>
  4051c6:	2a24      	cmp	r2, #36	; 0x24
  4051c8:	6083      	str	r3, [r0, #8]
  4051ca:	60c3      	str	r3, [r0, #12]
  4051cc:	bf11      	iteee	ne
  4051ce:	f100 0210 	addne.w	r2, r0, #16
  4051d2:	6103      	streq	r3, [r0, #16]
  4051d4:	6143      	streq	r3, [r0, #20]
  4051d6:	f100 0218 	addeq.w	r2, r0, #24
  4051da:	2300      	movs	r3, #0
  4051dc:	6013      	str	r3, [r2, #0]
  4051de:	6053      	str	r3, [r2, #4]
  4051e0:	6093      	str	r3, [r2, #8]
  4051e2:	4620      	mov	r0, r4
  4051e4:	bd10      	pop	{r4, pc}
  4051e6:	4602      	mov	r2, r0
  4051e8:	e7f7      	b.n	4051da <_calloc_r+0x3e>
  4051ea:	2100      	movs	r1, #0
  4051ec:	f7fc fd2e 	bl	401c4c <memset>
  4051f0:	4620      	mov	r0, r4
  4051f2:	bd10      	pop	{r4, pc}
  4051f4:	f100 0208 	add.w	r2, r0, #8
  4051f8:	e7ef      	b.n	4051da <_calloc_r+0x3e>
  4051fa:	bf00      	nop

004051fc <_malloc_trim_r>:
  4051fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4051fe:	4f24      	ldr	r7, [pc, #144]	; (405290 <_malloc_trim_r+0x94>)
  405200:	460c      	mov	r4, r1
  405202:	4606      	mov	r6, r0
  405204:	f7ff fb5e 	bl	4048c4 <__malloc_lock>
  405208:	68bb      	ldr	r3, [r7, #8]
  40520a:	685d      	ldr	r5, [r3, #4]
  40520c:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  405210:	310f      	adds	r1, #15
  405212:	f025 0503 	bic.w	r5, r5, #3
  405216:	4429      	add	r1, r5
  405218:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  40521c:	f021 010f 	bic.w	r1, r1, #15
  405220:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  405224:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  405228:	db07      	blt.n	40523a <_malloc_trim_r+0x3e>
  40522a:	2100      	movs	r1, #0
  40522c:	4630      	mov	r0, r6
  40522e:	f7ff fe4f 	bl	404ed0 <_sbrk_r>
  405232:	68bb      	ldr	r3, [r7, #8]
  405234:	442b      	add	r3, r5
  405236:	4298      	cmp	r0, r3
  405238:	d004      	beq.n	405244 <_malloc_trim_r+0x48>
  40523a:	4630      	mov	r0, r6
  40523c:	f7ff fb48 	bl	4048d0 <__malloc_unlock>
  405240:	2000      	movs	r0, #0
  405242:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  405244:	4261      	negs	r1, r4
  405246:	4630      	mov	r0, r6
  405248:	f7ff fe42 	bl	404ed0 <_sbrk_r>
  40524c:	3001      	adds	r0, #1
  40524e:	d00d      	beq.n	40526c <_malloc_trim_r+0x70>
  405250:	4b10      	ldr	r3, [pc, #64]	; (405294 <_malloc_trim_r+0x98>)
  405252:	68ba      	ldr	r2, [r7, #8]
  405254:	6819      	ldr	r1, [r3, #0]
  405256:	1b2d      	subs	r5, r5, r4
  405258:	f045 0501 	orr.w	r5, r5, #1
  40525c:	4630      	mov	r0, r6
  40525e:	1b09      	subs	r1, r1, r4
  405260:	6055      	str	r5, [r2, #4]
  405262:	6019      	str	r1, [r3, #0]
  405264:	f7ff fb34 	bl	4048d0 <__malloc_unlock>
  405268:	2001      	movs	r0, #1
  40526a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40526c:	2100      	movs	r1, #0
  40526e:	4630      	mov	r0, r6
  405270:	f7ff fe2e 	bl	404ed0 <_sbrk_r>
  405274:	68ba      	ldr	r2, [r7, #8]
  405276:	1a83      	subs	r3, r0, r2
  405278:	2b0f      	cmp	r3, #15
  40527a:	ddde      	ble.n	40523a <_malloc_trim_r+0x3e>
  40527c:	4c06      	ldr	r4, [pc, #24]	; (405298 <_malloc_trim_r+0x9c>)
  40527e:	4905      	ldr	r1, [pc, #20]	; (405294 <_malloc_trim_r+0x98>)
  405280:	6824      	ldr	r4, [r4, #0]
  405282:	f043 0301 	orr.w	r3, r3, #1
  405286:	1b00      	subs	r0, r0, r4
  405288:	6053      	str	r3, [r2, #4]
  40528a:	6008      	str	r0, [r1, #0]
  40528c:	e7d5      	b.n	40523a <_malloc_trim_r+0x3e>
  40528e:	bf00      	nop
  405290:	20400454 	.word	0x20400454
  405294:	20400c78 	.word	0x20400c78
  405298:	2040085c 	.word	0x2040085c

0040529c <_free_r>:
  40529c:	2900      	cmp	r1, #0
  40529e:	d044      	beq.n	40532a <_free_r+0x8e>
  4052a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4052a4:	460d      	mov	r5, r1
  4052a6:	4680      	mov	r8, r0
  4052a8:	f7ff fb0c 	bl	4048c4 <__malloc_lock>
  4052ac:	f855 7c04 	ldr.w	r7, [r5, #-4]
  4052b0:	4969      	ldr	r1, [pc, #420]	; (405458 <_free_r+0x1bc>)
  4052b2:	f027 0301 	bic.w	r3, r7, #1
  4052b6:	f1a5 0408 	sub.w	r4, r5, #8
  4052ba:	18e2      	adds	r2, r4, r3
  4052bc:	688e      	ldr	r6, [r1, #8]
  4052be:	6850      	ldr	r0, [r2, #4]
  4052c0:	42b2      	cmp	r2, r6
  4052c2:	f020 0003 	bic.w	r0, r0, #3
  4052c6:	d05e      	beq.n	405386 <_free_r+0xea>
  4052c8:	07fe      	lsls	r6, r7, #31
  4052ca:	6050      	str	r0, [r2, #4]
  4052cc:	d40b      	bmi.n	4052e6 <_free_r+0x4a>
  4052ce:	f855 7c08 	ldr.w	r7, [r5, #-8]
  4052d2:	1be4      	subs	r4, r4, r7
  4052d4:	f101 0e08 	add.w	lr, r1, #8
  4052d8:	68a5      	ldr	r5, [r4, #8]
  4052da:	4575      	cmp	r5, lr
  4052dc:	443b      	add	r3, r7
  4052de:	d06d      	beq.n	4053bc <_free_r+0x120>
  4052e0:	68e7      	ldr	r7, [r4, #12]
  4052e2:	60ef      	str	r7, [r5, #12]
  4052e4:	60bd      	str	r5, [r7, #8]
  4052e6:	1815      	adds	r5, r2, r0
  4052e8:	686d      	ldr	r5, [r5, #4]
  4052ea:	07ed      	lsls	r5, r5, #31
  4052ec:	d53e      	bpl.n	40536c <_free_r+0xd0>
  4052ee:	f043 0201 	orr.w	r2, r3, #1
  4052f2:	6062      	str	r2, [r4, #4]
  4052f4:	50e3      	str	r3, [r4, r3]
  4052f6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  4052fa:	d217      	bcs.n	40532c <_free_r+0x90>
  4052fc:	08db      	lsrs	r3, r3, #3
  4052fe:	1c58      	adds	r0, r3, #1
  405300:	109a      	asrs	r2, r3, #2
  405302:	684d      	ldr	r5, [r1, #4]
  405304:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  405308:	60a7      	str	r7, [r4, #8]
  40530a:	2301      	movs	r3, #1
  40530c:	4093      	lsls	r3, r2
  40530e:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  405312:	432b      	orrs	r3, r5
  405314:	3a08      	subs	r2, #8
  405316:	60e2      	str	r2, [r4, #12]
  405318:	604b      	str	r3, [r1, #4]
  40531a:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  40531e:	60fc      	str	r4, [r7, #12]
  405320:	4640      	mov	r0, r8
  405322:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  405326:	f7ff bad3 	b.w	4048d0 <__malloc_unlock>
  40532a:	4770      	bx	lr
  40532c:	0a5a      	lsrs	r2, r3, #9
  40532e:	2a04      	cmp	r2, #4
  405330:	d852      	bhi.n	4053d8 <_free_r+0x13c>
  405332:	099a      	lsrs	r2, r3, #6
  405334:	f102 0739 	add.w	r7, r2, #57	; 0x39
  405338:	00ff      	lsls	r7, r7, #3
  40533a:	f102 0538 	add.w	r5, r2, #56	; 0x38
  40533e:	19c8      	adds	r0, r1, r7
  405340:	59ca      	ldr	r2, [r1, r7]
  405342:	3808      	subs	r0, #8
  405344:	4290      	cmp	r0, r2
  405346:	d04f      	beq.n	4053e8 <_free_r+0x14c>
  405348:	6851      	ldr	r1, [r2, #4]
  40534a:	f021 0103 	bic.w	r1, r1, #3
  40534e:	428b      	cmp	r3, r1
  405350:	d232      	bcs.n	4053b8 <_free_r+0x11c>
  405352:	6892      	ldr	r2, [r2, #8]
  405354:	4290      	cmp	r0, r2
  405356:	d1f7      	bne.n	405348 <_free_r+0xac>
  405358:	68c3      	ldr	r3, [r0, #12]
  40535a:	60a0      	str	r0, [r4, #8]
  40535c:	60e3      	str	r3, [r4, #12]
  40535e:	609c      	str	r4, [r3, #8]
  405360:	60c4      	str	r4, [r0, #12]
  405362:	4640      	mov	r0, r8
  405364:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  405368:	f7ff bab2 	b.w	4048d0 <__malloc_unlock>
  40536c:	6895      	ldr	r5, [r2, #8]
  40536e:	4f3b      	ldr	r7, [pc, #236]	; (40545c <_free_r+0x1c0>)
  405370:	42bd      	cmp	r5, r7
  405372:	4403      	add	r3, r0
  405374:	d040      	beq.n	4053f8 <_free_r+0x15c>
  405376:	68d0      	ldr	r0, [r2, #12]
  405378:	60e8      	str	r0, [r5, #12]
  40537a:	f043 0201 	orr.w	r2, r3, #1
  40537e:	6085      	str	r5, [r0, #8]
  405380:	6062      	str	r2, [r4, #4]
  405382:	50e3      	str	r3, [r4, r3]
  405384:	e7b7      	b.n	4052f6 <_free_r+0x5a>
  405386:	07ff      	lsls	r7, r7, #31
  405388:	4403      	add	r3, r0
  40538a:	d407      	bmi.n	40539c <_free_r+0x100>
  40538c:	f855 2c08 	ldr.w	r2, [r5, #-8]
  405390:	1aa4      	subs	r4, r4, r2
  405392:	4413      	add	r3, r2
  405394:	68a0      	ldr	r0, [r4, #8]
  405396:	68e2      	ldr	r2, [r4, #12]
  405398:	60c2      	str	r2, [r0, #12]
  40539a:	6090      	str	r0, [r2, #8]
  40539c:	4a30      	ldr	r2, [pc, #192]	; (405460 <_free_r+0x1c4>)
  40539e:	6812      	ldr	r2, [r2, #0]
  4053a0:	f043 0001 	orr.w	r0, r3, #1
  4053a4:	4293      	cmp	r3, r2
  4053a6:	6060      	str	r0, [r4, #4]
  4053a8:	608c      	str	r4, [r1, #8]
  4053aa:	d3b9      	bcc.n	405320 <_free_r+0x84>
  4053ac:	4b2d      	ldr	r3, [pc, #180]	; (405464 <_free_r+0x1c8>)
  4053ae:	4640      	mov	r0, r8
  4053b0:	6819      	ldr	r1, [r3, #0]
  4053b2:	f7ff ff23 	bl	4051fc <_malloc_trim_r>
  4053b6:	e7b3      	b.n	405320 <_free_r+0x84>
  4053b8:	4610      	mov	r0, r2
  4053ba:	e7cd      	b.n	405358 <_free_r+0xbc>
  4053bc:	1811      	adds	r1, r2, r0
  4053be:	6849      	ldr	r1, [r1, #4]
  4053c0:	07c9      	lsls	r1, r1, #31
  4053c2:	d444      	bmi.n	40544e <_free_r+0x1b2>
  4053c4:	6891      	ldr	r1, [r2, #8]
  4053c6:	68d2      	ldr	r2, [r2, #12]
  4053c8:	60ca      	str	r2, [r1, #12]
  4053ca:	4403      	add	r3, r0
  4053cc:	f043 0001 	orr.w	r0, r3, #1
  4053d0:	6091      	str	r1, [r2, #8]
  4053d2:	6060      	str	r0, [r4, #4]
  4053d4:	50e3      	str	r3, [r4, r3]
  4053d6:	e7a3      	b.n	405320 <_free_r+0x84>
  4053d8:	2a14      	cmp	r2, #20
  4053da:	d816      	bhi.n	40540a <_free_r+0x16e>
  4053dc:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  4053e0:	00ff      	lsls	r7, r7, #3
  4053e2:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  4053e6:	e7aa      	b.n	40533e <_free_r+0xa2>
  4053e8:	10aa      	asrs	r2, r5, #2
  4053ea:	2301      	movs	r3, #1
  4053ec:	684d      	ldr	r5, [r1, #4]
  4053ee:	4093      	lsls	r3, r2
  4053f0:	432b      	orrs	r3, r5
  4053f2:	604b      	str	r3, [r1, #4]
  4053f4:	4603      	mov	r3, r0
  4053f6:	e7b0      	b.n	40535a <_free_r+0xbe>
  4053f8:	f043 0201 	orr.w	r2, r3, #1
  4053fc:	614c      	str	r4, [r1, #20]
  4053fe:	610c      	str	r4, [r1, #16]
  405400:	60e5      	str	r5, [r4, #12]
  405402:	60a5      	str	r5, [r4, #8]
  405404:	6062      	str	r2, [r4, #4]
  405406:	50e3      	str	r3, [r4, r3]
  405408:	e78a      	b.n	405320 <_free_r+0x84>
  40540a:	2a54      	cmp	r2, #84	; 0x54
  40540c:	d806      	bhi.n	40541c <_free_r+0x180>
  40540e:	0b1a      	lsrs	r2, r3, #12
  405410:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  405414:	00ff      	lsls	r7, r7, #3
  405416:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  40541a:	e790      	b.n	40533e <_free_r+0xa2>
  40541c:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  405420:	d806      	bhi.n	405430 <_free_r+0x194>
  405422:	0bda      	lsrs	r2, r3, #15
  405424:	f102 0778 	add.w	r7, r2, #120	; 0x78
  405428:	00ff      	lsls	r7, r7, #3
  40542a:	f102 0577 	add.w	r5, r2, #119	; 0x77
  40542e:	e786      	b.n	40533e <_free_r+0xa2>
  405430:	f240 5054 	movw	r0, #1364	; 0x554
  405434:	4282      	cmp	r2, r0
  405436:	d806      	bhi.n	405446 <_free_r+0x1aa>
  405438:	0c9a      	lsrs	r2, r3, #18
  40543a:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  40543e:	00ff      	lsls	r7, r7, #3
  405440:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  405444:	e77b      	b.n	40533e <_free_r+0xa2>
  405446:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  40544a:	257e      	movs	r5, #126	; 0x7e
  40544c:	e777      	b.n	40533e <_free_r+0xa2>
  40544e:	f043 0101 	orr.w	r1, r3, #1
  405452:	6061      	str	r1, [r4, #4]
  405454:	6013      	str	r3, [r2, #0]
  405456:	e763      	b.n	405320 <_free_r+0x84>
  405458:	20400454 	.word	0x20400454
  40545c:	2040045c 	.word	0x2040045c
  405460:	20400860 	.word	0x20400860
  405464:	20400ca8 	.word	0x20400ca8

00405468 <__ascii_mbtowc>:
  405468:	b082      	sub	sp, #8
  40546a:	b149      	cbz	r1, 405480 <__ascii_mbtowc+0x18>
  40546c:	b15a      	cbz	r2, 405486 <__ascii_mbtowc+0x1e>
  40546e:	b16b      	cbz	r3, 40548c <__ascii_mbtowc+0x24>
  405470:	7813      	ldrb	r3, [r2, #0]
  405472:	600b      	str	r3, [r1, #0]
  405474:	7812      	ldrb	r2, [r2, #0]
  405476:	1c10      	adds	r0, r2, #0
  405478:	bf18      	it	ne
  40547a:	2001      	movne	r0, #1
  40547c:	b002      	add	sp, #8
  40547e:	4770      	bx	lr
  405480:	a901      	add	r1, sp, #4
  405482:	2a00      	cmp	r2, #0
  405484:	d1f3      	bne.n	40546e <__ascii_mbtowc+0x6>
  405486:	4610      	mov	r0, r2
  405488:	b002      	add	sp, #8
  40548a:	4770      	bx	lr
  40548c:	f06f 0001 	mvn.w	r0, #1
  405490:	e7f4      	b.n	40547c <__ascii_mbtowc+0x14>
  405492:	bf00      	nop

00405494 <memmove>:
  405494:	4288      	cmp	r0, r1
  405496:	b5f0      	push	{r4, r5, r6, r7, lr}
  405498:	d90d      	bls.n	4054b6 <memmove+0x22>
  40549a:	188b      	adds	r3, r1, r2
  40549c:	4298      	cmp	r0, r3
  40549e:	d20a      	bcs.n	4054b6 <memmove+0x22>
  4054a0:	1884      	adds	r4, r0, r2
  4054a2:	2a00      	cmp	r2, #0
  4054a4:	d051      	beq.n	40554a <memmove+0xb6>
  4054a6:	4622      	mov	r2, r4
  4054a8:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  4054ac:	f802 4d01 	strb.w	r4, [r2, #-1]!
  4054b0:	4299      	cmp	r1, r3
  4054b2:	d1f9      	bne.n	4054a8 <memmove+0x14>
  4054b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4054b6:	2a0f      	cmp	r2, #15
  4054b8:	d948      	bls.n	40554c <memmove+0xb8>
  4054ba:	ea41 0300 	orr.w	r3, r1, r0
  4054be:	079b      	lsls	r3, r3, #30
  4054c0:	d146      	bne.n	405550 <memmove+0xbc>
  4054c2:	f100 0410 	add.w	r4, r0, #16
  4054c6:	f101 0310 	add.w	r3, r1, #16
  4054ca:	4615      	mov	r5, r2
  4054cc:	f853 6c10 	ldr.w	r6, [r3, #-16]
  4054d0:	f844 6c10 	str.w	r6, [r4, #-16]
  4054d4:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  4054d8:	f844 6c0c 	str.w	r6, [r4, #-12]
  4054dc:	f853 6c08 	ldr.w	r6, [r3, #-8]
  4054e0:	f844 6c08 	str.w	r6, [r4, #-8]
  4054e4:	3d10      	subs	r5, #16
  4054e6:	f853 6c04 	ldr.w	r6, [r3, #-4]
  4054ea:	f844 6c04 	str.w	r6, [r4, #-4]
  4054ee:	2d0f      	cmp	r5, #15
  4054f0:	f103 0310 	add.w	r3, r3, #16
  4054f4:	f104 0410 	add.w	r4, r4, #16
  4054f8:	d8e8      	bhi.n	4054cc <memmove+0x38>
  4054fa:	f1a2 0310 	sub.w	r3, r2, #16
  4054fe:	f023 030f 	bic.w	r3, r3, #15
  405502:	f002 0e0f 	and.w	lr, r2, #15
  405506:	3310      	adds	r3, #16
  405508:	f1be 0f03 	cmp.w	lr, #3
  40550c:	4419      	add	r1, r3
  40550e:	4403      	add	r3, r0
  405510:	d921      	bls.n	405556 <memmove+0xc2>
  405512:	1f1e      	subs	r6, r3, #4
  405514:	460d      	mov	r5, r1
  405516:	4674      	mov	r4, lr
  405518:	3c04      	subs	r4, #4
  40551a:	f855 7b04 	ldr.w	r7, [r5], #4
  40551e:	f846 7f04 	str.w	r7, [r6, #4]!
  405522:	2c03      	cmp	r4, #3
  405524:	d8f8      	bhi.n	405518 <memmove+0x84>
  405526:	f1ae 0404 	sub.w	r4, lr, #4
  40552a:	f024 0403 	bic.w	r4, r4, #3
  40552e:	3404      	adds	r4, #4
  405530:	4421      	add	r1, r4
  405532:	4423      	add	r3, r4
  405534:	f002 0203 	and.w	r2, r2, #3
  405538:	b162      	cbz	r2, 405554 <memmove+0xc0>
  40553a:	3b01      	subs	r3, #1
  40553c:	440a      	add	r2, r1
  40553e:	f811 4b01 	ldrb.w	r4, [r1], #1
  405542:	f803 4f01 	strb.w	r4, [r3, #1]!
  405546:	428a      	cmp	r2, r1
  405548:	d1f9      	bne.n	40553e <memmove+0xaa>
  40554a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40554c:	4603      	mov	r3, r0
  40554e:	e7f3      	b.n	405538 <memmove+0xa4>
  405550:	4603      	mov	r3, r0
  405552:	e7f2      	b.n	40553a <memmove+0xa6>
  405554:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405556:	4672      	mov	r2, lr
  405558:	e7ee      	b.n	405538 <memmove+0xa4>
  40555a:	bf00      	nop

0040555c <_realloc_r>:
  40555c:	2900      	cmp	r1, #0
  40555e:	f000 8095 	beq.w	40568c <_realloc_r+0x130>
  405562:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405566:	460d      	mov	r5, r1
  405568:	4616      	mov	r6, r2
  40556a:	b083      	sub	sp, #12
  40556c:	4680      	mov	r8, r0
  40556e:	f106 070b 	add.w	r7, r6, #11
  405572:	f7ff f9a7 	bl	4048c4 <__malloc_lock>
  405576:	f855 ec04 	ldr.w	lr, [r5, #-4]
  40557a:	2f16      	cmp	r7, #22
  40557c:	f02e 0403 	bic.w	r4, lr, #3
  405580:	f1a5 0908 	sub.w	r9, r5, #8
  405584:	d83c      	bhi.n	405600 <_realloc_r+0xa4>
  405586:	2210      	movs	r2, #16
  405588:	4617      	mov	r7, r2
  40558a:	42be      	cmp	r6, r7
  40558c:	d83d      	bhi.n	40560a <_realloc_r+0xae>
  40558e:	4294      	cmp	r4, r2
  405590:	da43      	bge.n	40561a <_realloc_r+0xbe>
  405592:	4bc4      	ldr	r3, [pc, #784]	; (4058a4 <_realloc_r+0x348>)
  405594:	6899      	ldr	r1, [r3, #8]
  405596:	eb09 0004 	add.w	r0, r9, r4
  40559a:	4288      	cmp	r0, r1
  40559c:	f000 80b4 	beq.w	405708 <_realloc_r+0x1ac>
  4055a0:	6843      	ldr	r3, [r0, #4]
  4055a2:	f023 0101 	bic.w	r1, r3, #1
  4055a6:	4401      	add	r1, r0
  4055a8:	6849      	ldr	r1, [r1, #4]
  4055aa:	07c9      	lsls	r1, r1, #31
  4055ac:	d54c      	bpl.n	405648 <_realloc_r+0xec>
  4055ae:	f01e 0f01 	tst.w	lr, #1
  4055b2:	f000 809b 	beq.w	4056ec <_realloc_r+0x190>
  4055b6:	4631      	mov	r1, r6
  4055b8:	4640      	mov	r0, r8
  4055ba:	f7fe fde3 	bl	404184 <_malloc_r>
  4055be:	4606      	mov	r6, r0
  4055c0:	2800      	cmp	r0, #0
  4055c2:	d03a      	beq.n	40563a <_realloc_r+0xde>
  4055c4:	f855 3c04 	ldr.w	r3, [r5, #-4]
  4055c8:	f023 0301 	bic.w	r3, r3, #1
  4055cc:	444b      	add	r3, r9
  4055ce:	f1a0 0208 	sub.w	r2, r0, #8
  4055d2:	429a      	cmp	r2, r3
  4055d4:	f000 8121 	beq.w	40581a <_realloc_r+0x2be>
  4055d8:	1f22      	subs	r2, r4, #4
  4055da:	2a24      	cmp	r2, #36	; 0x24
  4055dc:	f200 8107 	bhi.w	4057ee <_realloc_r+0x292>
  4055e0:	2a13      	cmp	r2, #19
  4055e2:	f200 80db 	bhi.w	40579c <_realloc_r+0x240>
  4055e6:	4603      	mov	r3, r0
  4055e8:	462a      	mov	r2, r5
  4055ea:	6811      	ldr	r1, [r2, #0]
  4055ec:	6019      	str	r1, [r3, #0]
  4055ee:	6851      	ldr	r1, [r2, #4]
  4055f0:	6059      	str	r1, [r3, #4]
  4055f2:	6892      	ldr	r2, [r2, #8]
  4055f4:	609a      	str	r2, [r3, #8]
  4055f6:	4629      	mov	r1, r5
  4055f8:	4640      	mov	r0, r8
  4055fa:	f7ff fe4f 	bl	40529c <_free_r>
  4055fe:	e01c      	b.n	40563a <_realloc_r+0xde>
  405600:	f027 0707 	bic.w	r7, r7, #7
  405604:	2f00      	cmp	r7, #0
  405606:	463a      	mov	r2, r7
  405608:	dabf      	bge.n	40558a <_realloc_r+0x2e>
  40560a:	2600      	movs	r6, #0
  40560c:	230c      	movs	r3, #12
  40560e:	4630      	mov	r0, r6
  405610:	f8c8 3000 	str.w	r3, [r8]
  405614:	b003      	add	sp, #12
  405616:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40561a:	462e      	mov	r6, r5
  40561c:	1be3      	subs	r3, r4, r7
  40561e:	2b0f      	cmp	r3, #15
  405620:	d81e      	bhi.n	405660 <_realloc_r+0x104>
  405622:	f8d9 3004 	ldr.w	r3, [r9, #4]
  405626:	f003 0301 	and.w	r3, r3, #1
  40562a:	4323      	orrs	r3, r4
  40562c:	444c      	add	r4, r9
  40562e:	f8c9 3004 	str.w	r3, [r9, #4]
  405632:	6863      	ldr	r3, [r4, #4]
  405634:	f043 0301 	orr.w	r3, r3, #1
  405638:	6063      	str	r3, [r4, #4]
  40563a:	4640      	mov	r0, r8
  40563c:	f7ff f948 	bl	4048d0 <__malloc_unlock>
  405640:	4630      	mov	r0, r6
  405642:	b003      	add	sp, #12
  405644:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405648:	f023 0303 	bic.w	r3, r3, #3
  40564c:	18e1      	adds	r1, r4, r3
  40564e:	4291      	cmp	r1, r2
  405650:	db1f      	blt.n	405692 <_realloc_r+0x136>
  405652:	68c3      	ldr	r3, [r0, #12]
  405654:	6882      	ldr	r2, [r0, #8]
  405656:	462e      	mov	r6, r5
  405658:	60d3      	str	r3, [r2, #12]
  40565a:	460c      	mov	r4, r1
  40565c:	609a      	str	r2, [r3, #8]
  40565e:	e7dd      	b.n	40561c <_realloc_r+0xc0>
  405660:	f8d9 2004 	ldr.w	r2, [r9, #4]
  405664:	eb09 0107 	add.w	r1, r9, r7
  405668:	f002 0201 	and.w	r2, r2, #1
  40566c:	444c      	add	r4, r9
  40566e:	f043 0301 	orr.w	r3, r3, #1
  405672:	4317      	orrs	r7, r2
  405674:	f8c9 7004 	str.w	r7, [r9, #4]
  405678:	604b      	str	r3, [r1, #4]
  40567a:	6863      	ldr	r3, [r4, #4]
  40567c:	f043 0301 	orr.w	r3, r3, #1
  405680:	3108      	adds	r1, #8
  405682:	6063      	str	r3, [r4, #4]
  405684:	4640      	mov	r0, r8
  405686:	f7ff fe09 	bl	40529c <_free_r>
  40568a:	e7d6      	b.n	40563a <_realloc_r+0xde>
  40568c:	4611      	mov	r1, r2
  40568e:	f7fe bd79 	b.w	404184 <_malloc_r>
  405692:	f01e 0f01 	tst.w	lr, #1
  405696:	d18e      	bne.n	4055b6 <_realloc_r+0x5a>
  405698:	f855 1c08 	ldr.w	r1, [r5, #-8]
  40569c:	eba9 0a01 	sub.w	sl, r9, r1
  4056a0:	f8da 1004 	ldr.w	r1, [sl, #4]
  4056a4:	f021 0103 	bic.w	r1, r1, #3
  4056a8:	440b      	add	r3, r1
  4056aa:	4423      	add	r3, r4
  4056ac:	4293      	cmp	r3, r2
  4056ae:	db25      	blt.n	4056fc <_realloc_r+0x1a0>
  4056b0:	68c2      	ldr	r2, [r0, #12]
  4056b2:	6881      	ldr	r1, [r0, #8]
  4056b4:	4656      	mov	r6, sl
  4056b6:	60ca      	str	r2, [r1, #12]
  4056b8:	6091      	str	r1, [r2, #8]
  4056ba:	f8da 100c 	ldr.w	r1, [sl, #12]
  4056be:	f856 0f08 	ldr.w	r0, [r6, #8]!
  4056c2:	1f22      	subs	r2, r4, #4
  4056c4:	2a24      	cmp	r2, #36	; 0x24
  4056c6:	60c1      	str	r1, [r0, #12]
  4056c8:	6088      	str	r0, [r1, #8]
  4056ca:	f200 8094 	bhi.w	4057f6 <_realloc_r+0x29a>
  4056ce:	2a13      	cmp	r2, #19
  4056d0:	d96f      	bls.n	4057b2 <_realloc_r+0x256>
  4056d2:	6829      	ldr	r1, [r5, #0]
  4056d4:	f8ca 1008 	str.w	r1, [sl, #8]
  4056d8:	6869      	ldr	r1, [r5, #4]
  4056da:	f8ca 100c 	str.w	r1, [sl, #12]
  4056de:	2a1b      	cmp	r2, #27
  4056e0:	f200 80a2 	bhi.w	405828 <_realloc_r+0x2cc>
  4056e4:	3508      	adds	r5, #8
  4056e6:	f10a 0210 	add.w	r2, sl, #16
  4056ea:	e063      	b.n	4057b4 <_realloc_r+0x258>
  4056ec:	f855 3c08 	ldr.w	r3, [r5, #-8]
  4056f0:	eba9 0a03 	sub.w	sl, r9, r3
  4056f4:	f8da 1004 	ldr.w	r1, [sl, #4]
  4056f8:	f021 0103 	bic.w	r1, r1, #3
  4056fc:	1863      	adds	r3, r4, r1
  4056fe:	4293      	cmp	r3, r2
  405700:	f6ff af59 	blt.w	4055b6 <_realloc_r+0x5a>
  405704:	4656      	mov	r6, sl
  405706:	e7d8      	b.n	4056ba <_realloc_r+0x15e>
  405708:	6841      	ldr	r1, [r0, #4]
  40570a:	f021 0b03 	bic.w	fp, r1, #3
  40570e:	44a3      	add	fp, r4
  405710:	f107 0010 	add.w	r0, r7, #16
  405714:	4583      	cmp	fp, r0
  405716:	da56      	bge.n	4057c6 <_realloc_r+0x26a>
  405718:	f01e 0f01 	tst.w	lr, #1
  40571c:	f47f af4b 	bne.w	4055b6 <_realloc_r+0x5a>
  405720:	f855 1c08 	ldr.w	r1, [r5, #-8]
  405724:	eba9 0a01 	sub.w	sl, r9, r1
  405728:	f8da 1004 	ldr.w	r1, [sl, #4]
  40572c:	f021 0103 	bic.w	r1, r1, #3
  405730:	448b      	add	fp, r1
  405732:	4558      	cmp	r0, fp
  405734:	dce2      	bgt.n	4056fc <_realloc_r+0x1a0>
  405736:	4656      	mov	r6, sl
  405738:	f8da 100c 	ldr.w	r1, [sl, #12]
  40573c:	f856 0f08 	ldr.w	r0, [r6, #8]!
  405740:	1f22      	subs	r2, r4, #4
  405742:	2a24      	cmp	r2, #36	; 0x24
  405744:	60c1      	str	r1, [r0, #12]
  405746:	6088      	str	r0, [r1, #8]
  405748:	f200 808f 	bhi.w	40586a <_realloc_r+0x30e>
  40574c:	2a13      	cmp	r2, #19
  40574e:	f240 808a 	bls.w	405866 <_realloc_r+0x30a>
  405752:	6829      	ldr	r1, [r5, #0]
  405754:	f8ca 1008 	str.w	r1, [sl, #8]
  405758:	6869      	ldr	r1, [r5, #4]
  40575a:	f8ca 100c 	str.w	r1, [sl, #12]
  40575e:	2a1b      	cmp	r2, #27
  405760:	f200 808a 	bhi.w	405878 <_realloc_r+0x31c>
  405764:	3508      	adds	r5, #8
  405766:	f10a 0210 	add.w	r2, sl, #16
  40576a:	6829      	ldr	r1, [r5, #0]
  40576c:	6011      	str	r1, [r2, #0]
  40576e:	6869      	ldr	r1, [r5, #4]
  405770:	6051      	str	r1, [r2, #4]
  405772:	68a9      	ldr	r1, [r5, #8]
  405774:	6091      	str	r1, [r2, #8]
  405776:	eb0a 0107 	add.w	r1, sl, r7
  40577a:	ebab 0207 	sub.w	r2, fp, r7
  40577e:	f042 0201 	orr.w	r2, r2, #1
  405782:	6099      	str	r1, [r3, #8]
  405784:	604a      	str	r2, [r1, #4]
  405786:	f8da 3004 	ldr.w	r3, [sl, #4]
  40578a:	f003 0301 	and.w	r3, r3, #1
  40578e:	431f      	orrs	r7, r3
  405790:	4640      	mov	r0, r8
  405792:	f8ca 7004 	str.w	r7, [sl, #4]
  405796:	f7ff f89b 	bl	4048d0 <__malloc_unlock>
  40579a:	e751      	b.n	405640 <_realloc_r+0xe4>
  40579c:	682b      	ldr	r3, [r5, #0]
  40579e:	6003      	str	r3, [r0, #0]
  4057a0:	686b      	ldr	r3, [r5, #4]
  4057a2:	6043      	str	r3, [r0, #4]
  4057a4:	2a1b      	cmp	r2, #27
  4057a6:	d82d      	bhi.n	405804 <_realloc_r+0x2a8>
  4057a8:	f100 0308 	add.w	r3, r0, #8
  4057ac:	f105 0208 	add.w	r2, r5, #8
  4057b0:	e71b      	b.n	4055ea <_realloc_r+0x8e>
  4057b2:	4632      	mov	r2, r6
  4057b4:	6829      	ldr	r1, [r5, #0]
  4057b6:	6011      	str	r1, [r2, #0]
  4057b8:	6869      	ldr	r1, [r5, #4]
  4057ba:	6051      	str	r1, [r2, #4]
  4057bc:	68a9      	ldr	r1, [r5, #8]
  4057be:	6091      	str	r1, [r2, #8]
  4057c0:	461c      	mov	r4, r3
  4057c2:	46d1      	mov	r9, sl
  4057c4:	e72a      	b.n	40561c <_realloc_r+0xc0>
  4057c6:	eb09 0107 	add.w	r1, r9, r7
  4057ca:	ebab 0b07 	sub.w	fp, fp, r7
  4057ce:	f04b 0201 	orr.w	r2, fp, #1
  4057d2:	6099      	str	r1, [r3, #8]
  4057d4:	604a      	str	r2, [r1, #4]
  4057d6:	f855 3c04 	ldr.w	r3, [r5, #-4]
  4057da:	f003 0301 	and.w	r3, r3, #1
  4057de:	431f      	orrs	r7, r3
  4057e0:	4640      	mov	r0, r8
  4057e2:	f845 7c04 	str.w	r7, [r5, #-4]
  4057e6:	f7ff f873 	bl	4048d0 <__malloc_unlock>
  4057ea:	462e      	mov	r6, r5
  4057ec:	e728      	b.n	405640 <_realloc_r+0xe4>
  4057ee:	4629      	mov	r1, r5
  4057f0:	f7ff fe50 	bl	405494 <memmove>
  4057f4:	e6ff      	b.n	4055f6 <_realloc_r+0x9a>
  4057f6:	4629      	mov	r1, r5
  4057f8:	4630      	mov	r0, r6
  4057fa:	461c      	mov	r4, r3
  4057fc:	46d1      	mov	r9, sl
  4057fe:	f7ff fe49 	bl	405494 <memmove>
  405802:	e70b      	b.n	40561c <_realloc_r+0xc0>
  405804:	68ab      	ldr	r3, [r5, #8]
  405806:	6083      	str	r3, [r0, #8]
  405808:	68eb      	ldr	r3, [r5, #12]
  40580a:	60c3      	str	r3, [r0, #12]
  40580c:	2a24      	cmp	r2, #36	; 0x24
  40580e:	d017      	beq.n	405840 <_realloc_r+0x2e4>
  405810:	f100 0310 	add.w	r3, r0, #16
  405814:	f105 0210 	add.w	r2, r5, #16
  405818:	e6e7      	b.n	4055ea <_realloc_r+0x8e>
  40581a:	f850 3c04 	ldr.w	r3, [r0, #-4]
  40581e:	f023 0303 	bic.w	r3, r3, #3
  405822:	441c      	add	r4, r3
  405824:	462e      	mov	r6, r5
  405826:	e6f9      	b.n	40561c <_realloc_r+0xc0>
  405828:	68a9      	ldr	r1, [r5, #8]
  40582a:	f8ca 1010 	str.w	r1, [sl, #16]
  40582e:	68e9      	ldr	r1, [r5, #12]
  405830:	f8ca 1014 	str.w	r1, [sl, #20]
  405834:	2a24      	cmp	r2, #36	; 0x24
  405836:	d00c      	beq.n	405852 <_realloc_r+0x2f6>
  405838:	3510      	adds	r5, #16
  40583a:	f10a 0218 	add.w	r2, sl, #24
  40583e:	e7b9      	b.n	4057b4 <_realloc_r+0x258>
  405840:	692b      	ldr	r3, [r5, #16]
  405842:	6103      	str	r3, [r0, #16]
  405844:	696b      	ldr	r3, [r5, #20]
  405846:	6143      	str	r3, [r0, #20]
  405848:	f105 0218 	add.w	r2, r5, #24
  40584c:	f100 0318 	add.w	r3, r0, #24
  405850:	e6cb      	b.n	4055ea <_realloc_r+0x8e>
  405852:	692a      	ldr	r2, [r5, #16]
  405854:	f8ca 2018 	str.w	r2, [sl, #24]
  405858:	696a      	ldr	r2, [r5, #20]
  40585a:	f8ca 201c 	str.w	r2, [sl, #28]
  40585e:	3518      	adds	r5, #24
  405860:	f10a 0220 	add.w	r2, sl, #32
  405864:	e7a6      	b.n	4057b4 <_realloc_r+0x258>
  405866:	4632      	mov	r2, r6
  405868:	e77f      	b.n	40576a <_realloc_r+0x20e>
  40586a:	4629      	mov	r1, r5
  40586c:	4630      	mov	r0, r6
  40586e:	9301      	str	r3, [sp, #4]
  405870:	f7ff fe10 	bl	405494 <memmove>
  405874:	9b01      	ldr	r3, [sp, #4]
  405876:	e77e      	b.n	405776 <_realloc_r+0x21a>
  405878:	68a9      	ldr	r1, [r5, #8]
  40587a:	f8ca 1010 	str.w	r1, [sl, #16]
  40587e:	68e9      	ldr	r1, [r5, #12]
  405880:	f8ca 1014 	str.w	r1, [sl, #20]
  405884:	2a24      	cmp	r2, #36	; 0x24
  405886:	d003      	beq.n	405890 <_realloc_r+0x334>
  405888:	3510      	adds	r5, #16
  40588a:	f10a 0218 	add.w	r2, sl, #24
  40588e:	e76c      	b.n	40576a <_realloc_r+0x20e>
  405890:	692a      	ldr	r2, [r5, #16]
  405892:	f8ca 2018 	str.w	r2, [sl, #24]
  405896:	696a      	ldr	r2, [r5, #20]
  405898:	f8ca 201c 	str.w	r2, [sl, #28]
  40589c:	3518      	adds	r5, #24
  40589e:	f10a 0220 	add.w	r2, sl, #32
  4058a2:	e762      	b.n	40576a <_realloc_r+0x20e>
  4058a4:	20400454 	.word	0x20400454

004058a8 <__ascii_wctomb>:
  4058a8:	b121      	cbz	r1, 4058b4 <__ascii_wctomb+0xc>
  4058aa:	2aff      	cmp	r2, #255	; 0xff
  4058ac:	d804      	bhi.n	4058b8 <__ascii_wctomb+0x10>
  4058ae:	700a      	strb	r2, [r1, #0]
  4058b0:	2001      	movs	r0, #1
  4058b2:	4770      	bx	lr
  4058b4:	4608      	mov	r0, r1
  4058b6:	4770      	bx	lr
  4058b8:	238a      	movs	r3, #138	; 0x8a
  4058ba:	6003      	str	r3, [r0, #0]
  4058bc:	f04f 30ff 	mov.w	r0, #4294967295
  4058c0:	4770      	bx	lr
  4058c2:	bf00      	nop

004058c4 <__aeabi_drsub>:
  4058c4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  4058c8:	e002      	b.n	4058d0 <__adddf3>
  4058ca:	bf00      	nop

004058cc <__aeabi_dsub>:
  4058cc:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

004058d0 <__adddf3>:
  4058d0:	b530      	push	{r4, r5, lr}
  4058d2:	ea4f 0441 	mov.w	r4, r1, lsl #1
  4058d6:	ea4f 0543 	mov.w	r5, r3, lsl #1
  4058da:	ea94 0f05 	teq	r4, r5
  4058de:	bf08      	it	eq
  4058e0:	ea90 0f02 	teqeq	r0, r2
  4058e4:	bf1f      	itttt	ne
  4058e6:	ea54 0c00 	orrsne.w	ip, r4, r0
  4058ea:	ea55 0c02 	orrsne.w	ip, r5, r2
  4058ee:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  4058f2:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  4058f6:	f000 80e2 	beq.w	405abe <__adddf3+0x1ee>
  4058fa:	ea4f 5454 	mov.w	r4, r4, lsr #21
  4058fe:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  405902:	bfb8      	it	lt
  405904:	426d      	neglt	r5, r5
  405906:	dd0c      	ble.n	405922 <__adddf3+0x52>
  405908:	442c      	add	r4, r5
  40590a:	ea80 0202 	eor.w	r2, r0, r2
  40590e:	ea81 0303 	eor.w	r3, r1, r3
  405912:	ea82 0000 	eor.w	r0, r2, r0
  405916:	ea83 0101 	eor.w	r1, r3, r1
  40591a:	ea80 0202 	eor.w	r2, r0, r2
  40591e:	ea81 0303 	eor.w	r3, r1, r3
  405922:	2d36      	cmp	r5, #54	; 0x36
  405924:	bf88      	it	hi
  405926:	bd30      	pophi	{r4, r5, pc}
  405928:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  40592c:	ea4f 3101 	mov.w	r1, r1, lsl #12
  405930:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  405934:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  405938:	d002      	beq.n	405940 <__adddf3+0x70>
  40593a:	4240      	negs	r0, r0
  40593c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  405940:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  405944:	ea4f 3303 	mov.w	r3, r3, lsl #12
  405948:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  40594c:	d002      	beq.n	405954 <__adddf3+0x84>
  40594e:	4252      	negs	r2, r2
  405950:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  405954:	ea94 0f05 	teq	r4, r5
  405958:	f000 80a7 	beq.w	405aaa <__adddf3+0x1da>
  40595c:	f1a4 0401 	sub.w	r4, r4, #1
  405960:	f1d5 0e20 	rsbs	lr, r5, #32
  405964:	db0d      	blt.n	405982 <__adddf3+0xb2>
  405966:	fa02 fc0e 	lsl.w	ip, r2, lr
  40596a:	fa22 f205 	lsr.w	r2, r2, r5
  40596e:	1880      	adds	r0, r0, r2
  405970:	f141 0100 	adc.w	r1, r1, #0
  405974:	fa03 f20e 	lsl.w	r2, r3, lr
  405978:	1880      	adds	r0, r0, r2
  40597a:	fa43 f305 	asr.w	r3, r3, r5
  40597e:	4159      	adcs	r1, r3
  405980:	e00e      	b.n	4059a0 <__adddf3+0xd0>
  405982:	f1a5 0520 	sub.w	r5, r5, #32
  405986:	f10e 0e20 	add.w	lr, lr, #32
  40598a:	2a01      	cmp	r2, #1
  40598c:	fa03 fc0e 	lsl.w	ip, r3, lr
  405990:	bf28      	it	cs
  405992:	f04c 0c02 	orrcs.w	ip, ip, #2
  405996:	fa43 f305 	asr.w	r3, r3, r5
  40599a:	18c0      	adds	r0, r0, r3
  40599c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  4059a0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  4059a4:	d507      	bpl.n	4059b6 <__adddf3+0xe6>
  4059a6:	f04f 0e00 	mov.w	lr, #0
  4059aa:	f1dc 0c00 	rsbs	ip, ip, #0
  4059ae:	eb7e 0000 	sbcs.w	r0, lr, r0
  4059b2:	eb6e 0101 	sbc.w	r1, lr, r1
  4059b6:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  4059ba:	d31b      	bcc.n	4059f4 <__adddf3+0x124>
  4059bc:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  4059c0:	d30c      	bcc.n	4059dc <__adddf3+0x10c>
  4059c2:	0849      	lsrs	r1, r1, #1
  4059c4:	ea5f 0030 	movs.w	r0, r0, rrx
  4059c8:	ea4f 0c3c 	mov.w	ip, ip, rrx
  4059cc:	f104 0401 	add.w	r4, r4, #1
  4059d0:	ea4f 5244 	mov.w	r2, r4, lsl #21
  4059d4:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  4059d8:	f080 809a 	bcs.w	405b10 <__adddf3+0x240>
  4059dc:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  4059e0:	bf08      	it	eq
  4059e2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  4059e6:	f150 0000 	adcs.w	r0, r0, #0
  4059ea:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  4059ee:	ea41 0105 	orr.w	r1, r1, r5
  4059f2:	bd30      	pop	{r4, r5, pc}
  4059f4:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  4059f8:	4140      	adcs	r0, r0
  4059fa:	eb41 0101 	adc.w	r1, r1, r1
  4059fe:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405a02:	f1a4 0401 	sub.w	r4, r4, #1
  405a06:	d1e9      	bne.n	4059dc <__adddf3+0x10c>
  405a08:	f091 0f00 	teq	r1, #0
  405a0c:	bf04      	itt	eq
  405a0e:	4601      	moveq	r1, r0
  405a10:	2000      	moveq	r0, #0
  405a12:	fab1 f381 	clz	r3, r1
  405a16:	bf08      	it	eq
  405a18:	3320      	addeq	r3, #32
  405a1a:	f1a3 030b 	sub.w	r3, r3, #11
  405a1e:	f1b3 0220 	subs.w	r2, r3, #32
  405a22:	da0c      	bge.n	405a3e <__adddf3+0x16e>
  405a24:	320c      	adds	r2, #12
  405a26:	dd08      	ble.n	405a3a <__adddf3+0x16a>
  405a28:	f102 0c14 	add.w	ip, r2, #20
  405a2c:	f1c2 020c 	rsb	r2, r2, #12
  405a30:	fa01 f00c 	lsl.w	r0, r1, ip
  405a34:	fa21 f102 	lsr.w	r1, r1, r2
  405a38:	e00c      	b.n	405a54 <__adddf3+0x184>
  405a3a:	f102 0214 	add.w	r2, r2, #20
  405a3e:	bfd8      	it	le
  405a40:	f1c2 0c20 	rsble	ip, r2, #32
  405a44:	fa01 f102 	lsl.w	r1, r1, r2
  405a48:	fa20 fc0c 	lsr.w	ip, r0, ip
  405a4c:	bfdc      	itt	le
  405a4e:	ea41 010c 	orrle.w	r1, r1, ip
  405a52:	4090      	lslle	r0, r2
  405a54:	1ae4      	subs	r4, r4, r3
  405a56:	bfa2      	ittt	ge
  405a58:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  405a5c:	4329      	orrge	r1, r5
  405a5e:	bd30      	popge	{r4, r5, pc}
  405a60:	ea6f 0404 	mvn.w	r4, r4
  405a64:	3c1f      	subs	r4, #31
  405a66:	da1c      	bge.n	405aa2 <__adddf3+0x1d2>
  405a68:	340c      	adds	r4, #12
  405a6a:	dc0e      	bgt.n	405a8a <__adddf3+0x1ba>
  405a6c:	f104 0414 	add.w	r4, r4, #20
  405a70:	f1c4 0220 	rsb	r2, r4, #32
  405a74:	fa20 f004 	lsr.w	r0, r0, r4
  405a78:	fa01 f302 	lsl.w	r3, r1, r2
  405a7c:	ea40 0003 	orr.w	r0, r0, r3
  405a80:	fa21 f304 	lsr.w	r3, r1, r4
  405a84:	ea45 0103 	orr.w	r1, r5, r3
  405a88:	bd30      	pop	{r4, r5, pc}
  405a8a:	f1c4 040c 	rsb	r4, r4, #12
  405a8e:	f1c4 0220 	rsb	r2, r4, #32
  405a92:	fa20 f002 	lsr.w	r0, r0, r2
  405a96:	fa01 f304 	lsl.w	r3, r1, r4
  405a9a:	ea40 0003 	orr.w	r0, r0, r3
  405a9e:	4629      	mov	r1, r5
  405aa0:	bd30      	pop	{r4, r5, pc}
  405aa2:	fa21 f004 	lsr.w	r0, r1, r4
  405aa6:	4629      	mov	r1, r5
  405aa8:	bd30      	pop	{r4, r5, pc}
  405aaa:	f094 0f00 	teq	r4, #0
  405aae:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  405ab2:	bf06      	itte	eq
  405ab4:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  405ab8:	3401      	addeq	r4, #1
  405aba:	3d01      	subne	r5, #1
  405abc:	e74e      	b.n	40595c <__adddf3+0x8c>
  405abe:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  405ac2:	bf18      	it	ne
  405ac4:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  405ac8:	d029      	beq.n	405b1e <__adddf3+0x24e>
  405aca:	ea94 0f05 	teq	r4, r5
  405ace:	bf08      	it	eq
  405ad0:	ea90 0f02 	teqeq	r0, r2
  405ad4:	d005      	beq.n	405ae2 <__adddf3+0x212>
  405ad6:	ea54 0c00 	orrs.w	ip, r4, r0
  405ada:	bf04      	itt	eq
  405adc:	4619      	moveq	r1, r3
  405ade:	4610      	moveq	r0, r2
  405ae0:	bd30      	pop	{r4, r5, pc}
  405ae2:	ea91 0f03 	teq	r1, r3
  405ae6:	bf1e      	ittt	ne
  405ae8:	2100      	movne	r1, #0
  405aea:	2000      	movne	r0, #0
  405aec:	bd30      	popne	{r4, r5, pc}
  405aee:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  405af2:	d105      	bne.n	405b00 <__adddf3+0x230>
  405af4:	0040      	lsls	r0, r0, #1
  405af6:	4149      	adcs	r1, r1
  405af8:	bf28      	it	cs
  405afa:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  405afe:	bd30      	pop	{r4, r5, pc}
  405b00:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  405b04:	bf3c      	itt	cc
  405b06:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  405b0a:	bd30      	popcc	{r4, r5, pc}
  405b0c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  405b10:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  405b14:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  405b18:	f04f 0000 	mov.w	r0, #0
  405b1c:	bd30      	pop	{r4, r5, pc}
  405b1e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  405b22:	bf1a      	itte	ne
  405b24:	4619      	movne	r1, r3
  405b26:	4610      	movne	r0, r2
  405b28:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  405b2c:	bf1c      	itt	ne
  405b2e:	460b      	movne	r3, r1
  405b30:	4602      	movne	r2, r0
  405b32:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  405b36:	bf06      	itte	eq
  405b38:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  405b3c:	ea91 0f03 	teqeq	r1, r3
  405b40:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  405b44:	bd30      	pop	{r4, r5, pc}
  405b46:	bf00      	nop

00405b48 <__aeabi_ui2d>:
  405b48:	f090 0f00 	teq	r0, #0
  405b4c:	bf04      	itt	eq
  405b4e:	2100      	moveq	r1, #0
  405b50:	4770      	bxeq	lr
  405b52:	b530      	push	{r4, r5, lr}
  405b54:	f44f 6480 	mov.w	r4, #1024	; 0x400
  405b58:	f104 0432 	add.w	r4, r4, #50	; 0x32
  405b5c:	f04f 0500 	mov.w	r5, #0
  405b60:	f04f 0100 	mov.w	r1, #0
  405b64:	e750      	b.n	405a08 <__adddf3+0x138>
  405b66:	bf00      	nop

00405b68 <__aeabi_i2d>:
  405b68:	f090 0f00 	teq	r0, #0
  405b6c:	bf04      	itt	eq
  405b6e:	2100      	moveq	r1, #0
  405b70:	4770      	bxeq	lr
  405b72:	b530      	push	{r4, r5, lr}
  405b74:	f44f 6480 	mov.w	r4, #1024	; 0x400
  405b78:	f104 0432 	add.w	r4, r4, #50	; 0x32
  405b7c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  405b80:	bf48      	it	mi
  405b82:	4240      	negmi	r0, r0
  405b84:	f04f 0100 	mov.w	r1, #0
  405b88:	e73e      	b.n	405a08 <__adddf3+0x138>
  405b8a:	bf00      	nop

00405b8c <__aeabi_f2d>:
  405b8c:	0042      	lsls	r2, r0, #1
  405b8e:	ea4f 01e2 	mov.w	r1, r2, asr #3
  405b92:	ea4f 0131 	mov.w	r1, r1, rrx
  405b96:	ea4f 7002 	mov.w	r0, r2, lsl #28
  405b9a:	bf1f      	itttt	ne
  405b9c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  405ba0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  405ba4:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  405ba8:	4770      	bxne	lr
  405baa:	f092 0f00 	teq	r2, #0
  405bae:	bf14      	ite	ne
  405bb0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  405bb4:	4770      	bxeq	lr
  405bb6:	b530      	push	{r4, r5, lr}
  405bb8:	f44f 7460 	mov.w	r4, #896	; 0x380
  405bbc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  405bc0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  405bc4:	e720      	b.n	405a08 <__adddf3+0x138>
  405bc6:	bf00      	nop

00405bc8 <__aeabi_ul2d>:
  405bc8:	ea50 0201 	orrs.w	r2, r0, r1
  405bcc:	bf08      	it	eq
  405bce:	4770      	bxeq	lr
  405bd0:	b530      	push	{r4, r5, lr}
  405bd2:	f04f 0500 	mov.w	r5, #0
  405bd6:	e00a      	b.n	405bee <__aeabi_l2d+0x16>

00405bd8 <__aeabi_l2d>:
  405bd8:	ea50 0201 	orrs.w	r2, r0, r1
  405bdc:	bf08      	it	eq
  405bde:	4770      	bxeq	lr
  405be0:	b530      	push	{r4, r5, lr}
  405be2:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  405be6:	d502      	bpl.n	405bee <__aeabi_l2d+0x16>
  405be8:	4240      	negs	r0, r0
  405bea:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  405bee:	f44f 6480 	mov.w	r4, #1024	; 0x400
  405bf2:	f104 0432 	add.w	r4, r4, #50	; 0x32
  405bf6:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  405bfa:	f43f aedc 	beq.w	4059b6 <__adddf3+0xe6>
  405bfe:	f04f 0203 	mov.w	r2, #3
  405c02:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  405c06:	bf18      	it	ne
  405c08:	3203      	addne	r2, #3
  405c0a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  405c0e:	bf18      	it	ne
  405c10:	3203      	addne	r2, #3
  405c12:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  405c16:	f1c2 0320 	rsb	r3, r2, #32
  405c1a:	fa00 fc03 	lsl.w	ip, r0, r3
  405c1e:	fa20 f002 	lsr.w	r0, r0, r2
  405c22:	fa01 fe03 	lsl.w	lr, r1, r3
  405c26:	ea40 000e 	orr.w	r0, r0, lr
  405c2a:	fa21 f102 	lsr.w	r1, r1, r2
  405c2e:	4414      	add	r4, r2
  405c30:	e6c1      	b.n	4059b6 <__adddf3+0xe6>
  405c32:	bf00      	nop

00405c34 <__aeabi_dmul>:
  405c34:	b570      	push	{r4, r5, r6, lr}
  405c36:	f04f 0cff 	mov.w	ip, #255	; 0xff
  405c3a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  405c3e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  405c42:	bf1d      	ittte	ne
  405c44:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  405c48:	ea94 0f0c 	teqne	r4, ip
  405c4c:	ea95 0f0c 	teqne	r5, ip
  405c50:	f000 f8de 	bleq	405e10 <__aeabi_dmul+0x1dc>
  405c54:	442c      	add	r4, r5
  405c56:	ea81 0603 	eor.w	r6, r1, r3
  405c5a:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  405c5e:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  405c62:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  405c66:	bf18      	it	ne
  405c68:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  405c6c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  405c70:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  405c74:	d038      	beq.n	405ce8 <__aeabi_dmul+0xb4>
  405c76:	fba0 ce02 	umull	ip, lr, r0, r2
  405c7a:	f04f 0500 	mov.w	r5, #0
  405c7e:	fbe1 e502 	umlal	lr, r5, r1, r2
  405c82:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  405c86:	fbe0 e503 	umlal	lr, r5, r0, r3
  405c8a:	f04f 0600 	mov.w	r6, #0
  405c8e:	fbe1 5603 	umlal	r5, r6, r1, r3
  405c92:	f09c 0f00 	teq	ip, #0
  405c96:	bf18      	it	ne
  405c98:	f04e 0e01 	orrne.w	lr, lr, #1
  405c9c:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  405ca0:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  405ca4:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  405ca8:	d204      	bcs.n	405cb4 <__aeabi_dmul+0x80>
  405caa:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  405cae:	416d      	adcs	r5, r5
  405cb0:	eb46 0606 	adc.w	r6, r6, r6
  405cb4:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  405cb8:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  405cbc:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  405cc0:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  405cc4:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  405cc8:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  405ccc:	bf88      	it	hi
  405cce:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  405cd2:	d81e      	bhi.n	405d12 <__aeabi_dmul+0xde>
  405cd4:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  405cd8:	bf08      	it	eq
  405cda:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  405cde:	f150 0000 	adcs.w	r0, r0, #0
  405ce2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  405ce6:	bd70      	pop	{r4, r5, r6, pc}
  405ce8:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  405cec:	ea46 0101 	orr.w	r1, r6, r1
  405cf0:	ea40 0002 	orr.w	r0, r0, r2
  405cf4:	ea81 0103 	eor.w	r1, r1, r3
  405cf8:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  405cfc:	bfc2      	ittt	gt
  405cfe:	ebd4 050c 	rsbsgt	r5, r4, ip
  405d02:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  405d06:	bd70      	popgt	{r4, r5, r6, pc}
  405d08:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  405d0c:	f04f 0e00 	mov.w	lr, #0
  405d10:	3c01      	subs	r4, #1
  405d12:	f300 80ab 	bgt.w	405e6c <__aeabi_dmul+0x238>
  405d16:	f114 0f36 	cmn.w	r4, #54	; 0x36
  405d1a:	bfde      	ittt	le
  405d1c:	2000      	movle	r0, #0
  405d1e:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  405d22:	bd70      	pople	{r4, r5, r6, pc}
  405d24:	f1c4 0400 	rsb	r4, r4, #0
  405d28:	3c20      	subs	r4, #32
  405d2a:	da35      	bge.n	405d98 <__aeabi_dmul+0x164>
  405d2c:	340c      	adds	r4, #12
  405d2e:	dc1b      	bgt.n	405d68 <__aeabi_dmul+0x134>
  405d30:	f104 0414 	add.w	r4, r4, #20
  405d34:	f1c4 0520 	rsb	r5, r4, #32
  405d38:	fa00 f305 	lsl.w	r3, r0, r5
  405d3c:	fa20 f004 	lsr.w	r0, r0, r4
  405d40:	fa01 f205 	lsl.w	r2, r1, r5
  405d44:	ea40 0002 	orr.w	r0, r0, r2
  405d48:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  405d4c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  405d50:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  405d54:	fa21 f604 	lsr.w	r6, r1, r4
  405d58:	eb42 0106 	adc.w	r1, r2, r6
  405d5c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  405d60:	bf08      	it	eq
  405d62:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  405d66:	bd70      	pop	{r4, r5, r6, pc}
  405d68:	f1c4 040c 	rsb	r4, r4, #12
  405d6c:	f1c4 0520 	rsb	r5, r4, #32
  405d70:	fa00 f304 	lsl.w	r3, r0, r4
  405d74:	fa20 f005 	lsr.w	r0, r0, r5
  405d78:	fa01 f204 	lsl.w	r2, r1, r4
  405d7c:	ea40 0002 	orr.w	r0, r0, r2
  405d80:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405d84:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  405d88:	f141 0100 	adc.w	r1, r1, #0
  405d8c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  405d90:	bf08      	it	eq
  405d92:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  405d96:	bd70      	pop	{r4, r5, r6, pc}
  405d98:	f1c4 0520 	rsb	r5, r4, #32
  405d9c:	fa00 f205 	lsl.w	r2, r0, r5
  405da0:	ea4e 0e02 	orr.w	lr, lr, r2
  405da4:	fa20 f304 	lsr.w	r3, r0, r4
  405da8:	fa01 f205 	lsl.w	r2, r1, r5
  405dac:	ea43 0302 	orr.w	r3, r3, r2
  405db0:	fa21 f004 	lsr.w	r0, r1, r4
  405db4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405db8:	fa21 f204 	lsr.w	r2, r1, r4
  405dbc:	ea20 0002 	bic.w	r0, r0, r2
  405dc0:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  405dc4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  405dc8:	bf08      	it	eq
  405dca:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  405dce:	bd70      	pop	{r4, r5, r6, pc}
  405dd0:	f094 0f00 	teq	r4, #0
  405dd4:	d10f      	bne.n	405df6 <__aeabi_dmul+0x1c2>
  405dd6:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  405dda:	0040      	lsls	r0, r0, #1
  405ddc:	eb41 0101 	adc.w	r1, r1, r1
  405de0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405de4:	bf08      	it	eq
  405de6:	3c01      	subeq	r4, #1
  405de8:	d0f7      	beq.n	405dda <__aeabi_dmul+0x1a6>
  405dea:	ea41 0106 	orr.w	r1, r1, r6
  405dee:	f095 0f00 	teq	r5, #0
  405df2:	bf18      	it	ne
  405df4:	4770      	bxne	lr
  405df6:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  405dfa:	0052      	lsls	r2, r2, #1
  405dfc:	eb43 0303 	adc.w	r3, r3, r3
  405e00:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  405e04:	bf08      	it	eq
  405e06:	3d01      	subeq	r5, #1
  405e08:	d0f7      	beq.n	405dfa <__aeabi_dmul+0x1c6>
  405e0a:	ea43 0306 	orr.w	r3, r3, r6
  405e0e:	4770      	bx	lr
  405e10:	ea94 0f0c 	teq	r4, ip
  405e14:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  405e18:	bf18      	it	ne
  405e1a:	ea95 0f0c 	teqne	r5, ip
  405e1e:	d00c      	beq.n	405e3a <__aeabi_dmul+0x206>
  405e20:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  405e24:	bf18      	it	ne
  405e26:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  405e2a:	d1d1      	bne.n	405dd0 <__aeabi_dmul+0x19c>
  405e2c:	ea81 0103 	eor.w	r1, r1, r3
  405e30:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405e34:	f04f 0000 	mov.w	r0, #0
  405e38:	bd70      	pop	{r4, r5, r6, pc}
  405e3a:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  405e3e:	bf06      	itte	eq
  405e40:	4610      	moveq	r0, r2
  405e42:	4619      	moveq	r1, r3
  405e44:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  405e48:	d019      	beq.n	405e7e <__aeabi_dmul+0x24a>
  405e4a:	ea94 0f0c 	teq	r4, ip
  405e4e:	d102      	bne.n	405e56 <__aeabi_dmul+0x222>
  405e50:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  405e54:	d113      	bne.n	405e7e <__aeabi_dmul+0x24a>
  405e56:	ea95 0f0c 	teq	r5, ip
  405e5a:	d105      	bne.n	405e68 <__aeabi_dmul+0x234>
  405e5c:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  405e60:	bf1c      	itt	ne
  405e62:	4610      	movne	r0, r2
  405e64:	4619      	movne	r1, r3
  405e66:	d10a      	bne.n	405e7e <__aeabi_dmul+0x24a>
  405e68:	ea81 0103 	eor.w	r1, r1, r3
  405e6c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405e70:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  405e74:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  405e78:	f04f 0000 	mov.w	r0, #0
  405e7c:	bd70      	pop	{r4, r5, r6, pc}
  405e7e:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  405e82:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  405e86:	bd70      	pop	{r4, r5, r6, pc}

00405e88 <__aeabi_ddiv>:
  405e88:	b570      	push	{r4, r5, r6, lr}
  405e8a:	f04f 0cff 	mov.w	ip, #255	; 0xff
  405e8e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  405e92:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  405e96:	bf1d      	ittte	ne
  405e98:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  405e9c:	ea94 0f0c 	teqne	r4, ip
  405ea0:	ea95 0f0c 	teqne	r5, ip
  405ea4:	f000 f8a7 	bleq	405ff6 <__aeabi_ddiv+0x16e>
  405ea8:	eba4 0405 	sub.w	r4, r4, r5
  405eac:	ea81 0e03 	eor.w	lr, r1, r3
  405eb0:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  405eb4:	ea4f 3101 	mov.w	r1, r1, lsl #12
  405eb8:	f000 8088 	beq.w	405fcc <__aeabi_ddiv+0x144>
  405ebc:	ea4f 3303 	mov.w	r3, r3, lsl #12
  405ec0:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  405ec4:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  405ec8:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  405ecc:	ea4f 2202 	mov.w	r2, r2, lsl #8
  405ed0:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  405ed4:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  405ed8:	ea4f 2600 	mov.w	r6, r0, lsl #8
  405edc:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  405ee0:	429d      	cmp	r5, r3
  405ee2:	bf08      	it	eq
  405ee4:	4296      	cmpeq	r6, r2
  405ee6:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  405eea:	f504 7440 	add.w	r4, r4, #768	; 0x300
  405eee:	d202      	bcs.n	405ef6 <__aeabi_ddiv+0x6e>
  405ef0:	085b      	lsrs	r3, r3, #1
  405ef2:	ea4f 0232 	mov.w	r2, r2, rrx
  405ef6:	1ab6      	subs	r6, r6, r2
  405ef8:	eb65 0503 	sbc.w	r5, r5, r3
  405efc:	085b      	lsrs	r3, r3, #1
  405efe:	ea4f 0232 	mov.w	r2, r2, rrx
  405f02:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  405f06:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  405f0a:	ebb6 0e02 	subs.w	lr, r6, r2
  405f0e:	eb75 0e03 	sbcs.w	lr, r5, r3
  405f12:	bf22      	ittt	cs
  405f14:	1ab6      	subcs	r6, r6, r2
  405f16:	4675      	movcs	r5, lr
  405f18:	ea40 000c 	orrcs.w	r0, r0, ip
  405f1c:	085b      	lsrs	r3, r3, #1
  405f1e:	ea4f 0232 	mov.w	r2, r2, rrx
  405f22:	ebb6 0e02 	subs.w	lr, r6, r2
  405f26:	eb75 0e03 	sbcs.w	lr, r5, r3
  405f2a:	bf22      	ittt	cs
  405f2c:	1ab6      	subcs	r6, r6, r2
  405f2e:	4675      	movcs	r5, lr
  405f30:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  405f34:	085b      	lsrs	r3, r3, #1
  405f36:	ea4f 0232 	mov.w	r2, r2, rrx
  405f3a:	ebb6 0e02 	subs.w	lr, r6, r2
  405f3e:	eb75 0e03 	sbcs.w	lr, r5, r3
  405f42:	bf22      	ittt	cs
  405f44:	1ab6      	subcs	r6, r6, r2
  405f46:	4675      	movcs	r5, lr
  405f48:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  405f4c:	085b      	lsrs	r3, r3, #1
  405f4e:	ea4f 0232 	mov.w	r2, r2, rrx
  405f52:	ebb6 0e02 	subs.w	lr, r6, r2
  405f56:	eb75 0e03 	sbcs.w	lr, r5, r3
  405f5a:	bf22      	ittt	cs
  405f5c:	1ab6      	subcs	r6, r6, r2
  405f5e:	4675      	movcs	r5, lr
  405f60:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  405f64:	ea55 0e06 	orrs.w	lr, r5, r6
  405f68:	d018      	beq.n	405f9c <__aeabi_ddiv+0x114>
  405f6a:	ea4f 1505 	mov.w	r5, r5, lsl #4
  405f6e:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  405f72:	ea4f 1606 	mov.w	r6, r6, lsl #4
  405f76:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  405f7a:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  405f7e:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  405f82:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  405f86:	d1c0      	bne.n	405f0a <__aeabi_ddiv+0x82>
  405f88:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405f8c:	d10b      	bne.n	405fa6 <__aeabi_ddiv+0x11e>
  405f8e:	ea41 0100 	orr.w	r1, r1, r0
  405f92:	f04f 0000 	mov.w	r0, #0
  405f96:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  405f9a:	e7b6      	b.n	405f0a <__aeabi_ddiv+0x82>
  405f9c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405fa0:	bf04      	itt	eq
  405fa2:	4301      	orreq	r1, r0
  405fa4:	2000      	moveq	r0, #0
  405fa6:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  405faa:	bf88      	it	hi
  405fac:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  405fb0:	f63f aeaf 	bhi.w	405d12 <__aeabi_dmul+0xde>
  405fb4:	ebb5 0c03 	subs.w	ip, r5, r3
  405fb8:	bf04      	itt	eq
  405fba:	ebb6 0c02 	subseq.w	ip, r6, r2
  405fbe:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  405fc2:	f150 0000 	adcs.w	r0, r0, #0
  405fc6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  405fca:	bd70      	pop	{r4, r5, r6, pc}
  405fcc:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  405fd0:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  405fd4:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  405fd8:	bfc2      	ittt	gt
  405fda:	ebd4 050c 	rsbsgt	r5, r4, ip
  405fde:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  405fe2:	bd70      	popgt	{r4, r5, r6, pc}
  405fe4:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  405fe8:	f04f 0e00 	mov.w	lr, #0
  405fec:	3c01      	subs	r4, #1
  405fee:	e690      	b.n	405d12 <__aeabi_dmul+0xde>
  405ff0:	ea45 0e06 	orr.w	lr, r5, r6
  405ff4:	e68d      	b.n	405d12 <__aeabi_dmul+0xde>
  405ff6:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  405ffa:	ea94 0f0c 	teq	r4, ip
  405ffe:	bf08      	it	eq
  406000:	ea95 0f0c 	teqeq	r5, ip
  406004:	f43f af3b 	beq.w	405e7e <__aeabi_dmul+0x24a>
  406008:	ea94 0f0c 	teq	r4, ip
  40600c:	d10a      	bne.n	406024 <__aeabi_ddiv+0x19c>
  40600e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  406012:	f47f af34 	bne.w	405e7e <__aeabi_dmul+0x24a>
  406016:	ea95 0f0c 	teq	r5, ip
  40601a:	f47f af25 	bne.w	405e68 <__aeabi_dmul+0x234>
  40601e:	4610      	mov	r0, r2
  406020:	4619      	mov	r1, r3
  406022:	e72c      	b.n	405e7e <__aeabi_dmul+0x24a>
  406024:	ea95 0f0c 	teq	r5, ip
  406028:	d106      	bne.n	406038 <__aeabi_ddiv+0x1b0>
  40602a:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  40602e:	f43f aefd 	beq.w	405e2c <__aeabi_dmul+0x1f8>
  406032:	4610      	mov	r0, r2
  406034:	4619      	mov	r1, r3
  406036:	e722      	b.n	405e7e <__aeabi_dmul+0x24a>
  406038:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  40603c:	bf18      	it	ne
  40603e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  406042:	f47f aec5 	bne.w	405dd0 <__aeabi_dmul+0x19c>
  406046:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  40604a:	f47f af0d 	bne.w	405e68 <__aeabi_dmul+0x234>
  40604e:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  406052:	f47f aeeb 	bne.w	405e2c <__aeabi_dmul+0x1f8>
  406056:	e712      	b.n	405e7e <__aeabi_dmul+0x24a>

00406058 <__gedf2>:
  406058:	f04f 3cff 	mov.w	ip, #4294967295
  40605c:	e006      	b.n	40606c <__cmpdf2+0x4>
  40605e:	bf00      	nop

00406060 <__ledf2>:
  406060:	f04f 0c01 	mov.w	ip, #1
  406064:	e002      	b.n	40606c <__cmpdf2+0x4>
  406066:	bf00      	nop

00406068 <__cmpdf2>:
  406068:	f04f 0c01 	mov.w	ip, #1
  40606c:	f84d cd04 	str.w	ip, [sp, #-4]!
  406070:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  406074:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406078:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  40607c:	bf18      	it	ne
  40607e:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  406082:	d01b      	beq.n	4060bc <__cmpdf2+0x54>
  406084:	b001      	add	sp, #4
  406086:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  40608a:	bf0c      	ite	eq
  40608c:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  406090:	ea91 0f03 	teqne	r1, r3
  406094:	bf02      	ittt	eq
  406096:	ea90 0f02 	teqeq	r0, r2
  40609a:	2000      	moveq	r0, #0
  40609c:	4770      	bxeq	lr
  40609e:	f110 0f00 	cmn.w	r0, #0
  4060a2:	ea91 0f03 	teq	r1, r3
  4060a6:	bf58      	it	pl
  4060a8:	4299      	cmppl	r1, r3
  4060aa:	bf08      	it	eq
  4060ac:	4290      	cmpeq	r0, r2
  4060ae:	bf2c      	ite	cs
  4060b0:	17d8      	asrcs	r0, r3, #31
  4060b2:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  4060b6:	f040 0001 	orr.w	r0, r0, #1
  4060ba:	4770      	bx	lr
  4060bc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  4060c0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4060c4:	d102      	bne.n	4060cc <__cmpdf2+0x64>
  4060c6:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  4060ca:	d107      	bne.n	4060dc <__cmpdf2+0x74>
  4060cc:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  4060d0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4060d4:	d1d6      	bne.n	406084 <__cmpdf2+0x1c>
  4060d6:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  4060da:	d0d3      	beq.n	406084 <__cmpdf2+0x1c>
  4060dc:	f85d 0b04 	ldr.w	r0, [sp], #4
  4060e0:	4770      	bx	lr
  4060e2:	bf00      	nop

004060e4 <__aeabi_cdrcmple>:
  4060e4:	4684      	mov	ip, r0
  4060e6:	4610      	mov	r0, r2
  4060e8:	4662      	mov	r2, ip
  4060ea:	468c      	mov	ip, r1
  4060ec:	4619      	mov	r1, r3
  4060ee:	4663      	mov	r3, ip
  4060f0:	e000      	b.n	4060f4 <__aeabi_cdcmpeq>
  4060f2:	bf00      	nop

004060f4 <__aeabi_cdcmpeq>:
  4060f4:	b501      	push	{r0, lr}
  4060f6:	f7ff ffb7 	bl	406068 <__cmpdf2>
  4060fa:	2800      	cmp	r0, #0
  4060fc:	bf48      	it	mi
  4060fe:	f110 0f00 	cmnmi.w	r0, #0
  406102:	bd01      	pop	{r0, pc}

00406104 <__aeabi_dcmpeq>:
  406104:	f84d ed08 	str.w	lr, [sp, #-8]!
  406108:	f7ff fff4 	bl	4060f4 <__aeabi_cdcmpeq>
  40610c:	bf0c      	ite	eq
  40610e:	2001      	moveq	r0, #1
  406110:	2000      	movne	r0, #0
  406112:	f85d fb08 	ldr.w	pc, [sp], #8
  406116:	bf00      	nop

00406118 <__aeabi_dcmplt>:
  406118:	f84d ed08 	str.w	lr, [sp, #-8]!
  40611c:	f7ff ffea 	bl	4060f4 <__aeabi_cdcmpeq>
  406120:	bf34      	ite	cc
  406122:	2001      	movcc	r0, #1
  406124:	2000      	movcs	r0, #0
  406126:	f85d fb08 	ldr.w	pc, [sp], #8
  40612a:	bf00      	nop

0040612c <__aeabi_dcmple>:
  40612c:	f84d ed08 	str.w	lr, [sp, #-8]!
  406130:	f7ff ffe0 	bl	4060f4 <__aeabi_cdcmpeq>
  406134:	bf94      	ite	ls
  406136:	2001      	movls	r0, #1
  406138:	2000      	movhi	r0, #0
  40613a:	f85d fb08 	ldr.w	pc, [sp], #8
  40613e:	bf00      	nop

00406140 <__aeabi_dcmpge>:
  406140:	f84d ed08 	str.w	lr, [sp, #-8]!
  406144:	f7ff ffce 	bl	4060e4 <__aeabi_cdrcmple>
  406148:	bf94      	ite	ls
  40614a:	2001      	movls	r0, #1
  40614c:	2000      	movhi	r0, #0
  40614e:	f85d fb08 	ldr.w	pc, [sp], #8
  406152:	bf00      	nop

00406154 <__aeabi_dcmpgt>:
  406154:	f84d ed08 	str.w	lr, [sp, #-8]!
  406158:	f7ff ffc4 	bl	4060e4 <__aeabi_cdrcmple>
  40615c:	bf34      	ite	cc
  40615e:	2001      	movcc	r0, #1
  406160:	2000      	movcs	r0, #0
  406162:	f85d fb08 	ldr.w	pc, [sp], #8
  406166:	bf00      	nop

00406168 <__aeabi_dcmpun>:
  406168:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  40616c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406170:	d102      	bne.n	406178 <__aeabi_dcmpun+0x10>
  406172:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  406176:	d10a      	bne.n	40618e <__aeabi_dcmpun+0x26>
  406178:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  40617c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406180:	d102      	bne.n	406188 <__aeabi_dcmpun+0x20>
  406182:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  406186:	d102      	bne.n	40618e <__aeabi_dcmpun+0x26>
  406188:	f04f 0000 	mov.w	r0, #0
  40618c:	4770      	bx	lr
  40618e:	f04f 0001 	mov.w	r0, #1
  406192:	4770      	bx	lr

00406194 <__aeabi_d2iz>:
  406194:	ea4f 0241 	mov.w	r2, r1, lsl #1
  406198:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  40619c:	d215      	bcs.n	4061ca <__aeabi_d2iz+0x36>
  40619e:	d511      	bpl.n	4061c4 <__aeabi_d2iz+0x30>
  4061a0:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  4061a4:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  4061a8:	d912      	bls.n	4061d0 <__aeabi_d2iz+0x3c>
  4061aa:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  4061ae:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  4061b2:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  4061b6:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  4061ba:	fa23 f002 	lsr.w	r0, r3, r2
  4061be:	bf18      	it	ne
  4061c0:	4240      	negne	r0, r0
  4061c2:	4770      	bx	lr
  4061c4:	f04f 0000 	mov.w	r0, #0
  4061c8:	4770      	bx	lr
  4061ca:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  4061ce:	d105      	bne.n	4061dc <__aeabi_d2iz+0x48>
  4061d0:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  4061d4:	bf08      	it	eq
  4061d6:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  4061da:	4770      	bx	lr
  4061dc:	f04f 0000 	mov.w	r0, #0
  4061e0:	4770      	bx	lr
  4061e2:	bf00      	nop

004061e4 <sysfont_glyphs>:
	...
  406204:	0030 0030 0030 0030 0030 0030 0000 0030     0.0.0.0.0.0...0.
  406214:	0030 0000 0000 0000 0000 0000 006c 006c     0...........l.l.
  406224:	006c 006c 0000 0000 0000 0000 0000 0000     l.l.............
	...
  40623c:	0000 0028 0028 007c 0028 0028 007c 0028     ..(.(.|.(.(.|.(.
  40624c:	0028 0000 0000 0000 0000 0000 0010 003c     (.............<.
  40625c:	0040 0020 0010 0008 0004 0078 0010 0000     @. .......x.....
	...
  406274:	0000 007c 00a4 00a8 0050 0028 0054 0094     ..|.....P.(.T...
  406284:	0088 0000 0000 0000 0000 0000 0060 0090     ............`...
  406294:	0090 0090 0060 0094 0088 0088 0070 0000     ....`.......p...
	...
  4062ac:	0010 0010 0010 0000 0000 0000 0000 0000     ................
	...
  4062c8:	0008 0010 0020 0020 0020 0020 0020 0020     .... . . . . . .
  4062d8:	0010 0008 0000 0000 0000 0000 0020 0010     ............ ...
  4062e8:	0008 0008 0008 0008 0008 0008 0010 0020     .............. .
  4062f8:	0000 0000 0000 0028 0010 007c 0010 0028     ......(...|...(.
	...
  406320:	0010 0010 0010 00fe 0010 0010 0010 0000     ................
	...
  406348:	0010 0030 0020 0000 0000 0000 0000 0000     ..0. ...........
  406358:	0000 0000 0000 007c 0000 0000 0000 0000     ......|.........
	...
  40637c:	0000 0030 0030 0000 0000 0000 0000 0000     ..0.0...........
  40638c:	0000 0008 0008 0010 0010 0020 0020 0040     .......... . .@.
  40639c:	0040 0000 0000 0000 0000 0000 0000 0078     @.............x.
  4063ac:	0084 008c 0094 00a4 00c4 0084 0078 0000     ............x...
	...
  4063c4:	0000 0010 0030 0050 0010 0010 0010 0010     ....0.P.........
  4063d4:	007c 0000 0000 0000 0000 0000 0000 0070     |.............p.
  4063e4:	0088 0008 0010 0020 0040 0080 00f8 0000     ...... .@.......
	...
  4063fc:	0000 0070 0088 0008 0030 0008 0008 0088     ..p.....0.......
  40640c:	0070 0000 0000 0000 0000 0000 0000 0008     p...............
  40641c:	0018 0028 0048 0088 00fc 0008 0008 0000     ..(.H...........
	...
  406434:	0000 0078 0080 0080 00f0 0008 0008 0008     ..x.............
  406444:	00f0 0000 0000 0000 0000 0000 0000 0030     ..............0.
  406454:	0040 0080 00f0 0088 0088 0088 0070 0000     @...........p...
	...
  40646c:	0000 00f8 0008 0010 0010 0020 0020 0040     .......... . .@.
  40647c:	0040 0000 0000 0000 0000 0000 0000 0070     @.............p.
  40648c:	0088 0088 0070 0088 0088 0088 0070 0000     ....p.......p...
	...
  4064a4:	0000 0070 0088 0088 0088 0078 0008 0010     ..p.......x.....
  4064b4:	0060 0000 0000 0000 0000 0000 0000 0000     `...............
  4064c4:	0000 0030 0030 0000 0000 0030 0030 0000     ..0.0.....0.0...
	...
  4064e0:	0000 0030 0030 0000 0000 0030 0030 0060     ..0.0.....0.0.`.
  4064f0:	0040 0000 0000 0000 0000 0000 0008 0010     @...............
  406500:	0020 0040 0020 0010 0008 0000 0000 0000      .@. ...........
	...
  40651c:	007c 0000 007c 0000 0000 0000 0000 0000     |...|...........
	...
  406534:	0040 0020 0010 0008 0010 0020 0040 0000     @. ....... .@...
	...
  40654c:	0000 0030 0048 0008 0010 0020 0000 0000     ..0.H..... .....
  40655c:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
  40656c:	003c 0042 009a 00aa 00aa 00be 0080 0078     <.B...........x.
	...
  406584:	0000 0010 0028 0028 0044 007c 0044 0044     ....(.(.D.|.D.D.
  406594:	0044 0000 0000 0000 0000 0000 0000 00f8     D...............
  4065a4:	0084 0084 00f8 0084 0084 0084 00f8 0000     ................
	...
  4065bc:	0000 003c 0040 0080 0080 0080 0080 0040     ..<.@.........@.
  4065cc:	003c 0000 0000 0000 0000 0000 0000 00f0     <...............
  4065dc:	0088 0084 0084 0084 0084 0088 00f0 0000     ................
	...
  4065f4:	0000 00f8 0080 0080 00f0 0080 0080 0080     ................
  406604:	00f8 0000 0000 0000 0000 0000 0000 00f8     ................
  406614:	0080 0080 00f8 0080 0080 0080 0080 0000     ................
	...
  40662c:	0000 003c 0040 0080 0080 009c 0084 0044     ..<.@.........D.
  40663c:	0038 0000 0000 0000 0000 0000 0000 0088     8...............
  40664c:	0088 0088 00f8 0088 0088 0088 0088 0000     ................
	...
  406664:	0000 00f8 0020 0020 0020 0020 0020 0020     .... . . . . . .
  406674:	00f8 0000 0000 0000 0000 0000 0000 00f8     ................
  406684:	0008 0008 0008 0008 0008 0008 00f0 0000     ................
	...
  40669c:	0000 0084 0088 0090 00a0 00d0 0088 0084     ................
  4066ac:	0084 0000 0000 0000 0000 0000 0000 0080     ................
  4066bc:	0080 0080 0080 0080 0080 0080 00fc 0000     ................
	...
  4066d4:	0000 0084 00cc 00cc 00b4 00b4 0084 0084     ................
  4066e4:	0084 0000 0000 0000 0000 0000 0000 0084     ................
  4066f4:	00c4 00c4 00a4 00a4 0094 0094 008c 0000     ................
	...
  40670c:	0000 0078 0084 0084 0084 0084 0084 0084     ..x.............
  40671c:	0078 0000 0000 0000 0000 0000 0000 00f8     x...............
  40672c:	0084 0084 0084 00f8 0080 0080 0080 0000     ................
	...
  406744:	0000 0078 0084 0084 0084 0084 0084 0084     ..x.............
  406754:	0078 0020 0018 0000 0000 0000 0000 00f8     x. .............
  406764:	0084 0084 0084 00f8 0088 0084 0084 0000     ................
	...
  40677c:	0000 007c 0080 0080 0060 0018 0004 0004     ..|.....`.......
  40678c:	00f8 0000 0000 0000 0000 0000 0000 00f8     ................
  40679c:	0020 0020 0020 0020 0020 0020 0020 0000      . . . . . . ...
	...
  4067b4:	0000 0084 0084 0084 0084 0084 0084 0084     ................
  4067c4:	0078 0000 0000 0000 0000 0000 0000 0084     x...............
  4067d4:	0084 0084 0048 0048 0048 0030 0030 0000     ....H.H.H.0.0...
	...
  4067ec:	0000 0088 00a8 00a8 00a8 00a8 00a8 0050     ..............P.
  4067fc:	0050 0000 0000 0000 0000 0000 0000 0088     P...............
  40680c:	0088 0050 0020 0020 0050 0088 0088 0000     ..P. . .P.......
	...
  406824:	0000 0088 0088 0088 0050 0050 0020 0020     ........P.P. . .
  406834:	0020 0000 0000 0000 0000 0000 0000 00fc      ...............
  406844:	0004 0008 0010 0020 0040 0080 00fc 0000     ...... .@.......
	...
  40685c:	0070 0040 0040 0040 0040 0040 0040 0040     p.@.@.@.@.@.@.@.
  40686c:	0040 0040 0070 0000 0000 0000 0040 0040     @.@.p.......@.@.
  40687c:	0020 0020 0020 0010 0010 0010 0008 0008      . . ...........
	...
  406894:	0038 0008 0008 0008 0008 0008 0008 0008     8...............
  4068a4:	0008 0008 0038 0000 0000 0000 0010 0028     ....8.........(.
  4068b4:	0044 0000 0000 0000 0000 0000 0000 0000     D...............
	...
  4068dc:	0038 0000 0000 0000 0000 0000 0000 0020     8............. .
  4068ec:	0010 0000 0000 0000 0000 0000 0000 0000     ................
	...
  406908:	0000 0070 0008 0008 0078 0088 007c 0000     ..p.....x...|...
	...
  406920:	0080 0080 0080 00f8 0084 0084 0084 0084     ................
  406930:	00f8 0000 0000 0000 0000 0000 0000 0000     ................
  406940:	0000 0078 0080 0080 0080 0080 0078 0000     ..x.........x...
	...
  406958:	0004 0004 0004 007c 0084 0084 0084 008c     ......|.........
  406968:	0074 0000 0000 0000 0000 0000 0000 0000     t...............
  406978:	0000 0078 0084 00fc 0080 0080 007c 0000     ..x.........|...
	...
  406990:	001c 0020 0020 00fc 0020 0020 0020 0020     .. . ... . . . .
  4069a0:	00fc 0000 0000 0000 0000 0000 0000 0000     ................
  4069b0:	0000 007c 0084 0084 0084 0084 007c 0004     ..|.........|...
  4069c0:	0078 0000 0000 0000 0080 0080 0080 00b8     x...............
  4069d0:	00c4 0084 0084 0084 0084 0000 0000 0000     ................
  4069e0:	0000 0000 0000 0010 0000 0070 0010 0010     ..........p.....
  4069f0:	0010 0010 007c 0000 0000 0000 0000 0000     ....|...........
  406a00:	0000 0008 0000 0078 0008 0008 0008 0008     ......x.........
  406a10:	0008 0008 0008 0070 0000 0000 0080 0080     ......p.........
  406a20:	0080 0088 0090 00a0 00d0 0088 0088 0000     ................
	...
  406a38:	00e0 0020 0020 0020 0020 0020 0020 0020     .. . . . . . . .
  406a48:	00f8 0000 0000 0000 0000 0000 0000 0000     ................
  406a58:	0000 00a4 00fc 00a4 00a4 00a4 00a4 0000     ................
	...
  406a74:	0000 00b8 00c4 0084 0084 0084 0084 0000     ................
	...
  406a90:	0000 0078 0084 0084 0084 0084 0078 0000     ..x.........x...
	...
  406aac:	0000 00b8 00c4 0084 0084 0084 00f8 0080     ................
  406abc:	0080 0000 0000 0000 0000 0000 0000 007c     ..............|.
  406acc:	0084 0084 0084 0084 007c 0004 0004 0000     ........|.......
	...
  406ae4:	0000 00d8 0060 0040 0040 0040 00f0 0000     ....`.@.@.@.....
	...
  406b00:	0000 0078 0080 0040 0030 0008 00f0 0000     ..x...@.0.......
	...
  406b1c:	0020 00fc 0020 0020 0020 0020 001c 0000      ... . . . .....
	...
  406b38:	0000 0088 0088 0088 0088 0088 007c 0000     ............|...
	...
  406b54:	0000 0084 0084 0084 0048 0048 0030 0000     ........H.H.0...
	...
  406b70:	0000 0088 00a8 00a8 00a8 00a8 0050 0000     ............P...
	...
  406b8c:	0000 0088 0050 0020 0020 0050 0088 0000     ....P. . .P.....
	...
  406ba8:	0000 0084 0084 0048 0048 0030 0010 0020     ......H.H.0... .
  406bb8:	0040 0000 0000 0000 0000 0000 0000 00f8     @...............
  406bc8:	0008 0010 0020 0040 00f8 0000 0000 0000     .... .@.........
  406bd8:	0000 0000 0010 0020 0020 0010 0020 0020     ...... . ... . .
  406be8:	0010 0020 0020 0010 0000 0000 0000 0000     .. . ...........
  406bf8:	0010 0010 0010 0010 0000 0000 0010 0010     ................
  406c08:	0010 0010 0000 0000 0000 0000 0020 0010     ............ ...
  406c18:	0010 0020 0010 0010 0020 0010 0010 0020     .. ..... ..... .
  406c28:	0000 0000 07e2 0000 0003 0000 0013 0000     ................
  406c38:	000c 0000 000f 0000 002d 0000 0001 0000     ........-.......
  406c48:	2e25 6432 3a20 2520 322e 2064 203a 2e25     %.2d : %.2d : %.
  406c58:	6432 0000 2e25 6432 3a20 2520 322e 0064     2d..%.2d : %.2d.

00406c68 <_global_impure_ptr>:
  406c68:	0028 2040 4e49 0046 6e69 0066 414e 004e     (.@ INF.inf.NAN.
  406c78:	616e 006e 3130 3332 3534 3736 3938 4241     nan.0123456789AB
  406c88:	4443 4645 0000 0000 3130 3332 3534 3736     CDEF....01234567
  406c98:	3938 6261 6463 6665 0000 0000 6e28 6c75     89abcdef....(nul
  406ca8:	296c 0000 0030 0000                         l)..0...

00406cb0 <blanks.7223>:
  406cb0:	2020 2020 2020 2020 2020 2020 2020 2020                     

00406cc0 <zeroes.7224>:
  406cc0:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
  406cd0:	6e49 6966 696e 7974 0000 0000 614e 004e     Infinity....NaN.

00406ce0 <__mprec_bigtens>:
  406ce0:	8000 37e0 c379 4341 6e17 b505 b8b5 4693     ...7y.AC.n.....F
  406cf0:	f9f5 e93f 4f03 4d38 1d32 f930 7748 5a82     ..?..O8M2.0.Hw.Z
  406d00:	bf3c 7f73 4fdd 7515                         <.s..O.u

00406d08 <__mprec_tens>:
  406d08:	0000 0000 0000 3ff0 0000 0000 0000 4024     .......?......$@
  406d18:	0000 0000 0000 4059 0000 0000 4000 408f     ......Y@.....@.@
  406d28:	0000 0000 8800 40c3 0000 0000 6a00 40f8     .......@.....j.@
  406d38:	0000 0000 8480 412e 0000 0000 12d0 4163     .......A......cA
  406d48:	0000 0000 d784 4197 0000 0000 cd65 41cd     .......A....e..A
  406d58:	0000 2000 a05f 4202 0000 e800 4876 4237     ... _..B....vH7B
  406d68:	0000 a200 1a94 426d 0000 e540 309c 42a2     ......mB..@..0.B
  406d78:	0000 1e90 bcc4 42d6 0000 2634 6bf5 430c     .......B..4&.k.C
  406d88:	8000 37e0 c379 4341 a000 85d8 3457 4376     ...7y.AC....W4vC
  406d98:	c800 674e c16d 43ab 3d00 6091 58e4 43e1     ..Ngm..C.=.`.X.C
  406da8:	8c40 78b5 af1d 4415 ef50 d6e2 1ae4 444b     @..x...DP.....KD
  406db8:	d592 064d f0cf 4480 4af6 c7e1 2d02 44b5     ..M....D.J...-.D
  406dc8:	9db4 79d9 7843 44ea                         ...yCx.D

00406dd0 <p05.6055>:
  406dd0:	0005 0000 0019 0000 007d 0000 0043 0000     ........}...C...
  406de0:	4f50 4953 0058 0000 002e 0000               POSIX.......

00406dec <_ctype_>:
  406dec:	2000 2020 2020 2020 2020 2828 2828 2028     .         ((((( 
  406dfc:	2020 2020 2020 2020 2020 2020 2020 2020                     
  406e0c:	8820 1010 1010 1010 1010 1010 1010 1010      ...............
  406e1c:	0410 0404 0404 0404 0404 1004 1010 1010     ................
  406e2c:	1010 4141 4141 4141 0101 0101 0101 0101     ..AAAAAA........
  406e3c:	0101 0101 0101 0101 0101 0101 1010 1010     ................
  406e4c:	1010 4242 4242 4242 0202 0202 0202 0202     ..BBBBBB........
  406e5c:	0202 0202 0202 0202 0202 0202 1010 1010     ................
  406e6c:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
	...

00406ef0 <_init>:
  406ef0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  406ef2:	bf00      	nop
  406ef4:	bcf8      	pop	{r3, r4, r5, r6, r7}
  406ef6:	bc08      	pop	{r3}
  406ef8:	469e      	mov	lr, r3
  406efa:	4770      	bx	lr

00406efc <__init_array_start>:
  406efc:	00403191 	.word	0x00403191

00406f00 <__frame_dummy_init_array_entry>:
  406f00:	00400165                                e.@.

00406f04 <_fini>:
  406f04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  406f06:	bf00      	nop
  406f08:	bcf8      	pop	{r3, r4, r5, r6, r7}
  406f0a:	bc08      	pop	{r3}
  406f0c:	469e      	mov	lr, r3
  406f0e:	4770      	bx	lr

00406f10 <__fini_array_start>:
  406f10:	00400141 	.word	0x00400141

Disassembly of section .relocate:

20400000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20400000:	f3bf 8f5f 	dmb	sy
20400004:	3801      	subs	r0, #1
20400006:	d1fb      	bne.n	20400000 <portable_delay_cycles>
20400008:	4770      	bx	lr
	...

2040000c <sysfont>:
2040000c:	0000 0000 61e4 0040 0e0a 7d20               .....a@... }

20400018 <g_interrupt_enabled>:
20400018:	0001 0000                                   ....

2040001c <SystemCoreClock>:
2040001c:	0900 003d                                   ..=.

20400020 <_impure_ptr>:
20400020:	0028 2040 0000 0000                         (.@ ....

20400028 <impure_data>:
20400028:	0000 0000 0314 2040 037c 2040 03e4 2040     ......@ |.@ ..@ 
	...
204000d0:	0001 0000 0000 0000 330e abcd 1234 e66d     .........3..4.m.
204000e0:	deec 0005 000b 0000 0000 0000 0000 0000     ................
	...

20400450 <__atexit_recursive_mutex>:
20400450:	0cac 2040                                   ..@ 

20400454 <__malloc_av_>:
	...
2040045c:	0454 2040 0454 2040 045c 2040 045c 2040     T.@ T.@ \.@ \.@ 
2040046c:	0464 2040 0464 2040 046c 2040 046c 2040     d.@ d.@ l.@ l.@ 
2040047c:	0474 2040 0474 2040 047c 2040 047c 2040     t.@ t.@ |.@ |.@ 
2040048c:	0484 2040 0484 2040 048c 2040 048c 2040     ..@ ..@ ..@ ..@ 
2040049c:	0494 2040 0494 2040 049c 2040 049c 2040     ..@ ..@ ..@ ..@ 
204004ac:	04a4 2040 04a4 2040 04ac 2040 04ac 2040     ..@ ..@ ..@ ..@ 
204004bc:	04b4 2040 04b4 2040 04bc 2040 04bc 2040     ..@ ..@ ..@ ..@ 
204004cc:	04c4 2040 04c4 2040 04cc 2040 04cc 2040     ..@ ..@ ..@ ..@ 
204004dc:	04d4 2040 04d4 2040 04dc 2040 04dc 2040     ..@ ..@ ..@ ..@ 
204004ec:	04e4 2040 04e4 2040 04ec 2040 04ec 2040     ..@ ..@ ..@ ..@ 
204004fc:	04f4 2040 04f4 2040 04fc 2040 04fc 2040     ..@ ..@ ..@ ..@ 
2040050c:	0504 2040 0504 2040 050c 2040 050c 2040     ..@ ..@ ..@ ..@ 
2040051c:	0514 2040 0514 2040 051c 2040 051c 2040     ..@ ..@ ..@ ..@ 
2040052c:	0524 2040 0524 2040 052c 2040 052c 2040     $.@ $.@ ,.@ ,.@ 
2040053c:	0534 2040 0534 2040 053c 2040 053c 2040     4.@ 4.@ <.@ <.@ 
2040054c:	0544 2040 0544 2040 054c 2040 054c 2040     D.@ D.@ L.@ L.@ 
2040055c:	0554 2040 0554 2040 055c 2040 055c 2040     T.@ T.@ \.@ \.@ 
2040056c:	0564 2040 0564 2040 056c 2040 056c 2040     d.@ d.@ l.@ l.@ 
2040057c:	0574 2040 0574 2040 057c 2040 057c 2040     t.@ t.@ |.@ |.@ 
2040058c:	0584 2040 0584 2040 058c 2040 058c 2040     ..@ ..@ ..@ ..@ 
2040059c:	0594 2040 0594 2040 059c 2040 059c 2040     ..@ ..@ ..@ ..@ 
204005ac:	05a4 2040 05a4 2040 05ac 2040 05ac 2040     ..@ ..@ ..@ ..@ 
204005bc:	05b4 2040 05b4 2040 05bc 2040 05bc 2040     ..@ ..@ ..@ ..@ 
204005cc:	05c4 2040 05c4 2040 05cc 2040 05cc 2040     ..@ ..@ ..@ ..@ 
204005dc:	05d4 2040 05d4 2040 05dc 2040 05dc 2040     ..@ ..@ ..@ ..@ 
204005ec:	05e4 2040 05e4 2040 05ec 2040 05ec 2040     ..@ ..@ ..@ ..@ 
204005fc:	05f4 2040 05f4 2040 05fc 2040 05fc 2040     ..@ ..@ ..@ ..@ 
2040060c:	0604 2040 0604 2040 060c 2040 060c 2040     ..@ ..@ ..@ ..@ 
2040061c:	0614 2040 0614 2040 061c 2040 061c 2040     ..@ ..@ ..@ ..@ 
2040062c:	0624 2040 0624 2040 062c 2040 062c 2040     $.@ $.@ ,.@ ,.@ 
2040063c:	0634 2040 0634 2040 063c 2040 063c 2040     4.@ 4.@ <.@ <.@ 
2040064c:	0644 2040 0644 2040 064c 2040 064c 2040     D.@ D.@ L.@ L.@ 
2040065c:	0654 2040 0654 2040 065c 2040 065c 2040     T.@ T.@ \.@ \.@ 
2040066c:	0664 2040 0664 2040 066c 2040 066c 2040     d.@ d.@ l.@ l.@ 
2040067c:	0674 2040 0674 2040 067c 2040 067c 2040     t.@ t.@ |.@ |.@ 
2040068c:	0684 2040 0684 2040 068c 2040 068c 2040     ..@ ..@ ..@ ..@ 
2040069c:	0694 2040 0694 2040 069c 2040 069c 2040     ..@ ..@ ..@ ..@ 
204006ac:	06a4 2040 06a4 2040 06ac 2040 06ac 2040     ..@ ..@ ..@ ..@ 
204006bc:	06b4 2040 06b4 2040 06bc 2040 06bc 2040     ..@ ..@ ..@ ..@ 
204006cc:	06c4 2040 06c4 2040 06cc 2040 06cc 2040     ..@ ..@ ..@ ..@ 
204006dc:	06d4 2040 06d4 2040 06dc 2040 06dc 2040     ..@ ..@ ..@ ..@ 
204006ec:	06e4 2040 06e4 2040 06ec 2040 06ec 2040     ..@ ..@ ..@ ..@ 
204006fc:	06f4 2040 06f4 2040 06fc 2040 06fc 2040     ..@ ..@ ..@ ..@ 
2040070c:	0704 2040 0704 2040 070c 2040 070c 2040     ..@ ..@ ..@ ..@ 
2040071c:	0714 2040 0714 2040 071c 2040 071c 2040     ..@ ..@ ..@ ..@ 
2040072c:	0724 2040 0724 2040 072c 2040 072c 2040     $.@ $.@ ,.@ ,.@ 
2040073c:	0734 2040 0734 2040 073c 2040 073c 2040     4.@ 4.@ <.@ <.@ 
2040074c:	0744 2040 0744 2040 074c 2040 074c 2040     D.@ D.@ L.@ L.@ 
2040075c:	0754 2040 0754 2040 075c 2040 075c 2040     T.@ T.@ \.@ \.@ 
2040076c:	0764 2040 0764 2040 076c 2040 076c 2040     d.@ d.@ l.@ l.@ 
2040077c:	0774 2040 0774 2040 077c 2040 077c 2040     t.@ t.@ |.@ |.@ 
2040078c:	0784 2040 0784 2040 078c 2040 078c 2040     ..@ ..@ ..@ ..@ 
2040079c:	0794 2040 0794 2040 079c 2040 079c 2040     ..@ ..@ ..@ ..@ 
204007ac:	07a4 2040 07a4 2040 07ac 2040 07ac 2040     ..@ ..@ ..@ ..@ 
204007bc:	07b4 2040 07b4 2040 07bc 2040 07bc 2040     ..@ ..@ ..@ ..@ 
204007cc:	07c4 2040 07c4 2040 07cc 2040 07cc 2040     ..@ ..@ ..@ ..@ 
204007dc:	07d4 2040 07d4 2040 07dc 2040 07dc 2040     ..@ ..@ ..@ ..@ 
204007ec:	07e4 2040 07e4 2040 07ec 2040 07ec 2040     ..@ ..@ ..@ ..@ 
204007fc:	07f4 2040 07f4 2040 07fc 2040 07fc 2040     ..@ ..@ ..@ ..@ 
2040080c:	0804 2040 0804 2040 080c 2040 080c 2040     ..@ ..@ ..@ ..@ 
2040081c:	0814 2040 0814 2040 081c 2040 081c 2040     ..@ ..@ ..@ ..@ 
2040082c:	0824 2040 0824 2040 082c 2040 082c 2040     $.@ $.@ ,.@ ,.@ 
2040083c:	0834 2040 0834 2040 083c 2040 083c 2040     4.@ 4.@ <.@ <.@ 
2040084c:	0844 2040 0844 2040 084c 2040 084c 2040     D.@ D.@ L.@ L.@ 

2040085c <__malloc_sbrk_base>:
2040085c:	ffff ffff                                   ....

20400860 <__malloc_trim_threshold>:
20400860:	0000 0002                                   ....

20400864 <__global_locale>:
20400864:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400884:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008a4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008c4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008e4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400904:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400924:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400944:	58a9 0040 5469 0040 0000 0000 6dec 0040     .X@.iT@......m@.
20400954:	6de8 0040 6c8c 0040 6c8c 0040 6c8c 0040     .m@..l@..l@..l@.
20400964:	6c8c 0040 6c8c 0040 6c8c 0040 6c8c 0040     .l@..l@..l@..l@.
20400974:	6c8c 0040 6c8c 0040 ffff ffff ffff ffff     .l@..l@.........
20400984:	ffff ffff ffff 0000 0001 5341 4943 0049     ..........ASCII.
	...
204009ac:	0000 5341 4943 0049 0000 0000 0000 0000     ..ASCII.........
	...
